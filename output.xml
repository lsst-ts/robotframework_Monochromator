<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.0.dev1 (Python 3.6.3 on linux)" generated="20180505 21:49:28.661">
<suite id="s1" name="UpdateMonochromatorParemeters" source="/home/andres/robotframework_Monochromator/UpdateMonochromatorParemeters.robot">
<test id="s1-t1" name="Start Command">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Issue Start Command.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:49:38.902" endtime="20180505 21:49:38.903"></status>
</kw>
<kw name="Issue Start Command" library="atMonochromator_SAL">
<status status="PASS" starttime="20180505 21:49:38.903" endtime="20180505 21:49:50.360"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify system enters Disabled State.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:49:50.360" endtime="20180505 21:49:50.361"></status>
</kw>
<kw name="Verify Summary State Event" library="common">
<arguments>
<arg>${SummaryDisabled}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every sub-State transition triggers a Summary State Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:49:50.361" endtime="20180505 21:49:50.361"></status>
</kw>
<kw name="Get Event Summary State" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:49:50.362" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:49:50.362" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SummaryStateC object at 0x7f86e8cce1f0&gt;</msg>
<status status="PASS" starttime="20180505 21:49:50.361" endtime="20180505 21:49:50.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.summaryState}</arg>
</arguments>
<msg timestamp="20180505 21:49:50.362" level="INFO">1</msg>
<status status="PASS" starttime="20180505 21:49:50.362" endtime="20180505 21:49:50.362"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:49:50.362" endtime="20180505 21:49:50.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${data.summaryState}</arg>
<arg>${expectedState}</arg>
</arguments>
<msg timestamp="20180505 21:49:50.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180505 21:49:50.363" endtime="20180505 21:49:50.363"></status>
</kw>
<status status="PASS" starttime="20180505 21:49:50.361" endtime="20180505 21:49:50.363"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:49:38.902" endtime="20180505 21:49:50.363" critical="yes"></status>
</test>
<test id="s1-t2" name="Enable Command">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Issue Enable Command.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:49:50.364" endtime="20180505 21:49:50.364"></status>
</kw>
<kw name="Issue Enable Command" library="atMonochromator_SAL">
<status status="PASS" starttime="20180505 21:49:50.364" endtime="20180505 21:50:01.737"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify system enters Enabled State.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:01.737" endtime="20180505 21:50:01.738"></status>
</kw>
<kw name="Verify Summary State Event" library="common">
<arguments>
<arg>${SummaryEnabled}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every sub-State transition triggers a Summary State Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:01.739" endtime="20180505 21:50:01.740"></status>
</kw>
<kw name="Get Event Summary State" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:50:01.741" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:50:01.741" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SummaryStateC object at 0x7f86e8cff730&gt;</msg>
<status status="PASS" starttime="20180505 21:50:01.740" endtime="20180505 21:50:01.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.summaryState}</arg>
</arguments>
<msg timestamp="20180505 21:50:01.742" level="INFO">2</msg>
<status status="PASS" starttime="20180505 21:50:01.741" endtime="20180505 21:50:01.742"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:01.742" endtime="20180505 21:50:01.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${data.summaryState}</arg>
<arg>${expectedState}</arg>
</arguments>
<msg timestamp="20180505 21:50:01.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180505 21:50:01.743" endtime="20180505 21:50:01.744"></status>
</kw>
<status status="PASS" starttime="20180505 21:50:01.739" endtime="20180505 21:50:01.744"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:49:50.363" endtime="20180505 21:50:01.744" critical="yes"></status>
</test>
<test id="s1-t3" name="From Enable Update Grating to set it to Blue and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:01.746" endtime="20180505 21:50:01.746"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Blue}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 21:50:01.746" level="INFO">${GR} = 1</msg>
<status status="PASS" starttime="20180505 21:50:01.746" endtime="20180505 21:50:01.747"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:01.747" endtime="20180505 21:50:13.272"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:50:13.273" endtime="20180505 21:50:13.273"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:51:11.324" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:51:11.325" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cce880&gt;</msg>
<status status="PASS" starttime="20180505 21:50:13.273" endtime="20180505 21:51:11.325"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:11.325" endtime="20180505 21:51:11.325"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:51:11.326" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 21:51:11.326" endtime="20180505 21:51:11.326"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:51:11.326" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 21:51:11.326" endtime="20180505 21:51:11.326"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:51:11.326" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 21:51:11.327" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 21:51:11.327" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 21:51:11.326" endtime="20180505 21:51:11.327"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:11.327" endtime="20180505 21:51:11.327"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:11.325" endtime="20180505 21:51:11.327"></status>
</kw>
<status status="PASS" starttime="20180505 21:50:13.273" endtime="20180505 21:51:11.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 21:51:41.328" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 21:51:11.328" endtime="20180505 21:51:41.328"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:50:01.745" endtime="20180505 21:51:41.328" critical="yes"></status>
</test>
<test id="s1-t4" name="From Enable Update Wavelength in Blue Grating and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Wavelength.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:41.329" endtime="20180505 21:51:41.329"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaWavelength}</arg>
</arguments>
<assign>
<var>${DW}</var>
</assign>
<msg timestamp="20180505 21:51:41.329" level="INFO">${DW} = 50.0</msg>
<status status="PASS" starttime="20180505 21:51:41.329" endtime="20180505 21:51:41.329"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${initWavelength}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:51:41.330" level="INFO">${Wavelength} = 400.0</msg>
<status status="PASS" starttime="20180505 21:51:41.330" endtime="20180505 21:51:41.330"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR1}</arg>
</arguments>
<assign>
<var>${MaxValue}</var>
</assign>
<msg timestamp="20180505 21:51:41.330" level="INFO">${MaxValue} = 650.0</msg>
<status status="PASS" starttime="20180505 21:51:41.330" endtime="20180505 21:51:41.330"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:41.356" endtime="20180505 21:51:41.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:51:41.357" level="INFO">400.0</msg>
<status status="PASS" starttime="20180505 21:51:41.357" endtime="20180505 21:51:41.357"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:41.370" endtime="20180505 21:51:52.703"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:41.358" endtime="20180505 21:51:52.704"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:52.704" endtime="20180505 21:51:52.704"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:51:52.712" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:51:52.713" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad93340&gt;</msg>
<status status="PASS" starttime="20180505 21:51:52.705" endtime="20180505 21:51:52.713"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:52.713" endtime="20180505 21:51:52.713"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:51:52.714" level="INFO">${value} = 400.0006</msg>
<status status="PASS" starttime="20180505 21:51:52.714" endtime="20180505 21:51:52.714"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:51:52.715" level="INFO">${ExpectedValue} = 400.0</msg>
<status status="PASS" starttime="20180505 21:51:52.714" endtime="20180505 21:51:52.715"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:51:52.715" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:51:52.715" level="INFO">Value: 400.0006</msg>
<msg timestamp="20180505 21:51:52.715" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:51:52.715" level="INFO">Expected Value: 400.0</msg>
<status status="PASS" starttime="20180505 21:51:52.715" endtime="20180505 21:51:52.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:51:52.716" level="INFO">${high} = 401.0</msg>
<status status="PASS" starttime="20180505 21:51:52.716" endtime="20180505 21:51:52.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:51:52.716" level="INFO">${low} = 399.0</msg>
<status status="PASS" starttime="20180505 21:51:52.716" endtime="20180505 21:51:52.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:52.716" endtime="20180505 21:51:52.717"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:52.717" endtime="20180505 21:51:52.717"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:52.713" endtime="20180505 21:51:52.717"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:52.704" endtime="20180505 21:51:52.717"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:52.704" endtime="20180505 21:51:52.717"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:51:52.718" level="INFO">${Wavelength} = 450.0</msg>
<status status="PASS" starttime="20180505 21:51:52.717" endtime="20180505 21:51:52.718"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:51:56.718" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:51:52.718" endtime="20180505 21:51:56.719"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:41.356" endtime="20180505 21:51:56.719"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:56.719" endtime="20180505 21:51:56.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:51:56.720" level="INFO">450.0</msg>
<status status="PASS" starttime="20180505 21:51:56.719" endtime="20180505 21:51:56.720"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:51:56.720" endtime="20180505 21:52:08.045"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:56.720" endtime="20180505 21:52:08.045"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:08.046" endtime="20180505 21:52:08.046"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:52:08.046" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:52:08.046" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad930a0&gt;</msg>
<status status="PASS" starttime="20180505 21:52:08.046" endtime="20180505 21:52:08.046"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:08.046" endtime="20180505 21:52:08.046"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:52:08.048" level="INFO">${value} = 449.9993</msg>
<status status="PASS" starttime="20180505 21:52:08.047" endtime="20180505 21:52:08.048"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:52:08.049" level="INFO">${ExpectedValue} = 450.0</msg>
<status status="PASS" starttime="20180505 21:52:08.048" endtime="20180505 21:52:08.049"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:52:08.049" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:52:08.049" level="INFO">Value: 449.9993</msg>
<msg timestamp="20180505 21:52:08.049" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:52:08.050" level="INFO">Expected Value: 450.0</msg>
<status status="PASS" starttime="20180505 21:52:08.049" endtime="20180505 21:52:08.050"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:52:08.050" level="INFO">${high} = 451.0</msg>
<status status="PASS" starttime="20180505 21:52:08.050" endtime="20180505 21:52:08.050"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:52:08.050" level="INFO">${low} = 449.0</msg>
<status status="PASS" starttime="20180505 21:52:08.050" endtime="20180505 21:52:08.050"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:08.051" endtime="20180505 21:52:08.060"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:08.060" endtime="20180505 21:52:08.060"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:08.046" endtime="20180505 21:52:08.061"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:08.045" endtime="20180505 21:52:08.061"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:08.045" endtime="20180505 21:52:08.061"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:52:08.061" level="INFO">${Wavelength} = 500.0</msg>
<status status="PASS" starttime="20180505 21:52:08.061" endtime="20180505 21:52:08.061"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:52:12.062" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:52:08.061" endtime="20180505 21:52:12.062"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:56.719" endtime="20180505 21:52:12.062"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:12.062" endtime="20180505 21:52:12.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:52:12.064" level="INFO">500.0</msg>
<status status="PASS" starttime="20180505 21:52:12.063" endtime="20180505 21:52:12.064"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:12.064" endtime="20180505 21:52:23.402"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:12.064" endtime="20180505 21:52:23.402"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:23.403" endtime="20180505 21:52:23.403"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:52:23.403" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:52:23.403" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8a928&gt;</msg>
<status status="PASS" starttime="20180505 21:52:23.403" endtime="20180505 21:52:23.403"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:23.403" endtime="20180505 21:52:23.403"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:52:23.404" level="INFO">${value} = 500.00010000000003</msg>
<status status="PASS" starttime="20180505 21:52:23.404" endtime="20180505 21:52:23.404"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:52:23.405" level="INFO">${ExpectedValue} = 500.0</msg>
<status status="PASS" starttime="20180505 21:52:23.404" endtime="20180505 21:52:23.405"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:52:23.405" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:52:23.405" level="INFO">Value: 500.00010000000003</msg>
<msg timestamp="20180505 21:52:23.405" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:52:23.405" level="INFO">Expected Value: 500.0</msg>
<status status="PASS" starttime="20180505 21:52:23.405" endtime="20180505 21:52:23.405"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:52:23.406" level="INFO">${high} = 501.0</msg>
<status status="PASS" starttime="20180505 21:52:23.405" endtime="20180505 21:52:23.406"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:52:23.406" level="INFO">${low} = 499.0</msg>
<status status="PASS" starttime="20180505 21:52:23.406" endtime="20180505 21:52:23.406"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:23.406" endtime="20180505 21:52:23.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:23.407" endtime="20180505 21:52:23.407"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:23.404" endtime="20180505 21:52:23.407"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:23.402" endtime="20180505 21:52:23.407"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:23.402" endtime="20180505 21:52:23.407"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:52:23.408" level="INFO">${Wavelength} = 550.0</msg>
<status status="PASS" starttime="20180505 21:52:23.407" endtime="20180505 21:52:23.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:52:27.409" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:52:23.408" endtime="20180505 21:52:27.409"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:12.062" endtime="20180505 21:52:27.409"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:27.409" endtime="20180505 21:52:27.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:52:27.410" level="INFO">550.0</msg>
<status status="PASS" starttime="20180505 21:52:27.410" endtime="20180505 21:52:27.410"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:27.410" endtime="20180505 21:52:38.858"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:27.410" endtime="20180505 21:52:38.858"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:38.859" endtime="20180505 21:52:38.859"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:52:38.859" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:52:38.860" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc87a0&gt;</msg>
<status status="PASS" starttime="20180505 21:52:38.859" endtime="20180505 21:52:38.860"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:38.860" endtime="20180505 21:52:38.860"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:52:38.861" level="INFO">${value} = 550.0</msg>
<status status="PASS" starttime="20180505 21:52:38.861" endtime="20180505 21:52:38.861"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:52:38.862" level="INFO">${ExpectedValue} = 550.0</msg>
<status status="PASS" starttime="20180505 21:52:38.861" endtime="20180505 21:52:38.862"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:52:38.862" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:52:38.862" level="INFO">Value: 550.0</msg>
<msg timestamp="20180505 21:52:38.862" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:52:38.862" level="INFO">Expected Value: 550.0</msg>
<status status="PASS" starttime="20180505 21:52:38.862" endtime="20180505 21:52:38.862"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:52:38.863" level="INFO">${high} = 551.0</msg>
<status status="PASS" starttime="20180505 21:52:38.862" endtime="20180505 21:52:38.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:52:38.863" level="INFO">${low} = 549.0</msg>
<status status="PASS" starttime="20180505 21:52:38.863" endtime="20180505 21:52:38.863"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:38.863" endtime="20180505 21:52:38.864"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:38.864" endtime="20180505 21:52:38.865"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:38.860" endtime="20180505 21:52:38.865"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:38.858" endtime="20180505 21:52:38.865"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:38.858" endtime="20180505 21:52:38.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:52:38.865" level="INFO">${Wavelength} = 600.0</msg>
<status status="PASS" starttime="20180505 21:52:38.865" endtime="20180505 21:52:38.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:52:42.866" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:52:38.865" endtime="20180505 21:52:42.867"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:27.409" endtime="20180505 21:52:42.867"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:42.867" endtime="20180505 21:52:42.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:52:42.867" level="INFO">600.0</msg>
<status status="PASS" starttime="20180505 21:52:42.867" endtime="20180505 21:52:42.867"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:42.868" endtime="20180505 21:52:54.736"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:42.868" endtime="20180505 21:52:54.736"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:54.737" endtime="20180505 21:52:54.737"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:52:54.737" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:52:54.737" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8ac70&gt;</msg>
<status status="PASS" starttime="20180505 21:52:54.737" endtime="20180505 21:52:54.737"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:54.737" endtime="20180505 21:52:54.737"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:52:54.738" level="INFO">${value} = 599.9993000000001</msg>
<status status="PASS" starttime="20180505 21:52:54.738" endtime="20180505 21:52:54.738"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:52:54.739" level="INFO">${ExpectedValue} = 600.0</msg>
<status status="PASS" starttime="20180505 21:52:54.738" endtime="20180505 21:52:54.739"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:52:54.739" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:52:54.739" level="INFO">Value: 599.9993000000001</msg>
<msg timestamp="20180505 21:52:54.739" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:52:54.739" level="INFO">Expected Value: 600.0</msg>
<status status="PASS" starttime="20180505 21:52:54.739" endtime="20180505 21:52:54.739"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:52:54.740" level="INFO">${high} = 601.0</msg>
<status status="PASS" starttime="20180505 21:52:54.739" endtime="20180505 21:52:54.740"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:52:54.740" level="INFO">${low} = 599.0</msg>
<status status="PASS" starttime="20180505 21:52:54.740" endtime="20180505 21:52:54.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:54.740" endtime="20180505 21:52:54.741"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:54.741" endtime="20180505 21:52:54.741"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:54.737" endtime="20180505 21:52:54.741"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:54.736" endtime="20180505 21:52:54.741"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:54.736" endtime="20180505 21:52:54.741"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:52:54.742" level="INFO">${Wavelength} = 650.0</msg>
<status status="PASS" starttime="20180505 21:52:54.741" endtime="20180505 21:52:54.742"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:52:58.742" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:52:54.742" endtime="20180505 21:52:58.742"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:42.867" endtime="20180505 21:52:58.742"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:58.743" endtime="20180505 21:52:58.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:52:58.745" level="INFO">650.0</msg>
<status status="PASS" starttime="20180505 21:52:58.744" endtime="20180505 21:52:58.745"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:52:58.745" endtime="20180505 21:53:10.720"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:58.745" endtime="20180505 21:53:10.720"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:10.721" endtime="20180505 21:53:10.721"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:53:10.721" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:53:10.721" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad938f0&gt;</msg>
<status status="PASS" starttime="20180505 21:53:10.721" endtime="20180505 21:53:10.721"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:10.721" endtime="20180505 21:53:10.722"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:53:10.722" level="INFO">${value} = 649.9999</msg>
<status status="PASS" starttime="20180505 21:53:10.722" endtime="20180505 21:53:10.723"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:53:10.723" level="INFO">${ExpectedValue} = 650.0</msg>
<status status="PASS" starttime="20180505 21:53:10.723" endtime="20180505 21:53:10.723"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:53:10.723" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:53:10.723" level="INFO">Value: 649.9999</msg>
<msg timestamp="20180505 21:53:10.723" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:53:10.723" level="INFO">Expected Value: 650.0</msg>
<status status="PASS" starttime="20180505 21:53:10.723" endtime="20180505 21:53:10.724"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:53:10.724" level="INFO">${high} = 651.0</msg>
<status status="PASS" starttime="20180505 21:53:10.724" endtime="20180505 21:53:10.724"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:53:10.724" level="INFO">${low} = 649.0</msg>
<status status="PASS" starttime="20180505 21:53:10.724" endtime="20180505 21:53:10.724"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:10.725" endtime="20180505 21:53:10.725"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:10.725" endtime="20180505 21:53:10.725"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:10.722" endtime="20180505 21:53:10.725"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:10.720" endtime="20180505 21:53:10.725"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:10.720" endtime="20180505 21:53:10.725"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:53:10.726" level="INFO">${Wavelength} = 700.0</msg>
<status status="PASS" starttime="20180505 21:53:10.726" endtime="20180505 21:53:10.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:53:14.726" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:53:10.726" endtime="20180505 21:53:14.727"></status>
</kw>
<status status="PASS" starttime="20180505 21:52:58.743" endtime="20180505 21:53:14.727"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<msg timestamp="20180505 21:53:14.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 21:53:14.727" endtime="20180505 21:53:14.727"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:14.727" endtime="20180505 21:53:14.727"></status>
</kw>
<status status="PASS" starttime="20180505 21:51:41.330" endtime="20180505 21:53:14.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Exited</arg>
</arguments>
<msg timestamp="20180505 21:53:14.738" level="INFO">Exited</msg>
<status status="PASS" starttime="20180505 21:53:14.738" endtime="20180505 21:53:14.738"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:51:41.328" endtime="20180505 21:53:14.738" critical="yes"></status>
</test>
<test id="s1-t5" name="From Enable Update Grating to set it to Red and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:14.739" endtime="20180505 21:53:14.739"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Red}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 21:53:14.739" level="INFO">${GR} = 2</msg>
<status status="PASS" starttime="20180505 21:53:14.739" endtime="20180505 21:53:14.739"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:14.739" endtime="20180505 21:53:26.394"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:26.394" endtime="20180505 21:53:26.395"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:53:50.419" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:53:50.419" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8ccea40&gt;</msg>
<status status="PASS" starttime="20180505 21:53:26.395" endtime="20180505 21:53:50.419"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:50.419" endtime="20180505 21:53:50.419"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:53:50.420" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 21:53:50.420" endtime="20180505 21:53:50.420"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:53:50.420" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 21:53:50.420" endtime="20180505 21:53:50.420"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:53:50.421" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 21:53:50.421" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 21:53:50.421" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 21:53:50.420" endtime="20180505 21:53:50.421"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:50.421" endtime="20180505 21:53:50.421"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:50.419" endtime="20180505 21:53:50.422"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:26.394" endtime="20180505 21:53:50.422"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:53:54.422" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:53:50.422" endtime="20180505 21:53:54.422"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:53:14.738" endtime="20180505 21:53:54.423" critical="yes"></status>
</test>
<test id="s1-t6" name="From Enable Update Wavelength in Red Grating and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Wavelength.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:54.424" endtime="20180505 21:53:54.424"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaWavelength}</arg>
</arguments>
<assign>
<var>${DW}</var>
</assign>
<msg timestamp="20180505 21:53:54.424" level="INFO">${DW} = 50.0</msg>
<status status="PASS" starttime="20180505 21:53:54.424" endtime="20180505 21:53:54.424"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR1}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:53:54.425" level="INFO">${Wavelength} = 650.0</msg>
<status status="PASS" starttime="20180505 21:53:54.424" endtime="20180505 21:53:54.425"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR2}</arg>
</arguments>
<assign>
<var>${MaxValue}</var>
</assign>
<msg timestamp="20180505 21:53:54.425" level="INFO">${MaxValue} = 1200.0</msg>
<status status="PASS" starttime="20180505 21:53:54.425" endtime="20180505 21:53:54.425"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:54.445" endtime="20180505 21:53:54.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:53:54.445" level="INFO">650.0</msg>
<status status="PASS" starttime="20180505 21:53:54.445" endtime="20180505 21:53:54.446"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:53:54.446" endtime="20180505 21:54:06.201"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:54.446" endtime="20180505 21:54:06.201"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:06.202" endtime="20180505 21:54:06.202"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:54:06.202" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:54:06.202" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad93998&gt;</msg>
<status status="PASS" starttime="20180505 21:54:06.202" endtime="20180505 21:54:06.203"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:06.203" endtime="20180505 21:54:06.203"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:54:06.204" level="INFO">${value} = 650.0002000000001</msg>
<status status="PASS" starttime="20180505 21:54:06.203" endtime="20180505 21:54:06.204"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:54:06.204" level="INFO">${ExpectedValue} = 650.0</msg>
<status status="PASS" starttime="20180505 21:54:06.204" endtime="20180505 21:54:06.204"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:54:06.204" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:54:06.204" level="INFO">Value: 650.0002000000001</msg>
<msg timestamp="20180505 21:54:06.205" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:54:06.205" level="INFO">Expected Value: 650.0</msg>
<status status="PASS" starttime="20180505 21:54:06.204" endtime="20180505 21:54:06.205"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:54:06.205" level="INFO">${high} = 651.0</msg>
<status status="PASS" starttime="20180505 21:54:06.205" endtime="20180505 21:54:06.205"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:54:06.206" level="INFO">${low} = 649.0</msg>
<status status="PASS" starttime="20180505 21:54:06.205" endtime="20180505 21:54:06.206"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:06.206" endtime="20180505 21:54:06.206"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:06.206" endtime="20180505 21:54:06.207"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:06.203" endtime="20180505 21:54:06.207"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:06.201" endtime="20180505 21:54:06.207"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:06.201" endtime="20180505 21:54:06.207"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:54:06.207" level="INFO">${Wavelength} = 700.0</msg>
<status status="PASS" starttime="20180505 21:54:06.207" endtime="20180505 21:54:06.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:54:10.208" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:54:06.207" endtime="20180505 21:54:10.208"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:54.445" endtime="20180505 21:54:10.208"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:10.208" endtime="20180505 21:54:10.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:54:10.208" level="INFO">700.0</msg>
<status status="PASS" starttime="20180505 21:54:10.208" endtime="20180505 21:54:10.209"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:10.209" endtime="20180505 21:54:21.763"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:10.209" endtime="20180505 21:54:21.763"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:21.772" endtime="20180505 21:54:21.772"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:54:21.772" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:54:21.772" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad93ab0&gt;</msg>
<status status="PASS" starttime="20180505 21:54:21.772" endtime="20180505 21:54:21.772"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:21.773" endtime="20180505 21:54:21.773"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:54:21.775" level="INFO">${value} = 699.9998</msg>
<status status="PASS" starttime="20180505 21:54:21.775" endtime="20180505 21:54:21.775"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:54:21.775" level="INFO">${ExpectedValue} = 700.0</msg>
<status status="PASS" starttime="20180505 21:54:21.775" endtime="20180505 21:54:21.776"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:54:21.776" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:54:21.776" level="INFO">Value: 699.9998</msg>
<msg timestamp="20180505 21:54:21.776" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:54:21.776" level="INFO">Expected Value: 700.0</msg>
<status status="PASS" starttime="20180505 21:54:21.776" endtime="20180505 21:54:21.776"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:54:21.776" level="INFO">${high} = 701.0</msg>
<status status="PASS" starttime="20180505 21:54:21.776" endtime="20180505 21:54:21.776"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:54:21.777" level="INFO">${low} = 699.0</msg>
<status status="PASS" starttime="20180505 21:54:21.777" endtime="20180505 21:54:21.777"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:21.777" endtime="20180505 21:54:21.777"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:21.777" endtime="20180505 21:54:21.778"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:21.773" endtime="20180505 21:54:21.778"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:21.764" endtime="20180505 21:54:21.778"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:21.763" endtime="20180505 21:54:21.778"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:54:21.778" level="INFO">${Wavelength} = 750.0</msg>
<status status="PASS" starttime="20180505 21:54:21.778" endtime="20180505 21:54:21.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:54:25.779" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:54:21.778" endtime="20180505 21:54:25.779"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:10.208" endtime="20180505 21:54:25.779"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:25.779" endtime="20180505 21:54:25.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:54:25.780" level="INFO">750.0</msg>
<status status="PASS" starttime="20180505 21:54:25.780" endtime="20180505 21:54:25.780"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:25.780" endtime="20180505 21:54:37.242"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:25.780" endtime="20180505 21:54:37.242"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:37.243" endtime="20180505 21:54:37.243"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:54:37.243" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:54:37.243" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc3730&gt;</msg>
<status status="PASS" starttime="20180505 21:54:37.243" endtime="20180505 21:54:37.243"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:37.243" endtime="20180505 21:54:37.244"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:54:37.244" level="INFO">${value} = 750.0006000000001</msg>
<status status="PASS" starttime="20180505 21:54:37.244" endtime="20180505 21:54:37.244"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:54:37.245" level="INFO">${ExpectedValue} = 750.0</msg>
<status status="PASS" starttime="20180505 21:54:37.245" endtime="20180505 21:54:37.245"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:54:37.245" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:54:37.245" level="INFO">Value: 750.0006000000001</msg>
<msg timestamp="20180505 21:54:37.245" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:54:37.245" level="INFO">Expected Value: 750.0</msg>
<status status="PASS" starttime="20180505 21:54:37.245" endtime="20180505 21:54:37.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:54:37.246" level="INFO">${high} = 751.0</msg>
<status status="PASS" starttime="20180505 21:54:37.246" endtime="20180505 21:54:37.246"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:54:37.246" level="INFO">${low} = 749.0</msg>
<status status="PASS" starttime="20180505 21:54:37.246" endtime="20180505 21:54:37.246"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:37.247" endtime="20180505 21:54:37.247"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:37.247" endtime="20180505 21:54:37.247"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:37.244" endtime="20180505 21:54:37.247"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:37.242" endtime="20180505 21:54:37.247"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:37.242" endtime="20180505 21:54:37.247"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:54:37.248" level="INFO">${Wavelength} = 800.0</msg>
<status status="PASS" starttime="20180505 21:54:37.248" endtime="20180505 21:54:37.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:54:41.248" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:54:37.248" endtime="20180505 21:54:41.249"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:25.779" endtime="20180505 21:54:41.249"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:41.249" endtime="20180505 21:54:41.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:54:41.249" level="INFO">800.0</msg>
<status status="PASS" starttime="20180505 21:54:41.249" endtime="20180505 21:54:41.249"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:41.250" endtime="20180505 21:54:52.649"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:41.250" endtime="20180505 21:54:52.649"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:52.650" endtime="20180505 21:54:52.650"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:54:52.650" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:54:52.650" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8a928&gt;</msg>
<status status="PASS" starttime="20180505 21:54:52.650" endtime="20180505 21:54:52.650"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:52.650" endtime="20180505 21:54:52.651"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:54:52.652" level="INFO">${value} = 800.0005</msg>
<status status="PASS" starttime="20180505 21:54:52.652" endtime="20180505 21:54:52.652"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:54:52.653" level="INFO">${ExpectedValue} = 800.0</msg>
<status status="PASS" starttime="20180505 21:54:52.652" endtime="20180505 21:54:52.653"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:54:52.653" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:54:52.653" level="INFO">Value: 800.0005</msg>
<msg timestamp="20180505 21:54:52.653" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:54:52.653" level="INFO">Expected Value: 800.0</msg>
<status status="PASS" starttime="20180505 21:54:52.653" endtime="20180505 21:54:52.653"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:54:52.654" level="INFO">${high} = 801.0</msg>
<status status="PASS" starttime="20180505 21:54:52.654" endtime="20180505 21:54:52.654"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:54:52.654" level="INFO">${low} = 799.0</msg>
<status status="PASS" starttime="20180505 21:54:52.654" endtime="20180505 21:54:52.654"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:52.654" endtime="20180505 21:54:52.655"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:52.655" endtime="20180505 21:54:52.655"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:52.651" endtime="20180505 21:54:52.655"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:52.649" endtime="20180505 21:54:52.655"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:52.649" endtime="20180505 21:54:52.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:54:52.656" level="INFO">${Wavelength} = 850.0</msg>
<status status="PASS" starttime="20180505 21:54:52.655" endtime="20180505 21:54:52.656"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:54:56.657" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:54:52.656" endtime="20180505 21:54:56.657"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:41.249" endtime="20180505 21:54:56.657"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:56.657" endtime="20180505 21:54:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:54:56.658" level="INFO">850.0</msg>
<status status="PASS" starttime="20180505 21:54:56.658" endtime="20180505 21:54:56.658"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:54:56.658" endtime="20180505 21:55:08.027"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:56.658" endtime="20180505 21:55:08.027"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:08.028" endtime="20180505 21:55:08.028"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:55:08.028" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:55:08.028" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e9ffd490&gt;</msg>
<status status="PASS" starttime="20180505 21:55:08.028" endtime="20180505 21:55:08.029"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:08.029" endtime="20180505 21:55:08.029"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:55:08.030" level="INFO">${value} = 849.9995</msg>
<status status="PASS" starttime="20180505 21:55:08.030" endtime="20180505 21:55:08.030"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:55:08.030" level="INFO">${ExpectedValue} = 850.0</msg>
<status status="PASS" starttime="20180505 21:55:08.030" endtime="20180505 21:55:08.030"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:55:08.031" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:55:08.031" level="INFO">Value: 849.9995</msg>
<msg timestamp="20180505 21:55:08.031" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:55:08.031" level="INFO">Expected Value: 850.0</msg>
<status status="PASS" starttime="20180505 21:55:08.030" endtime="20180505 21:55:08.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:55:08.031" level="INFO">${high} = 851.0</msg>
<status status="PASS" starttime="20180505 21:55:08.031" endtime="20180505 21:55:08.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:55:08.032" level="INFO">${low} = 849.0</msg>
<status status="PASS" starttime="20180505 21:55:08.031" endtime="20180505 21:55:08.032"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:08.032" endtime="20180505 21:55:08.032"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:08.032" endtime="20180505 21:55:08.032"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:08.029" endtime="20180505 21:55:08.033"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:08.027" endtime="20180505 21:55:08.033"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:08.027" endtime="20180505 21:55:08.033"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:55:08.033" level="INFO">${Wavelength} = 900.0</msg>
<status status="PASS" starttime="20180505 21:55:08.033" endtime="20180505 21:55:08.033"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:55:12.034" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:55:08.033" endtime="20180505 21:55:12.034"></status>
</kw>
<status status="PASS" starttime="20180505 21:54:56.657" endtime="20180505 21:55:12.034"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:12.034" endtime="20180505 21:55:12.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:55:12.035" level="INFO">900.0</msg>
<status status="PASS" starttime="20180505 21:55:12.034" endtime="20180505 21:55:12.035"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:12.035" endtime="20180505 21:55:23.364"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:12.035" endtime="20180505 21:55:23.364"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:23.365" endtime="20180505 21:55:23.365"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:55:23.366" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:55:23.366" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cff618&gt;</msg>
<status status="PASS" starttime="20180505 21:55:23.366" endtime="20180505 21:55:23.366"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:23.366" endtime="20180505 21:55:23.366"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:55:23.367" level="INFO">${value} = 899.9994</msg>
<status status="PASS" starttime="20180505 21:55:23.367" endtime="20180505 21:55:23.367"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:55:23.367" level="INFO">${ExpectedValue} = 900.0</msg>
<status status="PASS" starttime="20180505 21:55:23.367" endtime="20180505 21:55:23.368"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:55:23.368" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:55:23.368" level="INFO">Value: 899.9994</msg>
<msg timestamp="20180505 21:55:23.368" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:55:23.368" level="INFO">Expected Value: 900.0</msg>
<status status="PASS" starttime="20180505 21:55:23.368" endtime="20180505 21:55:23.368"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:55:23.368" level="INFO">${high} = 901.0</msg>
<status status="PASS" starttime="20180505 21:55:23.368" endtime="20180505 21:55:23.369"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:55:23.369" level="INFO">${low} = 899.0</msg>
<status status="PASS" starttime="20180505 21:55:23.369" endtime="20180505 21:55:23.369"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:23.369" endtime="20180505 21:55:23.369"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:23.369" endtime="20180505 21:55:23.370"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:23.366" endtime="20180505 21:55:23.370"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:23.365" endtime="20180505 21:55:23.370"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:23.365" endtime="20180505 21:55:23.370"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:55:23.370" level="INFO">${Wavelength} = 950.0</msg>
<status status="PASS" starttime="20180505 21:55:23.370" endtime="20180505 21:55:23.370"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:55:27.371" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:55:23.370" endtime="20180505 21:55:27.371"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:12.034" endtime="20180505 21:55:27.371"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:27.372" endtime="20180505 21:55:27.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:55:27.372" level="INFO">950.0</msg>
<status status="PASS" starttime="20180505 21:55:27.372" endtime="20180505 21:55:27.372"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:27.373" endtime="20180505 21:55:38.686"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:27.373" endtime="20180505 21:55:38.686"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:38.687" endtime="20180505 21:55:38.687"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:55:38.687" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:55:38.687" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cff810&gt;</msg>
<status status="PASS" starttime="20180505 21:55:38.687" endtime="20180505 21:55:38.687"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:38.687" endtime="20180505 21:55:38.688"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:55:38.689" level="INFO">${value} = 950.0001000000001</msg>
<status status="PASS" starttime="20180505 21:55:38.688" endtime="20180505 21:55:38.689"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:55:38.689" level="INFO">${ExpectedValue} = 950.0</msg>
<status status="PASS" starttime="20180505 21:55:38.689" endtime="20180505 21:55:38.689"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:55:38.689" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:55:38.689" level="INFO">Value: 950.0001000000001</msg>
<msg timestamp="20180505 21:55:38.689" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:55:38.690" level="INFO">Expected Value: 950.0</msg>
<status status="PASS" starttime="20180505 21:55:38.689" endtime="20180505 21:55:38.690"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:55:38.690" level="INFO">${high} = 951.0</msg>
<status status="PASS" starttime="20180505 21:55:38.690" endtime="20180505 21:55:38.690"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:55:38.691" level="INFO">${low} = 949.0</msg>
<status status="PASS" starttime="20180505 21:55:38.690" endtime="20180505 21:55:38.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:38.691" endtime="20180505 21:55:38.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:38.691" endtime="20180505 21:55:38.692"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:38.688" endtime="20180505 21:55:38.692"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:38.686" endtime="20180505 21:55:38.692"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:38.686" endtime="20180505 21:55:38.692"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:55:38.692" level="INFO">${Wavelength} = 1000.0</msg>
<status status="PASS" starttime="20180505 21:55:38.692" endtime="20180505 21:55:38.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:55:42.693" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:55:38.692" endtime="20180505 21:55:42.693"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:27.371" endtime="20180505 21:55:42.693"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:42.694" endtime="20180505 21:55:42.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:55:42.694" level="INFO">1000.0</msg>
<status status="PASS" starttime="20180505 21:55:42.694" endtime="20180505 21:55:42.694"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:42.695" endtime="20180505 21:55:54.012"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:42.694" endtime="20180505 21:55:54.012"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:54.013" endtime="20180505 21:55:54.013"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:55:54.013" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:55:54.013" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ea005bc8&gt;</msg>
<status status="PASS" starttime="20180505 21:55:54.013" endtime="20180505 21:55:54.013"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:54.013" endtime="20180505 21:55:54.013"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:55:54.014" level="INFO">${value} = 999.9994</msg>
<status status="PASS" starttime="20180505 21:55:54.014" endtime="20180505 21:55:54.014"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:55:54.015" level="INFO">${ExpectedValue} = 1000.0</msg>
<status status="PASS" starttime="20180505 21:55:54.014" endtime="20180505 21:55:54.015"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:55:54.015" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:55:54.015" level="INFO">Value: 999.9994</msg>
<msg timestamp="20180505 21:55:54.015" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:55:54.015" level="INFO">Expected Value: 1000.0</msg>
<status status="PASS" starttime="20180505 21:55:54.015" endtime="20180505 21:55:54.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:55:54.016" level="INFO">${high} = 1001.0</msg>
<status status="PASS" starttime="20180505 21:55:54.016" endtime="20180505 21:55:54.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:55:54.016" level="INFO">${low} = 999.0</msg>
<status status="PASS" starttime="20180505 21:55:54.016" endtime="20180505 21:55:54.016"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:54.016" endtime="20180505 21:55:54.017"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:54.017" endtime="20180505 21:55:54.017"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:54.014" endtime="20180505 21:55:54.017"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:54.012" endtime="20180505 21:55:54.017"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:54.012" endtime="20180505 21:55:54.017"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:55:54.018" level="INFO">${Wavelength} = 1050.0</msg>
<status status="PASS" starttime="20180505 21:55:54.017" endtime="20180505 21:55:54.018"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:55:58.018" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:55:54.018" endtime="20180505 21:55:58.018"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:42.693" endtime="20180505 21:55:58.019"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:58.019" endtime="20180505 21:55:58.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:55:58.019" level="INFO">1050.0</msg>
<status status="PASS" starttime="20180505 21:55:58.019" endtime="20180505 21:55:58.019"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:55:58.020" endtime="20180505 21:56:09.323"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:58.019" endtime="20180505 21:56:09.323"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:09.323" endtime="20180505 21:56:09.324"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:56:09.324" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:56:09.324" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8a810&gt;</msg>
<status status="PASS" starttime="20180505 21:56:09.324" endtime="20180505 21:56:09.324"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:09.324" endtime="20180505 21:56:09.324"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:56:09.325" level="INFO">${value} = 1050.0</msg>
<status status="PASS" starttime="20180505 21:56:09.325" endtime="20180505 21:56:09.325"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:56:09.326" level="INFO">${ExpectedValue} = 1050.0</msg>
<status status="PASS" starttime="20180505 21:56:09.325" endtime="20180505 21:56:09.326"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:56:09.326" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:56:09.326" level="INFO">Value: 1050.0</msg>
<msg timestamp="20180505 21:56:09.326" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:56:09.326" level="INFO">Expected Value: 1050.0</msg>
<status status="PASS" starttime="20180505 21:56:09.326" endtime="20180505 21:56:09.326"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:56:09.327" level="INFO">${high} = 1051.0</msg>
<status status="PASS" starttime="20180505 21:56:09.326" endtime="20180505 21:56:09.327"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:56:09.327" level="INFO">${low} = 1049.0</msg>
<status status="PASS" starttime="20180505 21:56:09.327" endtime="20180505 21:56:09.327"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:09.327" endtime="20180505 21:56:09.327"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:09.327" endtime="20180505 21:56:09.328"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:09.324" endtime="20180505 21:56:09.328"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:09.323" endtime="20180505 21:56:09.328"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:09.323" endtime="20180505 21:56:09.328"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:56:09.328" level="INFO">${Wavelength} = 1100.0</msg>
<status status="PASS" starttime="20180505 21:56:09.328" endtime="20180505 21:56:09.328"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:56:13.329" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:56:09.329" endtime="20180505 21:56:13.330"></status>
</kw>
<status status="PASS" starttime="20180505 21:55:58.019" endtime="20180505 21:56:13.330"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:13.330" endtime="20180505 21:56:13.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:56:13.331" level="INFO">1100.0</msg>
<status status="PASS" starttime="20180505 21:56:13.331" endtime="20180505 21:56:13.331"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:13.331" endtime="20180505 21:56:24.666"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:13.331" endtime="20180505 21:56:24.666"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:24.667" endtime="20180505 21:56:24.667"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:56:24.668" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:56:24.668" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e9ffdab0&gt;</msg>
<status status="PASS" starttime="20180505 21:56:24.667" endtime="20180505 21:56:24.668"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:24.668" endtime="20180505 21:56:24.668"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:56:24.669" level="INFO">${value} = 1100.0004000000001</msg>
<status status="PASS" starttime="20180505 21:56:24.669" endtime="20180505 21:56:24.669"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:56:24.669" level="INFO">${ExpectedValue} = 1100.0</msg>
<status status="PASS" starttime="20180505 21:56:24.669" endtime="20180505 21:56:24.669"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:56:24.670" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:56:24.670" level="INFO">Value: 1100.0004000000001</msg>
<msg timestamp="20180505 21:56:24.670" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:56:24.670" level="INFO">Expected Value: 1100.0</msg>
<status status="PASS" starttime="20180505 21:56:24.669" endtime="20180505 21:56:24.670"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:56:24.670" level="INFO">${high} = 1101.0</msg>
<status status="PASS" starttime="20180505 21:56:24.670" endtime="20180505 21:56:24.670"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:56:24.671" level="INFO">${low} = 1099.0</msg>
<status status="PASS" starttime="20180505 21:56:24.670" endtime="20180505 21:56:24.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:24.671" endtime="20180505 21:56:24.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:24.671" endtime="20180505 21:56:24.671"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:24.668" endtime="20180505 21:56:24.671"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:24.667" endtime="20180505 21:56:24.672"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:24.666" endtime="20180505 21:56:24.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:56:24.672" level="INFO">${Wavelength} = 1150.0</msg>
<status status="PASS" starttime="20180505 21:56:24.672" endtime="20180505 21:56:24.672"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:56:28.672" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:56:24.672" endtime="20180505 21:56:28.673"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:13.330" endtime="20180505 21:56:28.673"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:28.673" endtime="20180505 21:56:28.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:56:28.674" level="INFO">1150.0</msg>
<status status="PASS" starttime="20180505 21:56:28.673" endtime="20180505 21:56:28.674"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:28.674" endtime="20180505 21:56:39.974"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:28.674" endtime="20180505 21:56:39.975"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:39.975" endtime="20180505 21:56:39.976"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:56:39.976" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:56:39.976" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad93b58&gt;</msg>
<status status="PASS" starttime="20180505 21:56:39.976" endtime="20180505 21:56:39.976"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:39.976" endtime="20180505 21:56:39.976"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:56:39.977" level="INFO">${value} = 1149.9998</msg>
<status status="PASS" starttime="20180505 21:56:39.977" endtime="20180505 21:56:39.977"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:56:39.978" level="INFO">${ExpectedValue} = 1150.0</msg>
<status status="PASS" starttime="20180505 21:56:39.977" endtime="20180505 21:56:39.978"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:56:39.978" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:56:39.978" level="INFO">Value: 1149.9998</msg>
<msg timestamp="20180505 21:56:39.978" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:56:39.978" level="INFO">Expected Value: 1150.0</msg>
<status status="PASS" starttime="20180505 21:56:39.978" endtime="20180505 21:56:39.978"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:56:39.979" level="INFO">${high} = 1151.0</msg>
<status status="PASS" starttime="20180505 21:56:39.978" endtime="20180505 21:56:39.979"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:56:39.979" level="INFO">${low} = 1149.0</msg>
<status status="PASS" starttime="20180505 21:56:39.979" endtime="20180505 21:56:39.979"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:39.979" endtime="20180505 21:56:39.980"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:39.980" endtime="20180505 21:56:39.980"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:39.977" endtime="20180505 21:56:39.980"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:39.975" endtime="20180505 21:56:39.980"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:39.975" endtime="20180505 21:56:39.980"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:56:39.981" level="INFO">${Wavelength} = 1200.0</msg>
<status status="PASS" starttime="20180505 21:56:39.980" endtime="20180505 21:56:39.981"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:56:43.981" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:56:39.981" endtime="20180505 21:56:43.981"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:28.673" endtime="20180505 21:56:43.981"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:43.982" endtime="20180505 21:56:43.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<msg timestamp="20180505 21:56:43.982" level="INFO">1200.0</msg>
<status status="PASS" starttime="20180505 21:56:43.982" endtime="20180505 21:56:43.982"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Wavelength Command</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Change Wavelength Command" library="atMonochromator_SAL">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:43.983" endtime="20180505 21:56:55.324"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:43.982" endtime="20180505 21:56:55.325"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:55.326" endtime="20180505 21:56:55.326"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:56:55.326" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:56:55.326" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8ab20&gt;</msg>
<status status="PASS" starttime="20180505 21:56:55.326" endtime="20180505 21:56:55.326"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:55.326" endtime="20180505 21:56:55.327"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:56:55.327" level="INFO">${value} = 1199.9995000000001</msg>
<status status="PASS" starttime="20180505 21:56:55.327" endtime="20180505 21:56:55.328"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:56:55.328" level="INFO">${ExpectedValue} = 1200.0</msg>
<status status="PASS" starttime="20180505 21:56:55.328" endtime="20180505 21:56:55.328"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:56:55.328" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 21:56:55.328" level="INFO">Value: 1199.9995000000001</msg>
<msg timestamp="20180505 21:56:55.328" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 21:56:55.329" level="INFO">Expected Value: 1200.0</msg>
<status status="PASS" starttime="20180505 21:56:55.328" endtime="20180505 21:56:55.329"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 21:56:55.329" level="INFO">${high} = 1201.0</msg>
<status status="PASS" starttime="20180505 21:56:55.329" endtime="20180505 21:56:55.329"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 21:56:55.329" level="INFO">${low} = 1199.0</msg>
<status status="PASS" starttime="20180505 21:56:55.329" endtime="20180505 21:56:55.329"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:55.330" endtime="20180505 21:56:55.330"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:55.330" endtime="20180505 21:56:55.330"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:55.327" endtime="20180505 21:56:55.330"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:55.325" endtime="20180505 21:56:55.330"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:55.325" endtime="20180505 21:56:55.330"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 21:56:55.331" level="INFO">${Wavelength} = 1250.0</msg>
<status status="PASS" starttime="20180505 21:56:55.330" endtime="20180505 21:56:55.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 21:56:59.331" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 21:56:55.331" endtime="20180505 21:56:59.331"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:43.981" endtime="20180505 21:56:59.331"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<msg timestamp="20180505 21:56:59.332" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 21:56:59.332" endtime="20180505 21:56:59.332"></status>
</kw>
<status status="PASS" starttime="20180505 21:56:59.331" endtime="20180505 21:56:59.332"></status>
</kw>
<status status="PASS" starttime="20180505 21:53:54.425" endtime="20180505 21:56:59.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Exited</arg>
</arguments>
<msg timestamp="20180505 21:56:59.342" level="INFO">Exited</msg>
<status status="PASS" starttime="20180505 21:56:59.341" endtime="20180505 21:56:59.342"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:53:54.423" endtime="20180505 21:56:59.342" critical="yes"></status>
</test>
<test id="s1-t7" name="From Enable Update Grating to Blue and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:59.342" endtime="20180505 21:56:59.343"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Blue}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 21:56:59.343" level="INFO">${GR} = 1</msg>
<status status="PASS" starttime="20180505 21:56:59.343" endtime="20180505 21:56:59.343"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:56:59.343" endtime="20180505 21:57:10.675"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:57:10.676" endtime="20180505 21:57:10.676"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:58:08.726" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:58:08.727" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ff1bc8&gt;</msg>
<status status="PASS" starttime="20180505 21:57:10.676" endtime="20180505 21:58:08.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:58:08.727" endtime="20180505 21:58:08.727"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:58:08.728" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 21:58:08.728" endtime="20180505 21:58:08.728"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:58:08.728" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 21:58:08.728" endtime="20180505 21:58:08.729"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:58:08.729" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 21:58:08.729" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 21:58:08.729" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 21:58:08.729" endtime="20180505 21:58:08.729"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:58:08.729" endtime="20180505 21:58:08.729"></status>
</kw>
<status status="PASS" starttime="20180505 21:58:08.727" endtime="20180505 21:58:08.729"></status>
</kw>
<status status="PASS" starttime="20180505 21:57:10.676" endtime="20180505 21:58:08.730"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 21:58:38.730" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 21:58:08.730" endtime="20180505 21:58:38.730"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:56:59.342" endtime="20180505 21:58:38.731" critical="yes"></status>
</test>
<test id="s1-t8" name="From Enable Update Grating from Blue to Red and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:58:38.731" endtime="20180505 21:58:38.731"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Red}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 21:58:38.732" level="INFO">${GR} = 2</msg>
<status status="PASS" starttime="20180505 21:58:38.732" endtime="20180505 21:58:38.732"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:58:38.732" endtime="20180505 21:58:50.072"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:58:50.073" endtime="20180505 21:58:50.073"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 21:59:15.096" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 21:59:15.096" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8c8ac00&gt;</msg>
<status status="PASS" starttime="20180505 21:58:50.073" endtime="20180505 21:59:15.096"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:59:15.096" endtime="20180505 21:59:15.097"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 21:59:15.097" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 21:59:15.097" endtime="20180505 21:59:15.097"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 21:59:15.098" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 21:59:15.097" endtime="20180505 21:59:15.098"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 21:59:15.098" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 21:59:15.098" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 21:59:15.098" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 21:59:15.098" endtime="20180505 21:59:15.098"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:59:15.098" endtime="20180505 21:59:15.098"></status>
</kw>
<status status="PASS" starttime="20180505 21:59:15.097" endtime="20180505 21:59:15.099"></status>
</kw>
<status status="PASS" starttime="20180505 21:58:50.072" endtime="20180505 21:59:15.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 21:59:45.099" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 21:59:15.099" endtime="20180505 21:59:45.099"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:58:38.731" endtime="20180505 21:59:45.100" critical="yes"></status>
</test>
<test id="s1-t9" name="From Enable Update Grating from Red to Mirror and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:59:45.100" endtime="20180505 21:59:45.101"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Mirror}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 21:59:45.101" level="INFO">${GR} = 3</msg>
<status status="PASS" starttime="20180505 21:59:45.101" endtime="20180505 21:59:45.101"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 21:59:45.102" endtime="20180505 21:59:56.388"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 21:59:56.389" endtime="20180505 21:59:56.389"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:00:21.409" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:00:21.409" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86eca74538&gt;</msg>
<status status="PASS" starttime="20180505 21:59:56.389" endtime="20180505 22:00:21.409"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:00:21.409" endtime="20180505 22:00:21.409"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:00:21.410" level="INFO">${value} = 3.0</msg>
<status status="PASS" starttime="20180505 22:00:21.410" endtime="20180505 22:00:21.411"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:00:21.411" level="INFO">${ExpectedValue} = 3.0</msg>
<status status="PASS" starttime="20180505 22:00:21.411" endtime="20180505 22:00:21.411"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:00:21.412" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:00:21.412" level="INFO">Value: 3.0</msg>
<msg timestamp="20180505 22:00:21.412" level="INFO">Expected Value: 3.0</msg>
<status status="PASS" starttime="20180505 22:00:21.411" endtime="20180505 22:00:21.412"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:00:21.412" endtime="20180505 22:00:21.412"></status>
</kw>
<status status="PASS" starttime="20180505 22:00:21.410" endtime="20180505 22:00:21.413"></status>
</kw>
<status status="PASS" starttime="20180505 21:59:56.388" endtime="20180505 22:00:21.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 22:00:51.414" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 22:00:21.413" endtime="20180505 22:00:51.414"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 21:59:45.100" endtime="20180505 22:00:51.414" critical="yes"></status>
</test>
<test id="s1-t10" name="From Enable Update Grating from Mirror to Red and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:00:51.415" endtime="20180505 22:00:51.415"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Red}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 22:00:51.415" level="INFO">${GR} = 2</msg>
<status status="PASS" starttime="20180505 22:00:51.415" endtime="20180505 22:00:51.415"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:00:51.416" endtime="20180505 22:01:02.691"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:01:02.692" endtime="20180505 22:01:02.692"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:02:00.733" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:02:00.733" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ffdae8&gt;</msg>
<status status="PASS" starttime="20180505 22:01:02.692" endtime="20180505 22:02:00.733"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:02:00.733" endtime="20180505 22:02:00.733"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:02:00.734" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:02:00.734" endtime="20180505 22:02:00.734"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:02:00.734" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:02:00.734" endtime="20180505 22:02:00.735"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:02:00.735" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:02:00.735" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:02:00.735" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:02:00.735" endtime="20180505 22:02:00.735"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:02:00.735" endtime="20180505 22:02:00.735"></status>
</kw>
<status status="PASS" starttime="20180505 22:02:00.733" endtime="20180505 22:02:00.735"></status>
</kw>
<status status="PASS" starttime="20180505 22:01:02.691" endtime="20180505 22:02:00.736"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 22:02:30.736" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 22:02:00.736" endtime="20180505 22:02:30.736"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:00:51.414" endtime="20180505 22:02:30.737" critical="yes"></status>
</test>
<test id="s1-t11" name="From Enable Update Grating from Red to Blue and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Grating and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:02:30.737" endtime="20180505 22:02:30.737"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Blue}</arg>
</arguments>
<assign>
<var>${GR}</var>
</assign>
<msg timestamp="20180505 22:02:30.738" level="INFO">${GR} = 1</msg>
<status status="PASS" starttime="20180505 22:02:30.738" endtime="20180505 22:02:30.738"></status>
</kw>
<kw name="Issue Select Grating Command" library="atMonochromator_SAL">
<arguments>
<arg>${GR}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:02:30.738" endtime="20180505 22:02:42.022"></status>
</kw>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${GR}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:02:42.022" endtime="20180505 22:02:42.022"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:03:40.071" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:03:40.071" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ea005f80&gt;</msg>
<status status="PASS" starttime="20180505 22:02:42.023" endtime="20180505 22:03:40.071"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:03:40.072" endtime="20180505 22:03:40.072"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:03:40.073" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:03:40.073" endtime="20180505 22:03:40.073"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:03:40.073" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:03:40.073" endtime="20180505 22:03:40.073"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:03:40.074" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:03:40.074" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:03:40.074" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:03:40.073" endtime="20180505 22:03:40.074"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:03:40.074" endtime="20180505 22:03:40.074"></status>
</kw>
<status status="PASS" starttime="20180505 22:03:40.072" endtime="20180505 22:03:40.074"></status>
</kw>
<status status="PASS" starttime="20180505 22:02:42.022" endtime="20180505 22:03:40.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${GRdelay}</arg>
</arguments>
<msg timestamp="20180505 22:04:10.075" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20180505 22:03:40.074" endtime="20180505 22:04:10.075"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:02:30.737" endtime="20180505 22:04:10.075" critical="yes"></status>
</test>
<test id="s1-t12" name="From Enable Update Slit FrontEntrance Slit Width and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Slit Width and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:10.076" endtime="20180505 22:04:10.076"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${FrontEntrance}</arg>
</arguments>
<assign>
<var>${slitNumber}</var>
</assign>
<msg timestamp="20180505 22:04:10.076" level="INFO">${slitNumber} = 1</msg>
<status status="PASS" starttime="20180505 22:04:10.076" endtime="20180505 22:04:10.076"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${initSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:10.077" level="INFO">${slitWidth} = 0.0</msg>
<status status="PASS" starttime="20180505 22:04:10.077" endtime="20180505 22:04:10.077"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaSlitWidth}</arg>
</arguments>
<assign>
<var>${DSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:10.085" level="INFO">${DSlitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:04:10.077" endtime="20180505 22:04:10.085"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxSlitWidth}</arg>
</arguments>
<assign>
<var>${MaxSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:10.086" level="INFO">${MaxSlitWidth} = 5.3</msg>
<status status="PASS" starttime="20180505 22:04:10.086" endtime="20180505 22:04:10.086"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:10.106" endtime="20180505 22:04:10.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:04:10.107" level="INFO">0.0</msg>
<status status="PASS" starttime="20180505 22:04:10.107" endtime="20180505 22:04:10.107"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:10.107" endtime="20180505 22:04:21.450"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:10.107" endtime="20180505 22:04:21.450"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.451" endtime="20180505 22:04:21.451"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:04:21.451" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:04:21.451" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ff1c38&gt;</msg>
<status status="PASS" starttime="20180505 22:04:21.451" endtime="20180505 22:04:21.451"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:04:21.452" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:04:21.452" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3a40&gt;</msg>
<status status="PASS" starttime="20180505 22:04:21.451" endtime="20180505 22:04:21.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.452" endtime="20180505 22:04:21.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.452" endtime="20180505 22:04:21.452"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.452" endtime="20180505 22:04:21.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:04:21.454" level="INFO">${value} = 0.0</msg>
<status status="PASS" starttime="20180505 22:04:21.454" endtime="20180505 22:04:21.454"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:04:21.454" level="INFO">${ExpectedValue} = 0.0</msg>
<status status="PASS" starttime="20180505 22:04:21.454" endtime="20180505 22:04:21.454"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:04:21.454" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:04:21.455" level="INFO">Value: 0.0</msg>
<msg timestamp="20180505 22:04:21.463" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:04:21.463" level="INFO">Expected Value: 0.0</msg>
<status status="PASS" starttime="20180505 22:04:21.454" endtime="20180505 22:04:21.463"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:04:21.464" level="INFO">${high} = 0.01</msg>
<status status="PASS" starttime="20180505 22:04:21.463" endtime="20180505 22:04:21.464"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:04:21.464" level="INFO">${low} = -0.01</msg>
<status status="PASS" starttime="20180505 22:04:21.464" endtime="20180505 22:04:21.464"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.464" endtime="20180505 22:04:21.464"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:21.464" endtime="20180505 22:04:21.465"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:21.453" endtime="20180505 22:04:21.465"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:21.453" endtime="20180505 22:04:21.465"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:21.450" endtime="20180505 22:04:21.465"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:21.450" endtime="20180505 22:04:21.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:21.465" level="INFO">${slitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:04:21.465" endtime="20180505 22:04:21.465"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:04:25.466" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:04:21.465" endtime="20180505 22:04:25.466"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:10.106" endtime="20180505 22:04:25.466"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:25.466" endtime="20180505 22:04:25.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:04:25.467" level="INFO">0.5</msg>
<status status="PASS" starttime="20180505 22:04:25.467" endtime="20180505 22:04:25.467"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:25.467" endtime="20180505 22:04:36.832"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:25.467" endtime="20180505 22:04:36.832"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.833" endtime="20180505 22:04:36.833"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:04:36.834" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:04:36.834" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffd768&gt;</msg>
<status status="PASS" starttime="20180505 22:04:36.833" endtime="20180505 22:04:36.834"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:04:36.834" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:04:36.834" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005b58&gt;</msg>
<status status="PASS" starttime="20180505 22:04:36.834" endtime="20180505 22:04:36.834"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.834" endtime="20180505 22:04:36.834"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.834" endtime="20180505 22:04:36.835"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.835" endtime="20180505 22:04:36.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:04:36.836" level="INFO">${value} = 0.49770000000000003</msg>
<status status="PASS" starttime="20180505 22:04:36.836" endtime="20180505 22:04:36.836"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:04:36.837" level="INFO">${ExpectedValue} = 0.5</msg>
<status status="PASS" starttime="20180505 22:04:36.836" endtime="20180505 22:04:36.837"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:04:36.837" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:04:36.837" level="INFO">Value: 0.49770000000000003</msg>
<msg timestamp="20180505 22:04:36.837" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:04:36.837" level="INFO">Expected Value: 0.5</msg>
<status status="PASS" starttime="20180505 22:04:36.837" endtime="20180505 22:04:36.837"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:04:36.838" level="INFO">${high} = 0.51</msg>
<status status="PASS" starttime="20180505 22:04:36.837" endtime="20180505 22:04:36.838"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:04:36.838" level="INFO">${low} = 0.49</msg>
<status status="PASS" starttime="20180505 22:04:36.838" endtime="20180505 22:04:36.838"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.838" endtime="20180505 22:04:36.838"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:36.839" endtime="20180505 22:04:36.839"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:36.835" endtime="20180505 22:04:36.839"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:36.835" endtime="20180505 22:04:36.839"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:36.833" endtime="20180505 22:04:36.839"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:36.832" endtime="20180505 22:04:36.839"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:36.839" level="INFO">${slitWidth} = 1.0</msg>
<status status="PASS" starttime="20180505 22:04:36.839" endtime="20180505 22:04:36.840"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:04:40.840" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:04:36.840" endtime="20180505 22:04:40.840"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:25.466" endtime="20180505 22:04:40.840"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:40.840" endtime="20180505 22:04:40.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:04:40.841" level="INFO">1.0</msg>
<status status="PASS" starttime="20180505 22:04:40.841" endtime="20180505 22:04:40.841"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:40.842" endtime="20180505 22:04:52.393"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:40.841" endtime="20180505 22:04:52.393"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.394" endtime="20180505 22:04:52.394"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:04:52.395" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:04:52.395" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffdb20&gt;</msg>
<status status="PASS" starttime="20180505 22:04:52.394" endtime="20180505 22:04:52.395"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:04:52.395" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:04:52.395" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffda40&gt;</msg>
<status status="PASS" starttime="20180505 22:04:52.395" endtime="20180505 22:04:52.395"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.395" endtime="20180505 22:04:52.395"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.395" endtime="20180505 22:04:52.396"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.396" endtime="20180505 22:04:52.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:04:52.397" level="INFO">${value} = 0.9954000000000001</msg>
<status status="PASS" starttime="20180505 22:04:52.397" endtime="20180505 22:04:52.397"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:04:52.398" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:04:52.397" endtime="20180505 22:04:52.398"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:04:52.398" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:04:52.398" level="INFO">Value: 0.9954000000000001</msg>
<msg timestamp="20180505 22:04:52.398" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:04:52.398" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:04:52.398" endtime="20180505 22:04:52.398"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:04:52.399" level="INFO">${high} = 1.01</msg>
<status status="PASS" starttime="20180505 22:04:52.398" endtime="20180505 22:04:52.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:04:52.399" level="INFO">${low} = 0.99</msg>
<status status="PASS" starttime="20180505 22:04:52.399" endtime="20180505 22:04:52.399"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.399" endtime="20180505 22:04:52.399"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:52.399" endtime="20180505 22:04:52.400"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:52.396" endtime="20180505 22:04:52.400"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:52.396" endtime="20180505 22:04:52.400"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:52.394" endtime="20180505 22:04:52.400"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:52.393" endtime="20180505 22:04:52.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:04:52.400" level="INFO">${slitWidth} = 1.5</msg>
<status status="PASS" starttime="20180505 22:04:52.400" endtime="20180505 22:04:52.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:04:56.401" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:04:52.401" endtime="20180505 22:04:56.401"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:40.840" endtime="20180505 22:04:56.401"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:56.402" endtime="20180505 22:04:56.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:04:56.402" level="INFO">1.5</msg>
<status status="PASS" starttime="20180505 22:04:56.402" endtime="20180505 22:04:56.402"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:04:56.403" endtime="20180505 22:05:07.882"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:56.403" endtime="20180505 22:05:07.882"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.883" endtime="20180505 22:05:07.883"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:05:07.884" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:05:07.884" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3378&gt;</msg>
<status status="PASS" starttime="20180505 22:05:07.883" endtime="20180505 22:05:07.884"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:05:07.884" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:05:07.884" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ff1c70&gt;</msg>
<status status="PASS" starttime="20180505 22:05:07.884" endtime="20180505 22:05:07.884"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.884" endtime="20180505 22:05:07.884"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.884" endtime="20180505 22:05:07.885"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.885" endtime="20180505 22:05:07.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:05:07.886" level="INFO">${value} = 1.4978</msg>
<status status="PASS" starttime="20180505 22:05:07.886" endtime="20180505 22:05:07.886"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:05:07.887" level="INFO">${ExpectedValue} = 1.5</msg>
<status status="PASS" starttime="20180505 22:05:07.887" endtime="20180505 22:05:07.887"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:05:07.887" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:05:07.887" level="INFO">Value: 1.4978</msg>
<msg timestamp="20180505 22:05:07.887" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:05:07.887" level="INFO">Expected Value: 1.5</msg>
<status status="PASS" starttime="20180505 22:05:07.887" endtime="20180505 22:05:07.887"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:05:07.888" level="INFO">${high} = 1.51</msg>
<status status="PASS" starttime="20180505 22:05:07.887" endtime="20180505 22:05:07.888"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:05:07.888" level="INFO">${low} = 1.49</msg>
<status status="PASS" starttime="20180505 22:05:07.888" endtime="20180505 22:05:07.888"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.888" endtime="20180505 22:05:07.889"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:07.889" endtime="20180505 22:05:07.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:07.886" endtime="20180505 22:05:07.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:07.885" endtime="20180505 22:05:07.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:07.883" endtime="20180505 22:05:07.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:07.882" endtime="20180505 22:05:07.889"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:05:07.890" level="INFO">${slitWidth} = 2.0</msg>
<status status="PASS" starttime="20180505 22:05:07.890" endtime="20180505 22:05:07.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:05:11.890" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:05:07.890" endtime="20180505 22:05:11.891"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:56.402" endtime="20180505 22:05:11.891"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:11.891" endtime="20180505 22:05:11.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:05:11.892" level="INFO">2.0</msg>
<status status="PASS" starttime="20180505 22:05:11.891" endtime="20180505 22:05:11.892"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:11.892" endtime="20180505 22:05:23.369"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:11.892" endtime="20180505 22:05:23.369"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.370" endtime="20180505 22:05:23.370"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:05:23.371" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:05:23.371" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffd998&gt;</msg>
<status status="PASS" starttime="20180505 22:05:23.370" endtime="20180505 22:05:23.371"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:05:23.371" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:05:23.371" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea001a08&gt;</msg>
<status status="PASS" starttime="20180505 22:05:23.371" endtime="20180505 22:05:23.371"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.371" endtime="20180505 22:05:23.372"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.372" endtime="20180505 22:05:23.372"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.372" endtime="20180505 22:05:23.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:05:23.373" level="INFO">${value} = 1.9955</msg>
<status status="PASS" starttime="20180505 22:05:23.373" endtime="20180505 22:05:23.373"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:05:23.374" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:05:23.373" endtime="20180505 22:05:23.374"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:05:23.374" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:05:23.374" level="INFO">Value: 1.9955</msg>
<msg timestamp="20180505 22:05:23.374" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:05:23.374" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:05:23.374" endtime="20180505 22:05:23.374"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:05:23.375" level="INFO">${high} = 2.01</msg>
<status status="PASS" starttime="20180505 22:05:23.374" endtime="20180505 22:05:23.375"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:05:23.375" level="INFO">${low} = 1.99</msg>
<status status="PASS" starttime="20180505 22:05:23.375" endtime="20180505 22:05:23.375"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.375" endtime="20180505 22:05:23.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:23.376" endtime="20180505 22:05:23.376"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:23.373" endtime="20180505 22:05:23.376"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:23.372" endtime="20180505 22:05:23.376"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:23.370" endtime="20180505 22:05:23.376"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:23.370" endtime="20180505 22:05:23.376"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:05:23.377" level="INFO">${slitWidth} = 2.5</msg>
<status status="PASS" starttime="20180505 22:05:23.376" endtime="20180505 22:05:23.377"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:05:27.377" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:05:23.377" endtime="20180505 22:05:27.377"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:11.891" endtime="20180505 22:05:27.377"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:27.378" endtime="20180505 22:05:27.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:05:27.378" level="INFO">2.5</msg>
<status status="PASS" starttime="20180505 22:05:27.378" endtime="20180505 22:05:27.378"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:27.379" endtime="20180505 22:05:38.867"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:27.379" endtime="20180505 22:05:38.867"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.868" endtime="20180505 22:05:38.868"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:05:38.868" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:05:38.868" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffaae8&gt;</msg>
<status status="PASS" starttime="20180505 22:05:38.868" endtime="20180505 22:05:38.868"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:05:38.869" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:05:38.869" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffad18&gt;</msg>
<status status="PASS" starttime="20180505 22:05:38.868" endtime="20180505 22:05:38.869"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.869" endtime="20180505 22:05:38.869"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.869" endtime="20180505 22:05:38.869"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.869" endtime="20180505 22:05:38.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:05:38.871" level="INFO">${value} = 2.498</msg>
<status status="PASS" starttime="20180505 22:05:38.871" endtime="20180505 22:05:38.871"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:05:38.871" level="INFO">${ExpectedValue} = 2.5</msg>
<status status="PASS" starttime="20180505 22:05:38.871" endtime="20180505 22:05:38.871"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:05:38.872" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:05:38.872" level="INFO">Value: 2.498</msg>
<msg timestamp="20180505 22:05:38.872" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:05:38.872" level="INFO">Expected Value: 2.5</msg>
<status status="PASS" starttime="20180505 22:05:38.871" endtime="20180505 22:05:38.872"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:05:38.872" level="INFO">${high} = 2.51</msg>
<status status="PASS" starttime="20180505 22:05:38.872" endtime="20180505 22:05:38.872"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:05:38.873" level="INFO">${low} = 2.49</msg>
<status status="PASS" starttime="20180505 22:05:38.872" endtime="20180505 22:05:38.873"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.873" endtime="20180505 22:05:38.873"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:38.873" endtime="20180505 22:05:38.873"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:38.870" endtime="20180505 22:05:38.873"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:38.870" endtime="20180505 22:05:38.874"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:38.867" endtime="20180505 22:05:38.874"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:38.867" endtime="20180505 22:05:38.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:05:38.874" level="INFO">${slitWidth} = 3.0</msg>
<status status="PASS" starttime="20180505 22:05:38.874" endtime="20180505 22:05:38.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:05:42.875" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:05:38.874" endtime="20180505 22:05:42.875"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:27.377" endtime="20180505 22:05:42.875"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:42.875" endtime="20180505 22:05:42.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:05:42.876" level="INFO">3.0</msg>
<status status="PASS" starttime="20180505 22:05:42.876" endtime="20180505 22:05:42.876"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:42.877" endtime="20180505 22:05:54.415"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:42.876" endtime="20180505 22:05:54.415"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.417" endtime="20180505 22:05:54.417"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:05:54.417" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:05:54.417" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005618&gt;</msg>
<status status="PASS" starttime="20180505 22:05:54.417" endtime="20180505 22:05:54.417"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:05:54.417" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:05:54.418" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea0056c0&gt;</msg>
<status status="PASS" starttime="20180505 22:05:54.417" endtime="20180505 22:05:54.418"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.418" endtime="20180505 22:05:54.418"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.418" endtime="20180505 22:05:54.418"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.418" endtime="20180505 22:05:54.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:05:54.420" level="INFO">${value} = 2.9957000000000003</msg>
<status status="PASS" starttime="20180505 22:05:54.419" endtime="20180505 22:05:54.420"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:05:54.420" level="INFO">${ExpectedValue} = 3.0</msg>
<status status="PASS" starttime="20180505 22:05:54.420" endtime="20180505 22:05:54.420"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:05:54.420" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:05:54.420" level="INFO">Value: 2.9957000000000003</msg>
<msg timestamp="20180505 22:05:54.421" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:05:54.421" level="INFO">Expected Value: 3.0</msg>
<status status="PASS" starttime="20180505 22:05:54.420" endtime="20180505 22:05:54.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:05:54.421" level="INFO">${high} = 3.01</msg>
<status status="PASS" starttime="20180505 22:05:54.421" endtime="20180505 22:05:54.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:05:54.422" level="INFO">${low} = 2.99</msg>
<status status="PASS" starttime="20180505 22:05:54.421" endtime="20180505 22:05:54.422"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.422" endtime="20180505 22:05:54.422"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:54.422" endtime="20180505 22:05:54.422"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:54.419" endtime="20180505 22:05:54.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:54.418" endtime="20180505 22:05:54.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:54.416" endtime="20180505 22:05:54.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:54.415" endtime="20180505 22:05:54.423"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:05:54.423" level="INFO">${slitWidth} = 3.5</msg>
<status status="PASS" starttime="20180505 22:05:54.423" endtime="20180505 22:05:54.423"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:05:58.424" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:05:54.423" endtime="20180505 22:05:58.424"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:42.875" endtime="20180505 22:05:58.424"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:58.424" endtime="20180505 22:05:58.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:05:58.425" level="INFO">3.5</msg>
<status status="PASS" starttime="20180505 22:05:58.424" endtime="20180505 22:05:58.425"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:05:58.425" endtime="20180505 22:06:09.968"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:58.425" endtime="20180505 22:06:09.968"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.969" endtime="20180505 22:06:09.969"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:06:09.970" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:06:09.970" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce8f0&gt;</msg>
<status status="PASS" starttime="20180505 22:06:09.969" endtime="20180505 22:06:09.970"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:06:09.970" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:06:09.970" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8ccea40&gt;</msg>
<status status="PASS" starttime="20180505 22:06:09.970" endtime="20180505 22:06:09.970"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.970" endtime="20180505 22:06:09.970"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.971" endtime="20180505 22:06:09.971"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.971" endtime="20180505 22:06:09.971"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:06:09.973" level="INFO">${value} = 3.4981</msg>
<status status="PASS" starttime="20180505 22:06:09.972" endtime="20180505 22:06:09.973"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:06:09.973" level="INFO">${ExpectedValue} = 3.5</msg>
<status status="PASS" starttime="20180505 22:06:09.973" endtime="20180505 22:06:09.973"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:06:09.973" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:06:09.973" level="INFO">Value: 3.4981</msg>
<msg timestamp="20180505 22:06:09.973" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:06:09.973" level="INFO">Expected Value: 3.5</msg>
<status status="PASS" starttime="20180505 22:06:09.973" endtime="20180505 22:06:09.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:06:09.974" level="INFO">${high} = 3.51</msg>
<status status="PASS" starttime="20180505 22:06:09.974" endtime="20180505 22:06:09.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:06:09.974" level="INFO">${low} = 3.49</msg>
<status status="PASS" starttime="20180505 22:06:09.974" endtime="20180505 22:06:09.974"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.974" endtime="20180505 22:06:09.975"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:09.975" endtime="20180505 22:06:09.975"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:09.972" endtime="20180505 22:06:09.975"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:09.971" endtime="20180505 22:06:09.975"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:09.969" endtime="20180505 22:06:09.975"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:09.968" endtime="20180505 22:06:09.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:06:09.976" level="INFO">${slitWidth} = 4.0</msg>
<status status="PASS" starttime="20180505 22:06:09.976" endtime="20180505 22:06:09.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:06:13.976" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:06:09.976" endtime="20180505 22:06:13.977"></status>
</kw>
<status status="PASS" starttime="20180505 22:05:58.424" endtime="20180505 22:06:13.977"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:13.977" endtime="20180505 22:06:13.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:06:13.978" level="INFO">4.0</msg>
<status status="PASS" starttime="20180505 22:06:13.977" endtime="20180505 22:06:13.978"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:13.978" endtime="20180505 22:06:25.446"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:13.978" endtime="20180505 22:06:25.446"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.447" endtime="20180505 22:06:25.447"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:06:25.447" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:06:25.447" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3340&gt;</msg>
<status status="PASS" starttime="20180505 22:06:25.447" endtime="20180505 22:06:25.447"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:06:25.448" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:06:25.448" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3d88&gt;</msg>
<status status="PASS" starttime="20180505 22:06:25.447" endtime="20180505 22:06:25.448"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.448" endtime="20180505 22:06:25.448"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.448" endtime="20180505 22:06:25.448"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.448" endtime="20180505 22:06:25.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:06:25.450" level="INFO">${value} = 3.9958</msg>
<status status="PASS" starttime="20180505 22:06:25.450" endtime="20180505 22:06:25.450"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:06:25.450" level="INFO">${ExpectedValue} = 4.0</msg>
<status status="PASS" starttime="20180505 22:06:25.450" endtime="20180505 22:06:25.450"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:06:25.451" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:06:25.451" level="INFO">Value: 3.9958</msg>
<msg timestamp="20180505 22:06:25.451" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:06:25.451" level="INFO">Expected Value: 4.0</msg>
<status status="PASS" starttime="20180505 22:06:25.451" endtime="20180505 22:06:25.451"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:06:25.452" level="INFO">${high} = 4.01</msg>
<status status="PASS" starttime="20180505 22:06:25.451" endtime="20180505 22:06:25.452"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:06:25.452" level="INFO">${low} = 3.99</msg>
<status status="PASS" starttime="20180505 22:06:25.452" endtime="20180505 22:06:25.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.452" endtime="20180505 22:06:25.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:25.453" endtime="20180505 22:06:25.453"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:25.449" endtime="20180505 22:06:25.453"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:25.449" endtime="20180505 22:06:25.453"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:25.446" endtime="20180505 22:06:25.453"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:25.446" endtime="20180505 22:06:25.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:06:25.454" level="INFO">${slitWidth} = 4.5</msg>
<status status="PASS" starttime="20180505 22:06:25.453" endtime="20180505 22:06:25.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:06:29.455" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:06:25.454" endtime="20180505 22:06:29.455"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:13.977" endtime="20180505 22:06:29.455"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:29.455" endtime="20180505 22:06:29.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:06:29.456" level="INFO">4.5</msg>
<status status="PASS" starttime="20180505 22:06:29.456" endtime="20180505 22:06:29.456"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:29.456" endtime="20180505 22:06:40.953"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:29.456" endtime="20180505 22:06:40.953"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.954" endtime="20180505 22:06:40.954"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:06:40.954" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:06:40.954" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc36c0&gt;</msg>
<status status="PASS" starttime="20180505 22:06:40.954" endtime="20180505 22:06:40.954"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:06:40.955" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:06:40.955" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffac38&gt;</msg>
<status status="PASS" starttime="20180505 22:06:40.954" endtime="20180505 22:06:40.955"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.955" endtime="20180505 22:06:40.955"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.955" endtime="20180505 22:06:40.955"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.955" endtime="20180505 22:06:40.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:06:40.957" level="INFO">${value} = 4.4983</msg>
<status status="PASS" starttime="20180505 22:06:40.956" endtime="20180505 22:06:40.957"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:06:40.957" level="INFO">${ExpectedValue} = 4.5</msg>
<status status="PASS" starttime="20180505 22:06:40.957" endtime="20180505 22:06:40.957"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:06:40.957" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:06:40.958" level="INFO">Value: 4.4983</msg>
<msg timestamp="20180505 22:06:40.958" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:06:40.958" level="INFO">Expected Value: 4.5</msg>
<status status="PASS" starttime="20180505 22:06:40.957" endtime="20180505 22:06:40.958"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:06:40.958" level="INFO">${high} = 4.51</msg>
<status status="PASS" starttime="20180505 22:06:40.958" endtime="20180505 22:06:40.958"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:06:40.958" level="INFO">${low} = 4.49</msg>
<status status="PASS" starttime="20180505 22:06:40.958" endtime="20180505 22:06:40.959"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.959" endtime="20180505 22:06:40.959"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:40.959" endtime="20180505 22:06:40.959"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:40.956" endtime="20180505 22:06:40.959"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:40.956" endtime="20180505 22:06:40.959"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:40.953" endtime="20180505 22:06:40.959"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:40.953" endtime="20180505 22:06:40.960"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:06:40.960" level="INFO">${slitWidth} = 5.0</msg>
<status status="PASS" starttime="20180505 22:06:40.960" endtime="20180505 22:06:40.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:06:44.961" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:06:40.960" endtime="20180505 22:06:44.961"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:29.455" endtime="20180505 22:06:44.961"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:44.961" endtime="20180505 22:06:44.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:06:44.962" level="INFO">5.0</msg>
<status status="PASS" starttime="20180505 22:06:44.962" endtime="20180505 22:06:44.962"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:44.962" endtime="20180505 22:06:56.450"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:44.962" endtime="20180505 22:06:56.450"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.451" endtime="20180505 22:06:56.451"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:06:56.452" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:06:56.452" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cceed8&gt;</msg>
<status status="PASS" starttime="20180505 22:06:56.451" endtime="20180505 22:06:56.452"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:06:56.452" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:06:56.452" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc8618&gt;</msg>
<status status="PASS" starttime="20180505 22:06:56.452" endtime="20180505 22:06:56.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.452" endtime="20180505 22:06:56.452"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.452" endtime="20180505 22:06:56.453"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.453" endtime="20180505 22:06:56.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:06:56.454" level="INFO">${value} = 4.996</msg>
<status status="PASS" starttime="20180505 22:06:56.454" endtime="20180505 22:06:56.454"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:06:56.455" level="INFO">${ExpectedValue} = 5.0</msg>
<status status="PASS" starttime="20180505 22:06:56.454" endtime="20180505 22:06:56.455"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:06:56.455" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:06:56.455" level="INFO">Value: 4.996</msg>
<msg timestamp="20180505 22:06:56.455" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:06:56.455" level="INFO">Expected Value: 5.0</msg>
<status status="PASS" starttime="20180505 22:06:56.455" endtime="20180505 22:06:56.455"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:06:56.456" level="INFO">${high} = 5.01</msg>
<status status="PASS" starttime="20180505 22:06:56.455" endtime="20180505 22:06:56.456"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:06:56.456" level="INFO">${low} = 4.99</msg>
<status status="PASS" starttime="20180505 22:06:56.456" endtime="20180505 22:06:56.456"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.456" endtime="20180505 22:06:56.456"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:06:56.457" endtime="20180505 22:06:56.457"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:56.453" endtime="20180505 22:06:56.457"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:56.453" endtime="20180505 22:06:56.457"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:56.451" endtime="20180505 22:06:56.457"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:56.450" endtime="20180505 22:06:56.457"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:06:56.458" level="INFO">${slitWidth} = 5.5</msg>
<status status="PASS" starttime="20180505 22:06:56.457" endtime="20180505 22:06:56.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:07:00.458" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:06:56.458" endtime="20180505 22:07:00.459"></status>
</kw>
<status status="PASS" starttime="20180505 22:06:44.961" endtime="20180505 22:07:00.459"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:07:00.459" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 22:07:00.459" endtime="20180505 22:07:00.459"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:00.459" endtime="20180505 22:07:00.459"></status>
</kw>
<status status="PASS" starttime="20180505 22:04:10.086" endtime="20180505 22:07:00.473"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:04:10.075" endtime="20180505 22:07:00.474" critical="yes"></status>
</test>
<test id="s1-t13" name="From Enable Update Slit FrontExit Slit Width and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update Slit Width and verify value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:00.475" endtime="20180505 22:07:00.475"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${FrontExit}</arg>
</arguments>
<assign>
<var>${slitNumber}</var>
</assign>
<msg timestamp="20180505 22:07:00.475" level="INFO">${slitNumber} = 2</msg>
<status status="PASS" starttime="20180505 22:07:00.475" endtime="20180505 22:07:00.475"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${initSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:00.476" level="INFO">${slitWidth} = 0.0</msg>
<status status="PASS" starttime="20180505 22:07:00.476" endtime="20180505 22:07:00.476"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaSlitWidth}</arg>
</arguments>
<assign>
<var>${DSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:00.477" level="INFO">${DSlitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:07:00.476" endtime="20180505 22:07:00.477"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxSlitWidth}</arg>
</arguments>
<assign>
<var>${MaxSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:00.477" level="INFO">${MaxSlitWidth} = 5.3</msg>
<status status="PASS" starttime="20180505 22:07:00.477" endtime="20180505 22:07:00.477"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:00.499" endtime="20180505 22:07:00.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:07:00.500" level="INFO">0.0</msg>
<status status="PASS" starttime="20180505 22:07:00.500" endtime="20180505 22:07:00.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:00.501" endtime="20180505 22:07:12.080"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:00.501" endtime="20180505 22:07:12.080"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.081" endtime="20180505 22:07:12.081"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:07:12.089" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:07:12.089" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a6f8&gt;</msg>
<status status="PASS" starttime="20180505 22:07:12.081" endtime="20180505 22:07:12.089"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:07:12.090" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:07:12.090" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8aed8&gt;</msg>
<status status="PASS" starttime="20180505 22:07:12.090" endtime="20180505 22:07:12.090"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.090" endtime="20180505 22:07:12.090"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.090" endtime="20180505 22:07:12.091"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.091" endtime="20180505 22:07:12.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:07:12.092" level="INFO">${value} = 0.0</msg>
<status status="PASS" starttime="20180505 22:07:12.092" endtime="20180505 22:07:12.092"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:07:12.093" level="INFO">${ExpectedValue} = 0.0</msg>
<status status="PASS" starttime="20180505 22:07:12.093" endtime="20180505 22:07:12.093"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:07:12.093" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:07:12.093" level="INFO">Value: 0.0</msg>
<msg timestamp="20180505 22:07:12.093" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:07:12.093" level="INFO">Expected Value: 0.0</msg>
<status status="PASS" starttime="20180505 22:07:12.093" endtime="20180505 22:07:12.094"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:07:12.094" level="INFO">${high} = 0.01</msg>
<status status="PASS" starttime="20180505 22:07:12.094" endtime="20180505 22:07:12.094"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:07:12.094" level="INFO">${low} = -0.01</msg>
<status status="PASS" starttime="20180505 22:07:12.094" endtime="20180505 22:07:12.094"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.094" endtime="20180505 22:07:12.095"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:12.095" endtime="20180505 22:07:12.095"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:12.092" endtime="20180505 22:07:12.095"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:12.091" endtime="20180505 22:07:12.095"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:12.081" endtime="20180505 22:07:12.095"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:12.080" endtime="20180505 22:07:12.095"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:12.096" level="INFO">${slitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:07:12.095" endtime="20180505 22:07:12.096"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:07:16.096" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:07:12.096" endtime="20180505 22:07:16.096"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:00.498" endtime="20180505 22:07:16.096"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:16.097" endtime="20180505 22:07:16.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:07:16.097" level="INFO">0.5</msg>
<status status="PASS" starttime="20180505 22:07:16.097" endtime="20180505 22:07:16.097"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:16.098" endtime="20180505 22:07:27.570"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:16.098" endtime="20180505 22:07:27.570"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.571" endtime="20180505 22:07:27.571"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:07:27.572" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:07:27.572" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad935e0&gt;</msg>
<status status="PASS" starttime="20180505 22:07:27.571" endtime="20180505 22:07:27.572"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:07:27.572" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:07:27.572" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad93ea0&gt;</msg>
<status status="PASS" starttime="20180505 22:07:27.572" endtime="20180505 22:07:27.572"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.572" endtime="20180505 22:07:27.572"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.573" endtime="20180505 22:07:27.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.573" endtime="20180505 22:07:27.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:07:27.574" level="INFO">${value} = 0.49770000000000003</msg>
<status status="PASS" starttime="20180505 22:07:27.574" endtime="20180505 22:07:27.575"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:07:27.575" level="INFO">${ExpectedValue} = 0.5</msg>
<status status="PASS" starttime="20180505 22:07:27.575" endtime="20180505 22:07:27.575"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:07:27.575" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:07:27.575" level="INFO">Value: 0.49770000000000003</msg>
<msg timestamp="20180505 22:07:27.575" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:07:27.576" level="INFO">Expected Value: 0.5</msg>
<status status="PASS" starttime="20180505 22:07:27.575" endtime="20180505 22:07:27.576"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:07:27.576" level="INFO">${high} = 0.51</msg>
<status status="PASS" starttime="20180505 22:07:27.576" endtime="20180505 22:07:27.576"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:07:27.576" level="INFO">${low} = 0.49</msg>
<status status="PASS" starttime="20180505 22:07:27.576" endtime="20180505 22:07:27.576"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.576" endtime="20180505 22:07:27.577"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:27.577" endtime="20180505 22:07:27.577"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:27.574" endtime="20180505 22:07:27.577"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:27.573" endtime="20180505 22:07:27.577"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:27.571" endtime="20180505 22:07:27.577"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:27.570" endtime="20180505 22:07:27.577"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:27.578" level="INFO">${slitWidth} = 1.0</msg>
<status status="PASS" starttime="20180505 22:07:27.577" endtime="20180505 22:07:27.578"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:07:31.579" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:07:27.578" endtime="20180505 22:07:31.579"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:16.097" endtime="20180505 22:07:31.579"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:31.579" endtime="20180505 22:07:31.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:07:31.580" level="INFO">1.0</msg>
<status status="PASS" starttime="20180505 22:07:31.579" endtime="20180505 22:07:31.580"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:31.580" endtime="20180505 22:07:43.119"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:31.580" endtime="20180505 22:07:43.119"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.120" endtime="20180505 22:07:43.120"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:07:43.121" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:07:43.121" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3420&gt;</msg>
<status status="PASS" starttime="20180505 22:07:43.120" endtime="20180505 22:07:43.121"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:07:43.121" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:07:43.121" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005490&gt;</msg>
<status status="PASS" starttime="20180505 22:07:43.121" endtime="20180505 22:07:43.121"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.121" endtime="20180505 22:07:43.121"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.121" endtime="20180505 22:07:43.122"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.122" endtime="20180505 22:07:43.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:07:43.123" level="INFO">${value} = 0.9954000000000001</msg>
<status status="PASS" starttime="20180505 22:07:43.123" endtime="20180505 22:07:43.123"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:07:43.124" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:07:43.123" endtime="20180505 22:07:43.124"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:07:43.124" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:07:43.124" level="INFO">Value: 0.9954000000000001</msg>
<msg timestamp="20180505 22:07:43.124" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:07:43.124" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:07:43.124" endtime="20180505 22:07:43.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:07:43.125" level="INFO">${high} = 1.01</msg>
<status status="PASS" starttime="20180505 22:07:43.124" endtime="20180505 22:07:43.125"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:07:43.125" level="INFO">${low} = 0.99</msg>
<status status="PASS" starttime="20180505 22:07:43.125" endtime="20180505 22:07:43.125"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.125" endtime="20180505 22:07:43.125"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:43.125" endtime="20180505 22:07:43.126"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:43.122" endtime="20180505 22:07:43.126"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:43.122" endtime="20180505 22:07:43.126"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:43.120" endtime="20180505 22:07:43.126"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:43.119" endtime="20180505 22:07:43.126"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:43.126" level="INFO">${slitWidth} = 1.5</msg>
<status status="PASS" starttime="20180505 22:07:43.126" endtime="20180505 22:07:43.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:07:47.127" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:07:43.126" endtime="20180505 22:07:47.127"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:31.579" endtime="20180505 22:07:47.127"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:47.127" endtime="20180505 22:07:47.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:07:47.128" level="INFO">1.5</msg>
<status status="PASS" starttime="20180505 22:07:47.128" endtime="20180505 22:07:47.128"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:47.129" endtime="20180505 22:07:58.615"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:47.128" endtime="20180505 22:07:58.615"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.616" endtime="20180505 22:07:58.616"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:07:58.617" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:07:58.617" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cfff10&gt;</msg>
<status status="PASS" starttime="20180505 22:07:58.617" endtime="20180505 22:07:58.617"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:07:58.617" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:07:58.617" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cffa78&gt;</msg>
<status status="PASS" starttime="20180505 22:07:58.617" endtime="20180505 22:07:58.617"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.618" endtime="20180505 22:07:58.618"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.618" endtime="20180505 22:07:58.618"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.618" endtime="20180505 22:07:58.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:07:58.620" level="INFO">${value} = 1.4978</msg>
<status status="PASS" starttime="20180505 22:07:58.619" endtime="20180505 22:07:58.620"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:07:58.620" level="INFO">${ExpectedValue} = 1.5</msg>
<status status="PASS" starttime="20180505 22:07:58.620" endtime="20180505 22:07:58.620"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:07:58.620" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:07:58.620" level="INFO">Value: 1.4978</msg>
<msg timestamp="20180505 22:07:58.621" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:07:58.621" level="INFO">Expected Value: 1.5</msg>
<status status="PASS" starttime="20180505 22:07:58.620" endtime="20180505 22:07:58.621"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:07:58.621" level="INFO">${high} = 1.51</msg>
<status status="PASS" starttime="20180505 22:07:58.621" endtime="20180505 22:07:58.621"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:07:58.621" level="INFO">${low} = 1.49</msg>
<status status="PASS" starttime="20180505 22:07:58.621" endtime="20180505 22:07:58.622"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.622" endtime="20180505 22:07:58.622"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:07:58.622" endtime="20180505 22:07:58.622"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:58.619" endtime="20180505 22:07:58.622"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:58.618" endtime="20180505 22:07:58.622"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:58.616" endtime="20180505 22:07:58.623"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:58.616" endtime="20180505 22:07:58.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:07:58.623" level="INFO">${slitWidth} = 2.0</msg>
<status status="PASS" starttime="20180505 22:07:58.623" endtime="20180505 22:07:58.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:08:02.624" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:07:58.623" endtime="20180505 22:08:02.624"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:47.127" endtime="20180505 22:08:02.624"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:02.624" endtime="20180505 22:08:02.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:08:02.625" level="INFO">2.0</msg>
<status status="PASS" starttime="20180505 22:08:02.625" endtime="20180505 22:08:02.625"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:02.625" endtime="20180505 22:08:14.018"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:02.625" endtime="20180505 22:08:14.018"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.019" endtime="20180505 22:08:14.019"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:08:14.019" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:08:14.019" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86eca6ff48&gt;</msg>
<status status="PASS" starttime="20180505 22:08:14.019" endtime="20180505 22:08:14.019"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:08:14.020" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:08:14.020" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad935a8&gt;</msg>
<status status="PASS" starttime="20180505 22:08:14.019" endtime="20180505 22:08:14.020"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.020" endtime="20180505 22:08:14.028"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.029" endtime="20180505 22:08:14.029"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.029" endtime="20180505 22:08:14.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:08:14.030" level="INFO">${value} = 1.9955</msg>
<status status="PASS" starttime="20180505 22:08:14.030" endtime="20180505 22:08:14.030"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:08:14.031" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:08:14.031" endtime="20180505 22:08:14.031"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:08:14.031" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:08:14.031" level="INFO">Value: 1.9955</msg>
<msg timestamp="20180505 22:08:14.032" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:08:14.032" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:08:14.031" endtime="20180505 22:08:14.032"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:08:14.032" level="INFO">${high} = 2.01</msg>
<status status="PASS" starttime="20180505 22:08:14.032" endtime="20180505 22:08:14.032"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:08:14.032" level="INFO">${low} = 1.99</msg>
<status status="PASS" starttime="20180505 22:08:14.032" endtime="20180505 22:08:14.032"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.033" endtime="20180505 22:08:14.033"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:14.033" endtime="20180505 22:08:14.033"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:14.030" endtime="20180505 22:08:14.033"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:14.029" endtime="20180505 22:08:14.033"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:14.018" endtime="20180505 22:08:14.033"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:14.018" endtime="20180505 22:08:14.034"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:08:14.034" level="INFO">${slitWidth} = 2.5</msg>
<status status="PASS" starttime="20180505 22:08:14.034" endtime="20180505 22:08:14.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:08:18.035" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:08:14.034" endtime="20180505 22:08:18.035"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:02.624" endtime="20180505 22:08:18.035"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:18.035" endtime="20180505 22:08:18.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:08:18.036" level="INFO">2.5</msg>
<status status="PASS" starttime="20180505 22:08:18.036" endtime="20180505 22:08:18.036"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:18.036" endtime="20180505 22:08:29.763"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:18.036" endtime="20180505 22:08:29.763"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.764" endtime="20180505 22:08:29.764"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:08:29.764" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:08:29.764" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad93068&gt;</msg>
<status status="PASS" starttime="20180505 22:08:29.764" endtime="20180505 22:08:29.764"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:08:29.765" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:08:29.765" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8aae8&gt;</msg>
<status status="PASS" starttime="20180505 22:08:29.764" endtime="20180505 22:08:29.765"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.765" endtime="20180505 22:08:29.765"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.765" endtime="20180505 22:08:29.765"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.765" endtime="20180505 22:08:29.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:08:29.767" level="INFO">${value} = 2.498</msg>
<status status="PASS" starttime="20180505 22:08:29.766" endtime="20180505 22:08:29.767"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:08:29.767" level="INFO">${ExpectedValue} = 2.5</msg>
<status status="PASS" starttime="20180505 22:08:29.767" endtime="20180505 22:08:29.767"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:08:29.768" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:08:29.768" level="INFO">Value: 2.498</msg>
<msg timestamp="20180505 22:08:29.768" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:08:29.768" level="INFO">Expected Value: 2.5</msg>
<status status="PASS" starttime="20180505 22:08:29.767" endtime="20180505 22:08:29.768"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:08:29.768" level="INFO">${high} = 2.51</msg>
<status status="PASS" starttime="20180505 22:08:29.768" endtime="20180505 22:08:29.769"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:08:29.769" level="INFO">${low} = 2.49</msg>
<status status="PASS" starttime="20180505 22:08:29.769" endtime="20180505 22:08:29.769"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.769" endtime="20180505 22:08:29.769"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:29.769" endtime="20180505 22:08:29.770"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:29.766" endtime="20180505 22:08:29.770"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:29.765" endtime="20180505 22:08:29.770"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:29.763" endtime="20180505 22:08:29.770"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:29.763" endtime="20180505 22:08:29.770"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:08:29.771" level="INFO">${slitWidth} = 3.0</msg>
<status status="PASS" starttime="20180505 22:08:29.770" endtime="20180505 22:08:29.771"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:08:33.772" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:08:29.771" endtime="20180505 22:08:33.772"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:18.035" endtime="20180505 22:08:33.772"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:33.772" endtime="20180505 22:08:33.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:08:33.773" level="INFO">3.0</msg>
<status status="PASS" starttime="20180505 22:08:33.772" endtime="20180505 22:08:33.773"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:33.773" endtime="20180505 22:08:45.536"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:33.773" endtime="20180505 22:08:45.536"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.537" endtime="20180505 22:08:45.537"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:08:45.538" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:08:45.538" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8ccee68&gt;</msg>
<status status="PASS" starttime="20180505 22:08:45.537" endtime="20180505 22:08:45.538"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:08:45.538" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:08:45.538" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a7d8&gt;</msg>
<status status="PASS" starttime="20180505 22:08:45.538" endtime="20180505 22:08:45.538"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.538" endtime="20180505 22:08:45.539"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.539" endtime="20180505 22:08:45.539"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.539" endtime="20180505 22:08:45.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:08:45.540" level="INFO">${value} = 2.9957000000000003</msg>
<status status="PASS" starttime="20180505 22:08:45.540" endtime="20180505 22:08:45.540"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:08:45.541" level="INFO">${ExpectedValue} = 3.0</msg>
<status status="PASS" starttime="20180505 22:08:45.540" endtime="20180505 22:08:45.541"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:08:45.541" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:08:45.541" level="INFO">Value: 2.9957000000000003</msg>
<msg timestamp="20180505 22:08:45.541" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:08:45.541" level="INFO">Expected Value: 3.0</msg>
<status status="PASS" starttime="20180505 22:08:45.541" endtime="20180505 22:08:45.541"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:08:45.542" level="INFO">${high} = 3.01</msg>
<status status="PASS" starttime="20180505 22:08:45.541" endtime="20180505 22:08:45.542"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:08:45.542" level="INFO">${low} = 2.99</msg>
<status status="PASS" starttime="20180505 22:08:45.542" endtime="20180505 22:08:45.542"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.542" endtime="20180505 22:08:45.543"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:45.543" endtime="20180505 22:08:45.543"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:45.540" endtime="20180505 22:08:45.543"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:45.539" endtime="20180505 22:08:45.543"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:45.537" endtime="20180505 22:08:45.543"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:45.536" endtime="20180505 22:08:45.543"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:08:45.544" level="INFO">${slitWidth} = 3.5</msg>
<status status="PASS" starttime="20180505 22:08:45.543" endtime="20180505 22:08:45.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:08:49.545" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:08:45.544" endtime="20180505 22:08:49.545"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:33.772" endtime="20180505 22:08:49.545"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:49.545" endtime="20180505 22:08:49.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:08:49.546" level="INFO">3.5</msg>
<status status="PASS" starttime="20180505 22:08:49.546" endtime="20180505 22:08:49.546"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:08:49.546" endtime="20180505 22:09:01.255"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:49.546" endtime="20180505 22:09:01.255"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.256" endtime="20180505 22:09:01.256"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:09:01.256" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:09:01.257" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a848&gt;</msg>
<status status="PASS" starttime="20180505 22:09:01.256" endtime="20180505 22:09:01.257"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:09:01.257" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:09:01.257" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a2d0&gt;</msg>
<status status="PASS" starttime="20180505 22:09:01.257" endtime="20180505 22:09:01.257"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.257" endtime="20180505 22:09:01.257"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.257" endtime="20180505 22:09:01.258"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.258" endtime="20180505 22:09:01.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:09:01.259" level="INFO">${value} = 3.4981</msg>
<status status="PASS" starttime="20180505 22:09:01.259" endtime="20180505 22:09:01.259"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:09:01.260" level="INFO">${ExpectedValue} = 3.5</msg>
<status status="PASS" starttime="20180505 22:09:01.259" endtime="20180505 22:09:01.260"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:09:01.260" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:09:01.260" level="INFO">Value: 3.4981</msg>
<msg timestamp="20180505 22:09:01.260" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:09:01.260" level="INFO">Expected Value: 3.5</msg>
<status status="PASS" starttime="20180505 22:09:01.260" endtime="20180505 22:09:01.260"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:09:01.261" level="INFO">${high} = 3.51</msg>
<status status="PASS" starttime="20180505 22:09:01.260" endtime="20180505 22:09:01.261"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:09:01.261" level="INFO">${low} = 3.49</msg>
<status status="PASS" starttime="20180505 22:09:01.261" endtime="20180505 22:09:01.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.261" endtime="20180505 22:09:01.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:01.261" endtime="20180505 22:09:01.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:01.258" endtime="20180505 22:09:01.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:01.258" endtime="20180505 22:09:01.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:01.255" endtime="20180505 22:09:01.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:01.255" endtime="20180505 22:09:01.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:09:01.262" level="INFO">${slitWidth} = 4.0</msg>
<status status="PASS" starttime="20180505 22:09:01.262" endtime="20180505 22:09:01.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:09:05.263" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:09:01.262" endtime="20180505 22:09:05.264"></status>
</kw>
<status status="PASS" starttime="20180505 22:08:49.545" endtime="20180505 22:09:05.264"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:05.264" endtime="20180505 22:09:05.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:09:05.265" level="INFO">4.0</msg>
<status status="PASS" starttime="20180505 22:09:05.265" endtime="20180505 22:09:05.266"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:05.266" endtime="20180505 22:09:17.255"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:05.266" endtime="20180505 22:09:17.255"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.256" endtime="20180505 22:09:17.256"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:09:17.256" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:09:17.256" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad93d50&gt;</msg>
<status status="PASS" starttime="20180505 22:09:17.256" endtime="20180505 22:09:17.256"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:09:17.257" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:09:17.257" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005ea0&gt;</msg>
<status status="PASS" starttime="20180505 22:09:17.256" endtime="20180505 22:09:17.257"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.257" endtime="20180505 22:09:17.257"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.257" endtime="20180505 22:09:17.257"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.257" endtime="20180505 22:09:17.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:09:17.259" level="INFO">${value} = 3.9958</msg>
<status status="PASS" starttime="20180505 22:09:17.259" endtime="20180505 22:09:17.259"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:09:17.259" level="INFO">${ExpectedValue} = 4.0</msg>
<status status="PASS" starttime="20180505 22:09:17.259" endtime="20180505 22:09:17.260"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:09:17.260" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:09:17.260" level="INFO">Value: 3.9958</msg>
<msg timestamp="20180505 22:09:17.260" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:09:17.260" level="INFO">Expected Value: 4.0</msg>
<status status="PASS" starttime="20180505 22:09:17.260" endtime="20180505 22:09:17.260"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:09:17.260" level="INFO">${high} = 4.01</msg>
<status status="PASS" starttime="20180505 22:09:17.260" endtime="20180505 22:09:17.260"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:09:17.261" level="INFO">${low} = 3.99</msg>
<status status="PASS" starttime="20180505 22:09:17.261" endtime="20180505 22:09:17.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.261" endtime="20180505 22:09:17.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:17.261" endtime="20180505 22:09:17.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:17.258" endtime="20180505 22:09:17.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:17.258" endtime="20180505 22:09:17.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:17.255" endtime="20180505 22:09:17.262"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:17.255" endtime="20180505 22:09:17.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:09:17.262" level="INFO">${slitWidth} = 4.5</msg>
<status status="PASS" starttime="20180505 22:09:17.262" endtime="20180505 22:09:17.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:09:21.263" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:09:17.262" endtime="20180505 22:09:21.263"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:05.264" endtime="20180505 22:09:21.263"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:21.263" endtime="20180505 22:09:21.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:09:21.264" level="INFO">4.5</msg>
<status status="PASS" starttime="20180505 22:09:21.263" endtime="20180505 22:09:21.264"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:21.264" endtime="20180505 22:09:32.898"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:21.264" endtime="20180505 22:09:32.898"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.899" endtime="20180505 22:09:32.899"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:09:32.899" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:09:32.899" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea001a40&gt;</msg>
<status status="PASS" starttime="20180505 22:09:32.899" endtime="20180505 22:09:32.899"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:09:32.900" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:09:32.900" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a618&gt;</msg>
<status status="PASS" starttime="20180505 22:09:32.899" endtime="20180505 22:09:32.900"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.900" endtime="20180505 22:09:32.900"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.900" endtime="20180505 22:09:32.900"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.900" endtime="20180505 22:09:32.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:09:32.902" level="INFO">${value} = 4.4983</msg>
<status status="PASS" starttime="20180505 22:09:32.902" endtime="20180505 22:09:32.902"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:09:32.902" level="INFO">${ExpectedValue} = 4.5</msg>
<status status="PASS" starttime="20180505 22:09:32.902" endtime="20180505 22:09:32.902"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:09:32.903" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:09:32.903" level="INFO">Value: 4.4983</msg>
<msg timestamp="20180505 22:09:32.903" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:09:32.903" level="INFO">Expected Value: 4.5</msg>
<status status="PASS" starttime="20180505 22:09:32.902" endtime="20180505 22:09:32.903"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:09:32.903" level="INFO">${high} = 4.51</msg>
<status status="PASS" starttime="20180505 22:09:32.903" endtime="20180505 22:09:32.903"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:09:32.904" level="INFO">${low} = 4.49</msg>
<status status="PASS" starttime="20180505 22:09:32.903" endtime="20180505 22:09:32.904"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.904" endtime="20180505 22:09:32.904"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:32.904" endtime="20180505 22:09:32.905"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:32.901" endtime="20180505 22:09:32.905"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:32.901" endtime="20180505 22:09:32.905"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:32.898" endtime="20180505 22:09:32.905"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:32.898" endtime="20180505 22:09:32.905"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:09:32.905" level="INFO">${slitWidth} = 5.0</msg>
<status status="PASS" starttime="20180505 22:09:32.905" endtime="20180505 22:09:32.905"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:09:36.906" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:09:32.905" endtime="20180505 22:09:36.907"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:21.263" endtime="20180505 22:09:36.907"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:36.907" endtime="20180505 22:09:36.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:09:36.908" level="INFO">5.0</msg>
<status status="PASS" starttime="20180505 22:09:36.908" endtime="20180505 22:09:36.908"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Change Slit Width Command</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Issue Change Slit Width Command" library="atMonochromator_SAL">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:36.908" endtime="20180505 22:09:48.413"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:36.908" endtime="20180505 22:09:48.413"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Slit Width Value</arg>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Slit Width Value" library="monochromator_helpers">
<arguments>
<arg>${slitNumber}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.414" endtime="20180505 22:09:48.415"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:09:48.415" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:09:48.415" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8aab0&gt;</msg>
<status status="PASS" starttime="20180505 22:09:48.415" endtime="20180505 22:09:48.415"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:09:48.415" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:09:48.415" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea001d50&gt;</msg>
<status status="PASS" starttime="20180505 22:09:48.415" endtime="20180505 22:09:48.415"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.415" endtime="20180505 22:09:48.416"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.416" endtime="20180505 22:09:48.416"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.416" endtime="20180505 22:09:48.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${expectedSlit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:09:48.417" level="INFO">${value} = 4.996</msg>
<status status="PASS" starttime="20180505 22:09:48.417" endtime="20180505 22:09:48.417"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:09:48.418" level="INFO">${ExpectedValue} = 5.0</msg>
<status status="PASS" starttime="20180505 22:09:48.418" endtime="20180505 22:09:48.418"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:09:48.418" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:09:48.418" level="INFO">Value: 4.996</msg>
<msg timestamp="20180505 22:09:48.418" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:09:48.418" level="INFO">Expected Value: 5.0</msg>
<status status="PASS" starttime="20180505 22:09:48.418" endtime="20180505 22:09:48.419"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:09:48.419" level="INFO">${high} = 5.01</msg>
<status status="PASS" starttime="20180505 22:09:48.419" endtime="20180505 22:09:48.419"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:09:48.419" level="INFO">${low} = 4.99</msg>
<status status="PASS" starttime="20180505 22:09:48.419" endtime="20180505 22:09:48.419"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.419" endtime="20180505 22:09:48.420"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:48.420" endtime="20180505 22:09:48.420"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:48.417" endtime="20180505 22:09:48.420"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:48.416" endtime="20180505 22:09:48.420"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:48.414" endtime="20180505 22:09:48.420"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:48.414" endtime="20180505 22:09:48.420"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:09:48.421" level="INFO">${slitWidth} = 5.5</msg>
<status status="PASS" starttime="20180505 22:09:48.420" endtime="20180505 22:09:48.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:09:52.422" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:09:48.421" endtime="20180505 22:09:52.422"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:36.907" endtime="20180505 22:09:52.422"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:09:52.423" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 22:09:52.422" endtime="20180505 22:09:52.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:52.422" endtime="20180505 22:09:52.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:07:00.477" endtime="20180505 22:09:52.432"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:07:00.474" endtime="20180505 22:09:52.433" critical="yes"></status>
</test>
<test id="s1-t14" name="From Enable Setup All Parameters in Blue Grating and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update All parameters and verify all changed to right value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:52.434" endtime="20180505 22:09:52.434"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${1.3}</arg>
</arguments>
<assign>
<var>${FrontExitWidth}</var>
</assign>
<msg timestamp="20180505 22:09:52.435" level="INFO">${FrontExitWidth} = 1.3</msg>
<status status="PASS" starttime="20180505 22:09:52.434" endtime="20180505 22:09:52.435"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${1.1}</arg>
</arguments>
<assign>
<var>${FrontEntranceWidth}</var>
</assign>
<msg timestamp="20180505 22:09:52.435" level="INFO">${FrontEntranceWidth} = 1.1</msg>
<status status="PASS" starttime="20180505 22:09:52.435" endtime="20180505 22:09:52.435"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Blue}</arg>
</arguments>
<assign>
<var>${grating}</var>
</assign>
<msg timestamp="20180505 22:09:52.435" level="INFO">${grating} = 1</msg>
<status status="PASS" starttime="20180505 22:09:52.435" endtime="20180505 22:09:52.435"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaWavelength}</arg>
</arguments>
<assign>
<var>${DW}</var>
</assign>
<msg timestamp="20180505 22:09:52.436" level="INFO">${DW} = 50.0</msg>
<status status="PASS" starttime="20180505 22:09:52.435" endtime="20180505 22:09:52.436"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${initWavelength}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:09:52.436" level="INFO">${Wavelength} = 400.0</msg>
<status status="PASS" starttime="20180505 22:09:52.436" endtime="20180505 22:09:52.436"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR1}</arg>
</arguments>
<assign>
<var>${MaxValue}</var>
</assign>
<msg timestamp="20180505 22:09:52.437" level="INFO">${MaxValue} = 650.0</msg>
<status status="PASS" starttime="20180505 22:09:52.436" endtime="20180505 22:09:52.437"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:52.455" endtime="20180505 22:09:52.456"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:09:52.456" level="INFO">Wavelength: 400.0</msg>
<msg timestamp="20180505 22:09:52.456" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:09:52.456" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:09:52.456" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:09:52.456" endtime="20180505 22:09:52.456"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:09:52.457" endtime="20180505 22:10:04.035"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:52.457" endtime="20180505 22:10:04.035"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:04.036" endtime="20180505 22:10:04.036"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:10:07.039" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:10:07.039" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce538&gt;</msg>
<status status="PASS" starttime="20180505 22:10:04.037" endtime="20180505 22:10:07.039"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:10:07.040" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:10:07.040" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea0010a0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:07.040" endtime="20180505 22:10:07.040"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.040" endtime="20180505 22:10:07.040"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.040" endtime="20180505 22:10:07.041"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.041" endtime="20180505 22:10:07.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:07.042" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:10:07.042" endtime="20180505 22:10:07.042"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:07.043" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:10:07.042" endtime="20180505 22:10:07.043"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:07.043" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:07.043" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:10:07.043" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:07.043" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:10:07.043" endtime="20180505 22:10:07.043"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:07.044" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:10:07.043" endtime="20180505 22:10:07.044"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:07.044" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:10:07.044" endtime="20180505 22:10:07.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.044" endtime="20180505 22:10:07.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.044" endtime="20180505 22:10:07.045"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.041" endtime="20180505 22:10:07.045"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.041" endtime="20180505 22:10:07.045"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:07.046" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:10:07.046" endtime="20180505 22:10:07.046"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:07.047" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:10:07.046" endtime="20180505 22:10:07.047"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:07.055" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:07.056" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:10:07.056" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:07.056" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:10:07.047" endtime="20180505 22:10:07.056"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:07.056" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:10:07.056" endtime="20180505 22:10:07.056"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:07.057" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:10:07.056" endtime="20180505 22:10:07.057"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.057" endtime="20180505 22:10:07.057"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.057" endtime="20180505 22:10:07.057"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.045" endtime="20180505 22:10:07.058"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.045" endtime="20180505 22:10:07.058"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:04.036" endtime="20180505 22:10:07.058"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:04.036" endtime="20180505 22:10:07.058"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.059" endtime="20180505 22:10:07.059"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:07.060" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:07.060" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8c8aa78&gt;</msg>
<status status="PASS" starttime="20180505 22:10:07.059" endtime="20180505 22:10:07.060"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.060" endtime="20180505 22:10:07.060"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:07.061" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:07.061" endtime="20180505 22:10:07.061"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:07.061" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:07.061" endtime="20180505 22:10:07.061"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:07.062" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:10:07.062" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:10:07.062" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:10:07.061" endtime="20180505 22:10:07.062"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.062" endtime="20180505 22:10:07.062"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.060" endtime="20180505 22:10:07.062"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.058" endtime="20180505 22:10:07.062"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.058" endtime="20180505 22:10:07.062"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.063" endtime="20180505 22:10:07.063"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:07.064" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:07.064" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad937d8&gt;</msg>
<status status="PASS" starttime="20180505 22:10:07.063" endtime="20180505 22:10:07.064"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.064" endtime="20180505 22:10:07.064"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:07.065" level="INFO">${value} = 400.0006</msg>
<status status="PASS" starttime="20180505 22:10:07.065" endtime="20180505 22:10:07.065"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:07.066" level="INFO">${ExpectedValue} = 400.0</msg>
<status status="PASS" starttime="20180505 22:10:07.065" endtime="20180505 22:10:07.066"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:07.066" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:10:07.066" level="INFO">Value: 400.0006</msg>
<msg timestamp="20180505 22:10:07.066" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:10:07.066" level="INFO">Expected Value: 400.0</msg>
<status status="PASS" starttime="20180505 22:10:07.066" endtime="20180505 22:10:07.066"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:07.067" level="INFO">${high} = 401.0</msg>
<status status="PASS" starttime="20180505 22:10:07.066" endtime="20180505 22:10:07.067"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:07.067" level="INFO">${low} = 399.0</msg>
<status status="PASS" starttime="20180505 22:10:07.067" endtime="20180505 22:10:07.067"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.067" endtime="20180505 22:10:07.067"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.068" endtime="20180505 22:10:07.068"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.064" endtime="20180505 22:10:07.068"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.063" endtime="20180505 22:10:07.068"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.063" endtime="20180505 22:10:07.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:10:07.069" level="INFO">${Wavelength} = 450.0</msg>
<status status="PASS" starttime="20180505 22:10:07.068" endtime="20180505 22:10:07.069"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:52.455" endtime="20180505 22:10:07.069"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.069" endtime="20180505 22:10:07.070"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:10:07.070" level="INFO">Wavelength: 450.0</msg>
<msg timestamp="20180505 22:10:07.070" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:10:07.070" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:10:07.070" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:10:07.070" endtime="20180505 22:10:07.070"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:07.071" endtime="20180505 22:10:18.578"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.070" endtime="20180505 22:10:18.578"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.580" endtime="20180505 22:10:18.580"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:10:18.580" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:10:18.580" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ff1b20&gt;</msg>
<status status="PASS" starttime="20180505 22:10:18.580" endtime="20180505 22:10:18.580"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:10:18.580" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:10:18.581" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffa810&gt;</msg>
<status status="PASS" starttime="20180505 22:10:18.580" endtime="20180505 22:10:18.581"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.581" endtime="20180505 22:10:18.581"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.581" endtime="20180505 22:10:18.581"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.581" endtime="20180505 22:10:18.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:18.583" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:10:18.582" endtime="20180505 22:10:18.583"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:18.583" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:10:18.583" endtime="20180505 22:10:18.583"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:18.583" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:18.584" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:10:18.584" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:18.584" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:10:18.583" endtime="20180505 22:10:18.584"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:18.584" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:10:18.584" endtime="20180505 22:10:18.584"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:18.585" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:10:18.584" endtime="20180505 22:10:18.585"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.585" endtime="20180505 22:10:18.585"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.585" endtime="20180505 22:10:18.586"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.582" endtime="20180505 22:10:18.586"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.581" endtime="20180505 22:10:18.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:18.587" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:10:18.587" endtime="20180505 22:10:18.587"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:18.588" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:10:18.587" endtime="20180505 22:10:18.588"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:18.588" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:18.588" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:10:18.588" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:18.588" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:10:18.588" endtime="20180505 22:10:18.588"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:18.589" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:10:18.588" endtime="20180505 22:10:18.589"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:18.589" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:10:18.589" endtime="20180505 22:10:18.589"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.589" endtime="20180505 22:10:18.590"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.590" endtime="20180505 22:10:18.590"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.587" endtime="20180505 22:10:18.590"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.586" endtime="20180505 22:10:18.590"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.579" endtime="20180505 22:10:18.590"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.578" endtime="20180505 22:10:18.591"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.591" endtime="20180505 22:10:18.591"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:18.592" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:18.592" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc33b0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:18.591" endtime="20180505 22:10:18.592"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.592" endtime="20180505 22:10:18.592"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:18.593" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:18.593" endtime="20180505 22:10:18.593"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:18.593" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:18.593" endtime="20180505 22:10:18.593"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:18.593" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:10:18.594" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:10:18.594" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:10:18.593" endtime="20180505 22:10:18.594"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.594" endtime="20180505 22:10:18.594"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.592" endtime="20180505 22:10:18.594"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.591" endtime="20180505 22:10:18.594"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.591" endtime="20180505 22:10:18.594"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.595" endtime="20180505 22:10:18.595"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:18.595" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:18.596" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8a180&gt;</msg>
<status status="PASS" starttime="20180505 22:10:18.595" endtime="20180505 22:10:18.596"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.596" endtime="20180505 22:10:18.596"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:18.597" level="INFO">${value} = 449.9993</msg>
<status status="PASS" starttime="20180505 22:10:18.596" endtime="20180505 22:10:18.597"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:18.597" level="INFO">${ExpectedValue} = 450.0</msg>
<status status="PASS" starttime="20180505 22:10:18.597" endtime="20180505 22:10:18.597"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:18.597" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:10:18.598" level="INFO">Value: 449.9993</msg>
<msg timestamp="20180505 22:10:18.598" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:10:18.598" level="INFO">Expected Value: 450.0</msg>
<status status="PASS" starttime="20180505 22:10:18.597" endtime="20180505 22:10:18.598"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:18.598" level="INFO">${high} = 451.0</msg>
<status status="PASS" starttime="20180505 22:10:18.598" endtime="20180505 22:10:18.598"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:18.599" level="INFO">${low} = 449.0</msg>
<status status="PASS" starttime="20180505 22:10:18.598" endtime="20180505 22:10:18.599"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.599" endtime="20180505 22:10:18.599"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.599" endtime="20180505 22:10:18.600"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.596" endtime="20180505 22:10:18.600"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.595" endtime="20180505 22:10:18.600"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.594" endtime="20180505 22:10:18.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:10:18.600" level="INFO">${Wavelength} = 500.0</msg>
<status status="PASS" starttime="20180505 22:10:18.600" endtime="20180505 22:10:18.600"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:07.069" endtime="20180505 22:10:18.600"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.600" endtime="20180505 22:10:18.601"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:10:18.601" level="INFO">Wavelength: 500.0</msg>
<msg timestamp="20180505 22:10:18.601" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:10:18.601" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:10:18.601" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:10:18.601" endtime="20180505 22:10:18.601"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:18.602" endtime="20180505 22:10:30.164"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.601" endtime="20180505 22:10:30.164"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.165" endtime="20180505 22:10:30.165"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:10:30.165" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:10:30.165" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff5e0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:30.165" endtime="20180505 22:10:30.165"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:10:30.166" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:10:30.166" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad93ab0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:30.165" endtime="20180505 22:10:30.166"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.166" endtime="20180505 22:10:30.166"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.166" endtime="20180505 22:10:30.166"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.166" endtime="20180505 22:10:30.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:30.168" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:10:30.168" endtime="20180505 22:10:30.168"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:30.168" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:10:30.168" endtime="20180505 22:10:30.169"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:30.169" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:30.169" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:10:30.169" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:30.169" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:10:30.169" endtime="20180505 22:10:30.169"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:30.169" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:10:30.169" endtime="20180505 22:10:30.169"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:30.170" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:10:30.170" endtime="20180505 22:10:30.170"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.170" endtime="20180505 22:10:30.170"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.170" endtime="20180505 22:10:30.171"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.167" endtime="20180505 22:10:30.171"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.167" endtime="20180505 22:10:30.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:30.172" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:10:30.172" endtime="20180505 22:10:30.172"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:30.173" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:10:30.173" endtime="20180505 22:10:30.173"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:30.173" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:30.173" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:10:30.173" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:30.173" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:10:30.173" endtime="20180505 22:10:30.173"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:30.174" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:10:30.174" endtime="20180505 22:10:30.174"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:30.174" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:10:30.174" endtime="20180505 22:10:30.174"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.174" endtime="20180505 22:10:30.175"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.175" endtime="20180505 22:10:30.175"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.172" endtime="20180505 22:10:30.175"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.171" endtime="20180505 22:10:30.175"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.164" endtime="20180505 22:10:30.175"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.164" endtime="20180505 22:10:30.175"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.176" endtime="20180505 22:10:30.176"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:30.176" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:30.176" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc3570&gt;</msg>
<status status="PASS" starttime="20180505 22:10:30.176" endtime="20180505 22:10:30.177"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.177" endtime="20180505 22:10:30.177"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:30.178" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:30.177" endtime="20180505 22:10:30.178"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:30.178" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:30.178" endtime="20180505 22:10:30.178"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:30.178" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:10:30.178" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:10:30.178" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:10:30.178" endtime="20180505 22:10:30.179"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.179" endtime="20180505 22:10:30.179"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.177" endtime="20180505 22:10:30.179"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.176" endtime="20180505 22:10:30.179"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.176" endtime="20180505 22:10:30.179"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.180" endtime="20180505 22:10:30.180"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:30.180" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:30.180" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86eca6fa08&gt;</msg>
<status status="PASS" starttime="20180505 22:10:30.180" endtime="20180505 22:10:30.180"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.180" endtime="20180505 22:10:30.181"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:30.182" level="INFO">${value} = 500.00010000000003</msg>
<status status="PASS" starttime="20180505 22:10:30.181" endtime="20180505 22:10:30.182"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:30.182" level="INFO">${ExpectedValue} = 500.0</msg>
<status status="PASS" starttime="20180505 22:10:30.182" endtime="20180505 22:10:30.182"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:30.182" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:10:30.183" level="INFO">Value: 500.00010000000003</msg>
<msg timestamp="20180505 22:10:30.183" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:10:30.183" level="INFO">Expected Value: 500.0</msg>
<status status="PASS" starttime="20180505 22:10:30.182" endtime="20180505 22:10:30.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:30.183" level="INFO">${high} = 501.0</msg>
<status status="PASS" starttime="20180505 22:10:30.183" endtime="20180505 22:10:30.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:30.184" level="INFO">${low} = 499.0</msg>
<status status="PASS" starttime="20180505 22:10:30.183" endtime="20180505 22:10:30.184"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.184" endtime="20180505 22:10:30.184"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.184" endtime="20180505 22:10:30.184"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.181" endtime="20180505 22:10:30.185"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.179" endtime="20180505 22:10:30.185"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.179" endtime="20180505 22:10:30.185"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:10:30.185" level="INFO">${Wavelength} = 550.0</msg>
<status status="PASS" starttime="20180505 22:10:30.185" endtime="20180505 22:10:30.185"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:18.600" endtime="20180505 22:10:30.185"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.185" endtime="20180505 22:10:30.186"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:10:30.186" level="INFO">Wavelength: 550.0</msg>
<msg timestamp="20180505 22:10:30.186" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:10:30.186" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:10:30.186" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:10:30.186" endtime="20180505 22:10:30.186"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:30.187" endtime="20180505 22:10:41.663"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.186" endtime="20180505 22:10:41.663"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.664" endtime="20180505 22:10:41.664"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:10:41.664" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:10:41.664" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005f10&gt;</msg>
<status status="PASS" starttime="20180505 22:10:41.664" endtime="20180505 22:10:41.664"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:10:41.664" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:10:41.665" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005570&gt;</msg>
<status status="PASS" starttime="20180505 22:10:41.664" endtime="20180505 22:10:41.665"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.665" endtime="20180505 22:10:41.665"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.665" endtime="20180505 22:10:41.665"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.665" endtime="20180505 22:10:41.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:41.667" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:10:41.666" endtime="20180505 22:10:41.667"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:41.667" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:10:41.667" endtime="20180505 22:10:41.667"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:41.668" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:41.668" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:10:41.668" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:41.668" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:10:41.667" endtime="20180505 22:10:41.668"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:41.668" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:10:41.668" endtime="20180505 22:10:41.668"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:41.669" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:10:41.668" endtime="20180505 22:10:41.669"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.669" endtime="20180505 22:10:41.669"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.670" endtime="20180505 22:10:41.670"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.666" endtime="20180505 22:10:41.670"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.666" endtime="20180505 22:10:41.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:41.672" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:10:41.671" endtime="20180505 22:10:41.672"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:41.672" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:10:41.672" endtime="20180505 22:10:41.672"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:41.672" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:41.672" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:10:41.673" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:41.673" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:10:41.672" endtime="20180505 22:10:41.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:41.673" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:10:41.673" endtime="20180505 22:10:41.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:41.674" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:10:41.673" endtime="20180505 22:10:41.674"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.674" endtime="20180505 22:10:41.674"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.674" endtime="20180505 22:10:41.674"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.671" endtime="20180505 22:10:41.674"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.670" endtime="20180505 22:10:41.674"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.663" endtime="20180505 22:10:41.675"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.663" endtime="20180505 22:10:41.675"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.675" endtime="20180505 22:10:41.675"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:41.676" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:41.676" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ffde30&gt;</msg>
<status status="PASS" starttime="20180505 22:10:41.675" endtime="20180505 22:10:41.676"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.676" endtime="20180505 22:10:41.676"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:41.677" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:41.677" endtime="20180505 22:10:41.677"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:41.677" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:41.677" endtime="20180505 22:10:41.677"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:41.678" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:10:41.678" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:10:41.678" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:10:41.677" endtime="20180505 22:10:41.678"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.678" endtime="20180505 22:10:41.678"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.676" endtime="20180505 22:10:41.678"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.675" endtime="20180505 22:10:41.678"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.675" endtime="20180505 22:10:41.678"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.679" endtime="20180505 22:10:41.679"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:41.679" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:41.679" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86eca6f880&gt;</msg>
<status status="PASS" starttime="20180505 22:10:41.679" endtime="20180505 22:10:41.680"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.680" endtime="20180505 22:10:41.680"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:41.681" level="INFO">${value} = 550.0</msg>
<status status="PASS" starttime="20180505 22:10:41.680" endtime="20180505 22:10:41.681"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:41.681" level="INFO">${ExpectedValue} = 550.0</msg>
<status status="PASS" starttime="20180505 22:10:41.681" endtime="20180505 22:10:41.681"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:41.682" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:10:41.682" level="INFO">Value: 550.0</msg>
<msg timestamp="20180505 22:10:41.682" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:10:41.682" level="INFO">Expected Value: 550.0</msg>
<status status="PASS" starttime="20180505 22:10:41.681" endtime="20180505 22:10:41.682"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:41.682" level="INFO">${high} = 551.0</msg>
<status status="PASS" starttime="20180505 22:10:41.682" endtime="20180505 22:10:41.682"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:41.691" level="INFO">${low} = 549.0</msg>
<status status="PASS" starttime="20180505 22:10:41.682" endtime="20180505 22:10:41.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.691" endtime="20180505 22:10:41.692"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.692" endtime="20180505 22:10:41.692"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.680" endtime="20180505 22:10:41.692"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.679" endtime="20180505 22:10:41.692"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.678" endtime="20180505 22:10:41.692"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:10:41.693" level="INFO">${Wavelength} = 600.0</msg>
<status status="PASS" starttime="20180505 22:10:41.692" endtime="20180505 22:10:41.693"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:30.185" endtime="20180505 22:10:41.693"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.693" endtime="20180505 22:10:41.693"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:10:41.693" level="INFO">Wavelength: 600.0</msg>
<msg timestamp="20180505 22:10:41.693" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:10:41.694" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:10:41.694" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:10:41.693" endtime="20180505 22:10:41.694"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:41.694" endtime="20180505 22:10:53.258"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.694" endtime="20180505 22:10:53.258"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.259" endtime="20180505 22:10:53.259"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:10:53.260" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:10:53.260" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cffae8&gt;</msg>
<status status="PASS" starttime="20180505 22:10:53.260" endtime="20180505 22:10:53.260"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:10:53.260" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:10:53.260" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffa8f0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:53.260" endtime="20180505 22:10:53.260"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.260" endtime="20180505 22:10:53.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.261" endtime="20180505 22:10:53.261"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.261" endtime="20180505 22:10:53.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:53.263" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:10:53.262" endtime="20180505 22:10:53.263"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:53.263" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:10:53.263" endtime="20180505 22:10:53.263"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:53.263" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:53.263" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:10:53.264" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:53.264" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:10:53.263" endtime="20180505 22:10:53.264"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:53.264" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:10:53.264" endtime="20180505 22:10:53.264"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:53.264" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:10:53.264" endtime="20180505 22:10:53.264"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.265" endtime="20180505 22:10:53.265"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.265" endtime="20180505 22:10:53.265"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.262" endtime="20180505 22:10:53.265"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.261" endtime="20180505 22:10:53.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:53.267" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:10:53.266" endtime="20180505 22:10:53.267"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:53.267" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:10:53.267" endtime="20180505 22:10:53.267"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:53.268" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:10:53.268" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:10:53.268" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:10:53.268" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:10:53.267" endtime="20180505 22:10:53.268"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:53.269" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:10:53.268" endtime="20180505 22:10:53.269"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:53.269" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:10:53.269" endtime="20180505 22:10:53.269"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.269" endtime="20180505 22:10:53.269"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.270" endtime="20180505 22:10:53.270"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.266" endtime="20180505 22:10:53.270"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.265" endtime="20180505 22:10:53.270"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.259" endtime="20180505 22:10:53.270"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.258" endtime="20180505 22:10:53.270"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.271" endtime="20180505 22:10:53.271"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:53.271" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:53.271" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ffab90&gt;</msg>
<status status="PASS" starttime="20180505 22:10:53.271" endtime="20180505 22:10:53.272"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.272" endtime="20180505 22:10:53.272"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:53.273" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:53.272" endtime="20180505 22:10:53.273"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:53.273" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:10:53.273" endtime="20180505 22:10:53.273"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:53.274" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:10:53.274" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:10:53.274" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:10:53.273" endtime="20180505 22:10:53.274"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.274" endtime="20180505 22:10:53.274"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.272" endtime="20180505 22:10:53.274"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.271" endtime="20180505 22:10:53.274"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.270" endtime="20180505 22:10:53.274"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.275" endtime="20180505 22:10:53.275"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:10:53.275" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:10:53.276" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86eca742d0&gt;</msg>
<status status="PASS" starttime="20180505 22:10:53.275" endtime="20180505 22:10:53.276"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.276" endtime="20180505 22:10:53.276"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:10:53.277" level="INFO">${value} = 599.9993000000001</msg>
<status status="PASS" starttime="20180505 22:10:53.276" endtime="20180505 22:10:53.277"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:10:53.277" level="INFO">${ExpectedValue} = 600.0</msg>
<status status="PASS" starttime="20180505 22:10:53.277" endtime="20180505 22:10:53.277"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:10:53.277" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:10:53.278" level="INFO">Value: 599.9993000000001</msg>
<msg timestamp="20180505 22:10:53.278" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:10:53.278" level="INFO">Expected Value: 600.0</msg>
<status status="PASS" starttime="20180505 22:10:53.277" endtime="20180505 22:10:53.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:10:53.278" level="INFO">${high} = 601.0</msg>
<status status="PASS" starttime="20180505 22:10:53.278" endtime="20180505 22:10:53.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:10:53.279" level="INFO">${low} = 599.0</msg>
<status status="PASS" starttime="20180505 22:10:53.278" endtime="20180505 22:10:53.279"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.279" endtime="20180505 22:10:53.279"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.280" endtime="20180505 22:10:53.280"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.276" endtime="20180505 22:10:53.280"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.275" endtime="20180505 22:10:53.280"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.274" endtime="20180505 22:10:53.280"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:10:53.280" level="INFO">${Wavelength} = 650.0</msg>
<status status="PASS" starttime="20180505 22:10:53.280" endtime="20180505 22:10:53.280"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:41.693" endtime="20180505 22:10:53.280"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.281" endtime="20180505 22:10:53.281"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:10:53.281" level="INFO">Wavelength: 650.0</msg>
<msg timestamp="20180505 22:10:53.281" level="INFO">grating:1</msg>
<msg timestamp="20180505 22:10:53.281" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:10:53.281" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:10:53.281" endtime="20180505 22:10:53.282"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:10:53.282" endtime="20180505 22:11:04.707"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.282" endtime="20180505 22:11:04.707"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.708" endtime="20180505 22:11:04.708"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:11:04.708" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:11:04.708" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005618&gt;</msg>
<status status="PASS" starttime="20180505 22:11:04.708" endtime="20180505 22:11:04.708"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:11:04.709" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:11:04.709" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005fb8&gt;</msg>
<status status="PASS" starttime="20180505 22:11:04.709" endtime="20180505 22:11:04.709"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.709" endtime="20180505 22:11:04.709"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.709" endtime="20180505 22:11:04.709"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.709" endtime="20180505 22:11:04.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:04.711" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:11:04.711" endtime="20180505 22:11:04.711"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:04.711" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:11:04.711" endtime="20180505 22:11:04.711"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:04.712" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:04.712" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:11:04.712" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:04.712" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:11:04.712" endtime="20180505 22:11:04.712"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:04.712" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:11:04.712" endtime="20180505 22:11:04.712"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:04.713" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:11:04.713" endtime="20180505 22:11:04.713"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.713" endtime="20180505 22:11:04.713"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.713" endtime="20180505 22:11:04.714"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.710" endtime="20180505 22:11:04.714"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.710" endtime="20180505 22:11:04.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:04.715" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:11:04.715" endtime="20180505 22:11:04.715"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:04.716" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:11:04.715" endtime="20180505 22:11:04.716"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:04.716" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:04.716" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:11:04.716" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:04.716" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:11:04.716" endtime="20180505 22:11:04.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:04.717" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:11:04.716" endtime="20180505 22:11:04.717"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:04.717" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:11:04.717" endtime="20180505 22:11:04.717"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.717" endtime="20180505 22:11:04.717"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.718" endtime="20180505 22:11:04.718"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.714" endtime="20180505 22:11:04.718"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.714" endtime="20180505 22:11:04.718"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.707" endtime="20180505 22:11:04.718"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.707" endtime="20180505 22:11:04.718"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.719" endtime="20180505 22:11:04.719"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:04.720" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:04.720" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cff308&gt;</msg>
<status status="PASS" starttime="20180505 22:11:04.719" endtime="20180505 22:11:04.720"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.720" endtime="20180505 22:11:04.720"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:04.721" level="INFO">${value} = 1.0</msg>
<status status="PASS" starttime="20180505 22:11:04.721" endtime="20180505 22:11:04.721"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:04.722" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:11:04.721" endtime="20180505 22:11:04.722"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:04.722" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:11:04.722" level="INFO">Value: 1.0</msg>
<msg timestamp="20180505 22:11:04.722" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:11:04.722" endtime="20180505 22:11:04.722"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.722" endtime="20180505 22:11:04.722"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.720" endtime="20180505 22:11:04.723"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.719" endtime="20180505 22:11:04.723"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.718" endtime="20180505 22:11:04.723"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.723" endtime="20180505 22:11:04.724"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:04.724" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:04.724" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc3c38&gt;</msg>
<status status="PASS" starttime="20180505 22:11:04.724" endtime="20180505 22:11:04.724"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.724" endtime="20180505 22:11:04.724"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:04.725" level="INFO">${value} = 649.9999</msg>
<status status="PASS" starttime="20180505 22:11:04.725" endtime="20180505 22:11:04.725"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:04.726" level="INFO">${ExpectedValue} = 650.0</msg>
<status status="PASS" starttime="20180505 22:11:04.725" endtime="20180505 22:11:04.726"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:04.726" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:11:04.726" level="INFO">Value: 649.9999</msg>
<msg timestamp="20180505 22:11:04.726" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:11:04.726" level="INFO">Expected Value: 650.0</msg>
<status status="PASS" starttime="20180505 22:11:04.726" endtime="20180505 22:11:04.726"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:04.726" level="INFO">${high} = 651.0</msg>
<status status="PASS" starttime="20180505 22:11:04.726" endtime="20180505 22:11:04.727"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:04.727" level="INFO">${low} = 649.0</msg>
<status status="PASS" starttime="20180505 22:11:04.727" endtime="20180505 22:11:04.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.727" endtime="20180505 22:11:04.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:04.727" endtime="20180505 22:11:04.728"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.724" endtime="20180505 22:11:04.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.723" endtime="20180505 22:11:04.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.723" endtime="20180505 22:11:04.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:11:04.729" level="INFO">${Wavelength} = 700.0</msg>
<status status="PASS" starttime="20180505 22:11:04.729" endtime="20180505 22:11:04.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:10:53.281" endtime="20180505 22:11:04.729"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:04.729" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 22:11:04.729" endtime="20180505 22:11:04.730"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:04.729" endtime="20180505 22:11:04.730"></status>
</kw>
<status status="PASS" starttime="20180505 22:09:52.437" endtime="20180505 22:11:04.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:11:08.740" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:11:04.740" endtime="20180505 22:11:08.741"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:09:52.433" endtime="20180505 22:11:08.741" critical="yes"></status>
</test>
<test id="s1-t15" name="From Enable Setup All Parameters in Red Grating and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update All parameters and verify all changed to right value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:08.742" endtime="20180505 22:11:08.742"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${1.3}</arg>
</arguments>
<assign>
<var>${FrontExitWidth}</var>
</assign>
<msg timestamp="20180505 22:11:08.742" level="INFO">${FrontExitWidth} = 1.3</msg>
<status status="PASS" starttime="20180505 22:11:08.742" endtime="20180505 22:11:08.742"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${1.1}</arg>
</arguments>
<assign>
<var>${FrontEntranceWidth}</var>
</assign>
<msg timestamp="20180505 22:11:08.743" level="INFO">${FrontEntranceWidth} = 1.1</msg>
<status status="PASS" starttime="20180505 22:11:08.742" endtime="20180505 22:11:08.743"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Red}</arg>
</arguments>
<assign>
<var>${grating}</var>
</assign>
<msg timestamp="20180505 22:11:08.743" level="INFO">${grating} = 2</msg>
<status status="PASS" starttime="20180505 22:11:08.743" endtime="20180505 22:11:08.743"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaWavelength}</arg>
</arguments>
<assign>
<var>${DW}</var>
</assign>
<msg timestamp="20180505 22:11:08.744" level="INFO">${DW} = 50.0</msg>
<status status="PASS" starttime="20180505 22:11:08.743" endtime="20180505 22:11:08.744"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR1}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:11:08.744" level="INFO">${Wavelength} = 650.0</msg>
<status status="PASS" starttime="20180505 22:11:08.744" endtime="20180505 22:11:08.744"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxWavelengthGR2}</arg>
</arguments>
<assign>
<var>${MaxValue}</var>
</assign>
<msg timestamp="20180505 22:11:08.745" level="INFO">${MaxValue} = 1200.0</msg>
<status status="PASS" starttime="20180505 22:11:08.744" endtime="20180505 22:11:08.745"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:08.762" endtime="20180505 22:11:08.763"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:11:08.763" level="INFO">Wavelength: 650.0</msg>
<msg timestamp="20180505 22:11:08.763" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:11:08.764" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:11:08.764" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:11:08.763" endtime="20180505 22:11:08.764"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:08.764" endtime="20180505 22:11:20.195"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:08.764" endtime="20180505 22:11:20.195"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:20.205" endtime="20180505 22:11:20.205"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:11:45.226" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:11:45.226" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc8570&gt;</msg>
<status status="PASS" starttime="20180505 22:11:20.205" endtime="20180505 22:11:45.226"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:11:45.227" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:11:45.227" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc8228&gt;</msg>
<status status="PASS" starttime="20180505 22:11:45.226" endtime="20180505 22:11:45.227"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.227" endtime="20180505 22:11:45.227"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.227" endtime="20180505 22:11:45.227"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.228" endtime="20180505 22:11:45.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:45.229" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:11:45.229" endtime="20180505 22:11:45.229"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:45.230" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:11:45.229" endtime="20180505 22:11:45.230"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:45.230" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:45.230" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:11:45.230" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:45.230" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:11:45.230" endtime="20180505 22:11:45.230"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:45.231" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:11:45.230" endtime="20180505 22:11:45.231"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:45.231" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:11:45.231" endtime="20180505 22:11:45.231"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.231" endtime="20180505 22:11:45.231"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.232" endtime="20180505 22:11:45.232"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.228" endtime="20180505 22:11:45.232"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.228" endtime="20180505 22:11:45.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:45.233" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:11:45.233" endtime="20180505 22:11:45.233"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:45.234" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:11:45.233" endtime="20180505 22:11:45.234"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:45.234" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:45.234" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:11:45.234" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:45.234" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:11:45.234" endtime="20180505 22:11:45.234"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:45.235" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:11:45.234" endtime="20180505 22:11:45.235"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:45.235" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:11:45.235" endtime="20180505 22:11:45.235"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.235" endtime="20180505 22:11:45.236"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.236" endtime="20180505 22:11:45.236"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.233" endtime="20180505 22:11:45.236"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.232" endtime="20180505 22:11:45.236"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:20.196" endtime="20180505 22:11:45.236"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:20.196" endtime="20180505 22:11:45.236"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.237" endtime="20180505 22:11:45.237"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:45.238" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:45.238" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8c8a2d0&gt;</msg>
<status status="PASS" starttime="20180505 22:11:45.237" endtime="20180505 22:11:45.238"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.238" endtime="20180505 22:11:45.238"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:45.239" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:11:45.239" endtime="20180505 22:11:45.239"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:45.239" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:11:45.239" endtime="20180505 22:11:45.239"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:45.240" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:11:45.240" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:11:45.240" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:11:45.239" endtime="20180505 22:11:45.240"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.240" endtime="20180505 22:11:45.240"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.238" endtime="20180505 22:11:45.240"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.237" endtime="20180505 22:11:45.240"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.236" endtime="20180505 22:11:45.240"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.241" endtime="20180505 22:11:45.241"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:45.241" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:45.241" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc3030&gt;</msg>
<status status="PASS" starttime="20180505 22:11:45.241" endtime="20180505 22:11:45.242"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.242" endtime="20180505 22:11:45.242"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:45.243" level="INFO">${value} = 650.0002000000001</msg>
<status status="PASS" starttime="20180505 22:11:45.242" endtime="20180505 22:11:45.243"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:45.243" level="INFO">${ExpectedValue} = 650.0</msg>
<status status="PASS" starttime="20180505 22:11:45.243" endtime="20180505 22:11:45.243"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:45.243" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:11:45.243" level="INFO">Value: 650.0002000000001</msg>
<msg timestamp="20180505 22:11:45.244" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:11:45.244" level="INFO">Expected Value: 650.0</msg>
<status status="PASS" starttime="20180505 22:11:45.243" endtime="20180505 22:11:45.244"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:45.244" level="INFO">${high} = 651.0</msg>
<status status="PASS" starttime="20180505 22:11:45.244" endtime="20180505 22:11:45.244"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:45.244" level="INFO">${low} = 649.0</msg>
<status status="PASS" starttime="20180505 22:11:45.244" endtime="20180505 22:11:45.244"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.245" endtime="20180505 22:11:45.245"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.245" endtime="20180505 22:11:45.245"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.242" endtime="20180505 22:11:45.245"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.241" endtime="20180505 22:11:45.245"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.241" endtime="20180505 22:11:45.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:11:45.246" level="INFO">${Wavelength} = 700.0</msg>
<status status="PASS" starttime="20180505 22:11:45.245" endtime="20180505 22:11:45.246"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:08.762" endtime="20180505 22:11:45.246"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.246" endtime="20180505 22:11:45.246"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:11:45.247" level="INFO">Wavelength: 700.0</msg>
<msg timestamp="20180505 22:11:45.247" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:11:45.247" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:11:45.247" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:11:45.247" endtime="20180505 22:11:45.247"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:45.247" endtime="20180505 22:11:56.602"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.247" endtime="20180505 22:11:56.602"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.603" endtime="20180505 22:11:56.603"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:11:56.603" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:11:56.603" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8af10&gt;</msg>
<status status="PASS" starttime="20180505 22:11:56.603" endtime="20180505 22:11:56.603"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:11:56.604" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:11:56.604" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8ace0&gt;</msg>
<status status="PASS" starttime="20180505 22:11:56.604" endtime="20180505 22:11:56.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.604" endtime="20180505 22:11:56.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.604" endtime="20180505 22:11:56.604"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.605" endtime="20180505 22:11:56.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:56.607" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:11:56.607" endtime="20180505 22:11:56.607"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:56.607" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:11:56.607" endtime="20180505 22:11:56.607"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:56.608" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:56.608" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:11:56.608" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:56.608" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:11:56.607" endtime="20180505 22:11:56.608"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:56.609" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:11:56.608" endtime="20180505 22:11:56.609"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:56.609" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:11:56.609" endtime="20180505 22:11:56.609"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.609" endtime="20180505 22:11:56.609"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.609" endtime="20180505 22:11:56.610"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.606" endtime="20180505 22:11:56.610"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.605" endtime="20180505 22:11:56.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:56.612" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:11:56.611" endtime="20180505 22:11:56.612"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:56.612" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:11:56.612" endtime="20180505 22:11:56.612"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:56.613" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:11:56.613" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:11:56.613" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:11:56.613" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:11:56.612" endtime="20180505 22:11:56.613"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:56.613" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:11:56.613" endtime="20180505 22:11:56.613"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:56.614" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:11:56.614" endtime="20180505 22:11:56.614"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.614" endtime="20180505 22:11:56.614"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.614" endtime="20180505 22:11:56.615"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.611" endtime="20180505 22:11:56.615"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.610" endtime="20180505 22:11:56.615"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.602" endtime="20180505 22:11:56.615"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.602" endtime="20180505 22:11:56.615"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.616" endtime="20180505 22:11:56.616"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:56.616" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:56.616" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86eca6f7a0&gt;</msg>
<status status="PASS" starttime="20180505 22:11:56.616" endtime="20180505 22:11:56.616"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.616" endtime="20180505 22:11:56.616"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:56.618" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:11:56.617" endtime="20180505 22:11:56.618"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:56.618" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:11:56.618" endtime="20180505 22:11:56.618"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:56.618" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:11:56.618" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:11:56.619" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:11:56.618" endtime="20180505 22:11:56.619"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.619" endtime="20180505 22:11:56.619"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.617" endtime="20180505 22:11:56.619"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.615" endtime="20180505 22:11:56.619"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.615" endtime="20180505 22:11:56.619"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.620" endtime="20180505 22:11:56.620"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:11:56.620" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:11:56.620" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc3148&gt;</msg>
<status status="PASS" starttime="20180505 22:11:56.620" endtime="20180505 22:11:56.620"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.621" endtime="20180505 22:11:56.621"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:11:56.622" level="INFO">${value} = 699.9998</msg>
<status status="PASS" starttime="20180505 22:11:56.622" endtime="20180505 22:11:56.622"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:11:56.622" level="INFO">${ExpectedValue} = 700.0</msg>
<status status="PASS" starttime="20180505 22:11:56.622" endtime="20180505 22:11:56.623"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:11:56.623" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:11:56.623" level="INFO">Value: 699.9998</msg>
<msg timestamp="20180505 22:11:56.623" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:11:56.623" level="INFO">Expected Value: 700.0</msg>
<status status="PASS" starttime="20180505 22:11:56.623" endtime="20180505 22:11:56.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:11:56.624" level="INFO">${high} = 701.0</msg>
<status status="PASS" starttime="20180505 22:11:56.623" endtime="20180505 22:11:56.624"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:11:56.624" level="INFO">${low} = 699.0</msg>
<status status="PASS" starttime="20180505 22:11:56.624" endtime="20180505 22:11:56.624"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.624" endtime="20180505 22:11:56.624"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.625" endtime="20180505 22:11:56.625"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.621" endtime="20180505 22:11:56.625"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.620" endtime="20180505 22:11:56.625"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.619" endtime="20180505 22:11:56.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:11:56.625" level="INFO">${Wavelength} = 750.0</msg>
<status status="PASS" starttime="20180505 22:11:56.625" endtime="20180505 22:11:56.626"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:45.246" endtime="20180505 22:11:56.626"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.626" endtime="20180505 22:11:56.626"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:11:56.627" level="INFO">Wavelength: 750.0</msg>
<msg timestamp="20180505 22:11:56.627" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:11:56.627" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:11:56.627" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:11:56.626" endtime="20180505 22:11:56.627"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:11:56.627" endtime="20180505 22:12:07.971"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.627" endtime="20180505 22:12:07.971"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.972" endtime="20180505 22:12:07.972"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:12:07.973" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:12:07.973" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce688&gt;</msg>
<status status="PASS" starttime="20180505 22:12:07.973" endtime="20180505 22:12:07.973"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:12:07.973" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:12:07.973" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce420&gt;</msg>
<status status="PASS" starttime="20180505 22:12:07.973" endtime="20180505 22:12:07.973"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.973" endtime="20180505 22:12:07.974"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.974" endtime="20180505 22:12:07.974"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.974" endtime="20180505 22:12:07.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:07.976" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:12:07.975" endtime="20180505 22:12:07.976"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:07.976" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:12:07.976" endtime="20180505 22:12:07.976"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:07.977" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:07.977" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:12:07.977" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:07.977" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:12:07.976" endtime="20180505 22:12:07.977"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:07.977" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:12:07.977" endtime="20180505 22:12:07.977"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:07.978" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:12:07.977" endtime="20180505 22:12:07.978"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.978" endtime="20180505 22:12:07.978"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.979" endtime="20180505 22:12:07.979"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.975" endtime="20180505 22:12:07.979"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.974" endtime="20180505 22:12:07.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:07.980" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:12:07.980" endtime="20180505 22:12:07.980"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:07.981" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:12:07.980" endtime="20180505 22:12:07.981"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:07.981" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:07.981" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:12:07.981" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:07.981" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:12:07.981" endtime="20180505 22:12:07.981"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:07.982" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:12:07.982" endtime="20180505 22:12:07.982"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:07.982" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:12:07.982" endtime="20180505 22:12:07.982"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.982" endtime="20180505 22:12:07.983"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.983" endtime="20180505 22:12:07.983"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.980" endtime="20180505 22:12:07.983"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.979" endtime="20180505 22:12:07.983"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.972" endtime="20180505 22:12:07.983"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.971" endtime="20180505 22:12:07.984"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.984" endtime="20180505 22:12:07.984"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:07.985" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:07.985" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ffd4c8&gt;</msg>
<status status="PASS" starttime="20180505 22:12:07.984" endtime="20180505 22:12:07.985"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.985" endtime="20180505 22:12:07.985"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:07.986" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:07.986" endtime="20180505 22:12:07.986"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:07.986" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:07.986" endtime="20180505 22:12:07.986"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:07.986" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:12:07.987" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:12:07.987" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:12:07.986" endtime="20180505 22:12:07.987"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.987" endtime="20180505 22:12:07.987"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.985" endtime="20180505 22:12:07.987"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.984" endtime="20180505 22:12:07.987"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.984" endtime="20180505 22:12:07.987"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.988" endtime="20180505 22:12:07.988"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:07.988" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:07.989" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad930a0&gt;</msg>
<status status="PASS" starttime="20180505 22:12:07.988" endtime="20180505 22:12:07.989"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.989" endtime="20180505 22:12:07.989"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:07.990" level="INFO">${value} = 750.0006000000001</msg>
<status status="PASS" starttime="20180505 22:12:07.989" endtime="20180505 22:12:07.990"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:07.990" level="INFO">${ExpectedValue} = 750.0</msg>
<status status="PASS" starttime="20180505 22:12:07.990" endtime="20180505 22:12:07.990"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:07.990" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:12:07.990" level="INFO">Value: 750.0006000000001</msg>
<msg timestamp="20180505 22:12:07.990" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:12:07.991" level="INFO">Expected Value: 750.0</msg>
<status status="PASS" starttime="20180505 22:12:07.990" endtime="20180505 22:12:07.991"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:07.991" level="INFO">${high} = 751.0</msg>
<status status="PASS" starttime="20180505 22:12:07.991" endtime="20180505 22:12:07.991"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:07.992" level="INFO">${low} = 749.0</msg>
<status status="PASS" starttime="20180505 22:12:07.991" endtime="20180505 22:12:07.992"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.992" endtime="20180505 22:12:07.992"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.993" endtime="20180505 22:12:07.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.989" endtime="20180505 22:12:07.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.988" endtime="20180505 22:12:07.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.987" endtime="20180505 22:12:07.993"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:12:07.993" level="INFO">${Wavelength} = 800.0</msg>
<status status="PASS" starttime="20180505 22:12:07.993" endtime="20180505 22:12:07.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:56.626" endtime="20180505 22:12:07.994"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.994" endtime="20180505 22:12:07.994"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:12:07.994" level="INFO">Wavelength: 800.0</msg>
<msg timestamp="20180505 22:12:07.994" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:12:07.994" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:12:07.995" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:12:07.994" endtime="20180505 22:12:07.995"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:07.995" endtime="20180505 22:12:19.321"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.995" endtime="20180505 22:12:19.321"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.322" endtime="20180505 22:12:19.322"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:12:19.322" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:12:19.322" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3c00&gt;</msg>
<status status="PASS" starttime="20180505 22:12:19.322" endtime="20180505 22:12:19.322"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:12:19.323" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:12:19.323" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff768&gt;</msg>
<status status="PASS" starttime="20180505 22:12:19.322" endtime="20180505 22:12:19.323"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.323" endtime="20180505 22:12:19.323"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.323" endtime="20180505 22:12:19.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.323" endtime="20180505 22:12:19.324"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:19.325" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:12:19.325" endtime="20180505 22:12:19.325"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:19.326" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:12:19.325" endtime="20180505 22:12:19.326"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:19.326" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:19.326" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:12:19.326" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:19.326" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:12:19.326" endtime="20180505 22:12:19.326"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:19.327" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:12:19.326" endtime="20180505 22:12:19.327"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:19.327" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:12:19.327" endtime="20180505 22:12:19.327"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.328" endtime="20180505 22:12:19.328"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.328" endtime="20180505 22:12:19.328"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.324" endtime="20180505 22:12:19.328"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.324" endtime="20180505 22:12:19.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:19.330" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:12:19.330" endtime="20180505 22:12:19.330"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:19.330" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:12:19.330" endtime="20180505 22:12:19.330"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:19.331" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:19.331" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:12:19.331" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:19.331" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:12:19.330" endtime="20180505 22:12:19.331"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:19.331" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:12:19.331" endtime="20180505 22:12:19.331"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:19.332" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:12:19.332" endtime="20180505 22:12:19.332"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.332" endtime="20180505 22:12:19.332"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.332" endtime="20180505 22:12:19.333"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.329" endtime="20180505 22:12:19.333"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.329" endtime="20180505 22:12:19.333"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.321" endtime="20180505 22:12:19.333"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.321" endtime="20180505 22:12:19.333"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.334" endtime="20180505 22:12:19.334"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:19.334" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:19.334" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc31f0&gt;</msg>
<status status="PASS" starttime="20180505 22:12:19.334" endtime="20180505 22:12:19.334"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.334" endtime="20180505 22:12:19.334"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:19.335" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:19.335" endtime="20180505 22:12:19.335"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:19.336" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:19.335" endtime="20180505 22:12:19.336"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:19.336" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:12:19.336" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:12:19.336" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:12:19.336" endtime="20180505 22:12:19.336"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.336" endtime="20180505 22:12:19.337"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.335" endtime="20180505 22:12:19.337"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.333" endtime="20180505 22:12:19.337"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.333" endtime="20180505 22:12:19.337"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.338" endtime="20180505 22:12:19.338"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:19.338" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:19.338" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ea005a08&gt;</msg>
<status status="PASS" starttime="20180505 22:12:19.338" endtime="20180505 22:12:19.338"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.339" endtime="20180505 22:12:19.339"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:19.340" level="INFO">${value} = 800.0005</msg>
<status status="PASS" starttime="20180505 22:12:19.340" endtime="20180505 22:12:19.340"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:19.340" level="INFO">${ExpectedValue} = 800.0</msg>
<status status="PASS" starttime="20180505 22:12:19.340" endtime="20180505 22:12:19.340"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:19.341" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:12:19.341" level="INFO">Value: 800.0005</msg>
<msg timestamp="20180505 22:12:19.341" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:12:19.341" level="INFO">Expected Value: 800.0</msg>
<status status="PASS" starttime="20180505 22:12:19.340" endtime="20180505 22:12:19.341"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:19.341" level="INFO">${high} = 801.0</msg>
<status status="PASS" starttime="20180505 22:12:19.341" endtime="20180505 22:12:19.341"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:19.342" level="INFO">${low} = 799.0</msg>
<status status="PASS" starttime="20180505 22:12:19.341" endtime="20180505 22:12:19.342"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.342" endtime="20180505 22:12:19.342"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.342" endtime="20180505 22:12:19.342"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.339" endtime="20180505 22:12:19.342"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.337" endtime="20180505 22:12:19.343"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.337" endtime="20180505 22:12:19.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:12:19.343" level="INFO">${Wavelength} = 850.0</msg>
<status status="PASS" starttime="20180505 22:12:19.343" endtime="20180505 22:12:19.343"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:07.994" endtime="20180505 22:12:19.343"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.343" endtime="20180505 22:12:19.344"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:12:19.344" level="INFO">Wavelength: 850.0</msg>
<msg timestamp="20180505 22:12:19.344" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:12:19.344" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:12:19.344" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:12:19.344" endtime="20180505 22:12:19.344"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:19.345" endtime="20180505 22:12:30.705"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.344" endtime="20180505 22:12:30.705"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.706" endtime="20180505 22:12:30.706"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:12:30.707" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:12:30.707" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbb3d18&gt;</msg>
<status status="PASS" starttime="20180505 22:12:30.706" endtime="20180505 22:12:30.707"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:12:30.707" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:12:30.707" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbb3e68&gt;</msg>
<status status="PASS" starttime="20180505 22:12:30.707" endtime="20180505 22:12:30.707"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.707" endtime="20180505 22:12:30.708"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.708" endtime="20180505 22:12:30.708"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.708" endtime="20180505 22:12:30.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:30.710" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:12:30.709" endtime="20180505 22:12:30.710"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:30.710" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:12:30.710" endtime="20180505 22:12:30.710"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:30.711" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:30.711" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:12:30.711" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:30.711" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:12:30.710" endtime="20180505 22:12:30.711"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:30.711" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:12:30.711" endtime="20180505 22:12:30.711"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:30.712" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:12:30.711" endtime="20180505 22:12:30.712"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.712" endtime="20180505 22:12:30.712"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.712" endtime="20180505 22:12:30.712"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.709" endtime="20180505 22:12:30.713"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.708" endtime="20180505 22:12:30.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:30.714" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:12:30.714" endtime="20180505 22:12:30.714"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:30.714" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:12:30.714" endtime="20180505 22:12:30.714"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:30.715" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:30.715" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:12:30.715" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:30.715" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:12:30.714" endtime="20180505 22:12:30.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:30.715" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:12:30.715" endtime="20180505 22:12:30.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:30.716" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:12:30.715" endtime="20180505 22:12:30.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.716" endtime="20180505 22:12:30.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.716" endtime="20180505 22:12:30.716"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.713" endtime="20180505 22:12:30.717"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.713" endtime="20180505 22:12:30.717"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.705" endtime="20180505 22:12:30.717"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.705" endtime="20180505 22:12:30.717"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.717" endtime="20180505 22:12:30.717"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:30.718" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:30.718" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8c8aed8&gt;</msg>
<status status="PASS" starttime="20180505 22:12:30.718" endtime="20180505 22:12:30.718"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.718" endtime="20180505 22:12:30.718"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:30.727" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:30.727" endtime="20180505 22:12:30.727"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:30.728" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:30.727" endtime="20180505 22:12:30.728"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:30.728" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:12:30.728" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:12:30.728" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:12:30.728" endtime="20180505 22:12:30.728"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.728" endtime="20180505 22:12:30.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.718" endtime="20180505 22:12:30.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.717" endtime="20180505 22:12:30.729"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.717" endtime="20180505 22:12:30.729"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.729" endtime="20180505 22:12:30.730"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:30.730" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:30.730" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ecac8880&gt;</msg>
<status status="PASS" starttime="20180505 22:12:30.730" endtime="20180505 22:12:30.730"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.730" endtime="20180505 22:12:30.730"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:30.731" level="INFO">${value} = 849.9995</msg>
<status status="PASS" starttime="20180505 22:12:30.731" endtime="20180505 22:12:30.731"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:30.732" level="INFO">${ExpectedValue} = 850.0</msg>
<status status="PASS" starttime="20180505 22:12:30.731" endtime="20180505 22:12:30.732"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:30.732" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:12:30.732" level="INFO">Value: 849.9995</msg>
<msg timestamp="20180505 22:12:30.732" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:12:30.732" level="INFO">Expected Value: 850.0</msg>
<status status="PASS" starttime="20180505 22:12:30.732" endtime="20180505 22:12:30.732"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:30.733" level="INFO">${high} = 851.0</msg>
<status status="PASS" starttime="20180505 22:12:30.732" endtime="20180505 22:12:30.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:30.733" level="INFO">${low} = 849.0</msg>
<status status="PASS" starttime="20180505 22:12:30.733" endtime="20180505 22:12:30.733"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.733" endtime="20180505 22:12:30.733"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.733" endtime="20180505 22:12:30.734"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.730" endtime="20180505 22:12:30.734"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.729" endtime="20180505 22:12:30.734"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.729" endtime="20180505 22:12:30.734"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:12:30.734" level="INFO">${Wavelength} = 900.0</msg>
<status status="PASS" starttime="20180505 22:12:30.734" endtime="20180505 22:12:30.734"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:19.343" endtime="20180505 22:12:30.734"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.735" endtime="20180505 22:12:30.735"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:12:30.735" level="INFO">Wavelength: 900.0</msg>
<msg timestamp="20180505 22:12:30.735" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:12:30.735" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:12:30.735" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:12:30.735" endtime="20180505 22:12:30.735"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:30.736" endtime="20180505 22:12:42.032"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.735" endtime="20180505 22:12:42.032"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.033" endtime="20180505 22:12:42.033"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:12:42.034" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:12:42.034" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea001848&gt;</msg>
<status status="PASS" starttime="20180505 22:12:42.033" endtime="20180505 22:12:42.034"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:12:42.034" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:12:42.034" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea001a40&gt;</msg>
<status status="PASS" starttime="20180505 22:12:42.034" endtime="20180505 22:12:42.034"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.034" endtime="20180505 22:12:42.034"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.034" endtime="20180505 22:12:42.035"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.035" endtime="20180505 22:12:42.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:42.036" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:12:42.036" endtime="20180505 22:12:42.036"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:42.037" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:12:42.036" endtime="20180505 22:12:42.037"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:42.037" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:42.037" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:12:42.037" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:42.037" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:12:42.037" endtime="20180505 22:12:42.037"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:42.038" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:12:42.038" endtime="20180505 22:12:42.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:42.039" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:12:42.039" endtime="20180505 22:12:42.039"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.039" endtime="20180505 22:12:42.039"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.039" endtime="20180505 22:12:42.040"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.035" endtime="20180505 22:12:42.040"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.035" endtime="20180505 22:12:42.040"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:42.041" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:12:42.041" endtime="20180505 22:12:42.041"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:42.042" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:12:42.042" endtime="20180505 22:12:42.042"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:42.042" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:42.042" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:12:42.042" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:42.042" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:12:42.042" endtime="20180505 22:12:42.042"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:42.043" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:12:42.043" endtime="20180505 22:12:42.043"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:42.043" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:12:42.043" endtime="20180505 22:12:42.043"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.043" endtime="20180505 22:12:42.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.044" endtime="20180505 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.041" endtime="20180505 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.040" endtime="20180505 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.033" endtime="20180505 22:12:42.044"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.032" endtime="20180505 22:12:42.044"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.045" endtime="20180505 22:12:42.045"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:42.045" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:42.045" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ecbb3730&gt;</msg>
<status status="PASS" starttime="20180505 22:12:42.045" endtime="20180505 22:12:42.045"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.045" endtime="20180505 22:12:42.046"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:42.046" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:42.046" endtime="20180505 22:12:42.046"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:42.047" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:42.047" endtime="20180505 22:12:42.047"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:42.047" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:12:42.047" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:12:42.047" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:12:42.047" endtime="20180505 22:12:42.047"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.047" endtime="20180505 22:12:42.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.046" endtime="20180505 22:12:42.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.045" endtime="20180505 22:12:42.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.044" endtime="20180505 22:12:42.048"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.048" endtime="20180505 22:12:42.049"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:42.049" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:42.049" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ea005688&gt;</msg>
<status status="PASS" starttime="20180505 22:12:42.049" endtime="20180505 22:12:42.049"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.049" endtime="20180505 22:12:42.049"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:42.051" level="INFO">${value} = 899.9994</msg>
<status status="PASS" starttime="20180505 22:12:42.050" endtime="20180505 22:12:42.051"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:42.051" level="INFO">${ExpectedValue} = 900.0</msg>
<status status="PASS" starttime="20180505 22:12:42.051" endtime="20180505 22:12:42.051"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:42.051" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:12:42.051" level="INFO">Value: 899.9994</msg>
<msg timestamp="20180505 22:12:42.051" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:12:42.052" level="INFO">Expected Value: 900.0</msg>
<status status="PASS" starttime="20180505 22:12:42.051" endtime="20180505 22:12:42.052"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:42.052" level="INFO">${high} = 901.0</msg>
<status status="PASS" starttime="20180505 22:12:42.052" endtime="20180505 22:12:42.052"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:42.052" level="INFO">${low} = 899.0</msg>
<status status="PASS" starttime="20180505 22:12:42.052" endtime="20180505 22:12:42.052"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.052" endtime="20180505 22:12:42.053"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.053" endtime="20180505 22:12:42.053"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.049" endtime="20180505 22:12:42.053"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.048" endtime="20180505 22:12:42.053"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.048" endtime="20180505 22:12:42.053"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:12:42.054" level="INFO">${Wavelength} = 950.0</msg>
<status status="PASS" starttime="20180505 22:12:42.053" endtime="20180505 22:12:42.054"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:30.734" endtime="20180505 22:12:42.054"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.054" endtime="20180505 22:12:42.054"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:12:42.054" level="INFO">Wavelength: 950.0</msg>
<msg timestamp="20180505 22:12:42.055" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:12:42.055" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:12:42.055" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:12:42.054" endtime="20180505 22:12:42.055"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:42.055" endtime="20180505 22:12:53.376"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.055" endtime="20180505 22:12:53.377"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.377" endtime="20180505 22:12:53.377"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:12:53.378" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:12:53.378" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8ab20&gt;</msg>
<status status="PASS" starttime="20180505 22:12:53.378" endtime="20180505 22:12:53.378"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:12:53.378" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:12:53.378" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a538&gt;</msg>
<status status="PASS" starttime="20180505 22:12:53.378" endtime="20180505 22:12:53.378"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.378" endtime="20180505 22:12:53.379"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.379" endtime="20180505 22:12:53.379"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.379" endtime="20180505 22:12:53.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:53.380" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:12:53.380" endtime="20180505 22:12:53.380"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:53.381" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:12:53.380" endtime="20180505 22:12:53.381"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:53.381" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:53.381" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:12:53.381" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:53.382" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:12:53.381" endtime="20180505 22:12:53.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:53.382" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:12:53.382" endtime="20180505 22:12:53.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:53.382" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:12:53.382" endtime="20180505 22:12:53.382"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.383" endtime="20180505 22:12:53.383"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.383" endtime="20180505 22:12:53.384"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.380" endtime="20180505 22:12:53.384"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.379" endtime="20180505 22:12:53.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:53.385" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:12:53.385" endtime="20180505 22:12:53.385"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:53.386" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:12:53.385" endtime="20180505 22:12:53.386"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:53.386" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:12:53.386" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:12:53.386" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:12:53.386" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:12:53.386" endtime="20180505 22:12:53.386"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:53.387" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:12:53.386" endtime="20180505 22:12:53.387"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:53.387" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:12:53.387" endtime="20180505 22:12:53.387"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.387" endtime="20180505 22:12:53.387"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.387" endtime="20180505 22:12:53.388"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.384" endtime="20180505 22:12:53.388"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.384" endtime="20180505 22:12:53.388"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.377" endtime="20180505 22:12:53.388"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.377" endtime="20180505 22:12:53.388"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.389" endtime="20180505 22:12:53.389"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:53.389" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:53.389" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ecac80d8&gt;</msg>
<status status="PASS" starttime="20180505 22:12:53.389" endtime="20180505 22:12:53.389"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.389" endtime="20180505 22:12:53.390"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:53.390" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:53.390" endtime="20180505 22:12:53.390"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:53.391" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:12:53.390" endtime="20180505 22:12:53.391"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:53.391" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:12:53.391" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:12:53.391" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:12:53.391" endtime="20180505 22:12:53.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.391" endtime="20180505 22:12:53.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.390" endtime="20180505 22:12:53.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.388" endtime="20180505 22:12:53.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.388" endtime="20180505 22:12:53.392"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.392" endtime="20180505 22:12:53.393"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:12:53.393" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:12:53.393" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e9ffdf10&gt;</msg>
<status status="PASS" starttime="20180505 22:12:53.393" endtime="20180505 22:12:53.393"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.393" endtime="20180505 22:12:53.393"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:12:53.394" level="INFO">${value} = 950.0001000000001</msg>
<status status="PASS" starttime="20180505 22:12:53.394" endtime="20180505 22:12:53.394"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:12:53.395" level="INFO">${ExpectedValue} = 950.0</msg>
<status status="PASS" starttime="20180505 22:12:53.394" endtime="20180505 22:12:53.395"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:12:53.395" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:12:53.395" level="INFO">Value: 950.0001000000001</msg>
<msg timestamp="20180505 22:12:53.395" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:12:53.395" level="INFO">Expected Value: 950.0</msg>
<status status="PASS" starttime="20180505 22:12:53.395" endtime="20180505 22:12:53.395"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:12:53.396" level="INFO">${high} = 951.0</msg>
<status status="PASS" starttime="20180505 22:12:53.395" endtime="20180505 22:12:53.396"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:12:53.396" level="INFO">${low} = 949.0</msg>
<status status="PASS" starttime="20180505 22:12:53.396" endtime="20180505 22:12:53.396"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.396" endtime="20180505 22:12:53.397"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.397" endtime="20180505 22:12:53.397"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.393" endtime="20180505 22:12:53.397"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.392" endtime="20180505 22:12:53.397"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.392" endtime="20180505 22:12:53.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:12:53.398" level="INFO">${Wavelength} = 1000.0</msg>
<status status="PASS" starttime="20180505 22:12:53.397" endtime="20180505 22:12:53.398"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:42.054" endtime="20180505 22:12:53.398"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.398" endtime="20180505 22:12:53.398"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:12:53.399" level="INFO">Wavelength: 1000.0</msg>
<msg timestamp="20180505 22:12:53.399" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:12:53.399" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:12:53.399" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:12:53.398" endtime="20180505 22:12:53.399"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:12:53.399" endtime="20180505 22:13:04.752"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.399" endtime="20180505 22:13:04.752"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.753" endtime="20180505 22:13:04.753"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:13:04.754" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:13:04.754" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86eca74538&gt;</msg>
<status status="PASS" starttime="20180505 22:13:04.754" endtime="20180505 22:13:04.754"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:13:04.754" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:13:04.754" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8adc0&gt;</msg>
<status status="PASS" starttime="20180505 22:13:04.754" endtime="20180505 22:13:04.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.754" endtime="20180505 22:13:04.755"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.755" endtime="20180505 22:13:04.755"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.755" endtime="20180505 22:13:04.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:04.756" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:13:04.756" endtime="20180505 22:13:04.756"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:04.757" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:13:04.757" endtime="20180505 22:13:04.757"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:04.757" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:04.757" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:13:04.757" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:04.757" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:13:04.757" endtime="20180505 22:13:04.758"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:04.758" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:13:04.758" endtime="20180505 22:13:04.758"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:04.758" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:13:04.758" endtime="20180505 22:13:04.758"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.759" endtime="20180505 22:13:04.759"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.759" endtime="20180505 22:13:04.760"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.756" endtime="20180505 22:13:04.760"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.755" endtime="20180505 22:13:04.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:04.763" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:13:04.762" endtime="20180505 22:13:04.763"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:04.764" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:13:04.764" endtime="20180505 22:13:04.764"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:04.765" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:04.765" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:13:04.765" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:04.765" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:13:04.764" endtime="20180505 22:13:04.765"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:04.766" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:13:04.765" endtime="20180505 22:13:04.766"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:04.766" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:13:04.766" endtime="20180505 22:13:04.766"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.766" endtime="20180505 22:13:04.767"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.767" endtime="20180505 22:13:04.767"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.761" endtime="20180505 22:13:04.767"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.760" endtime="20180505 22:13:04.767"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.753" endtime="20180505 22:13:04.767"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.753" endtime="20180505 22:13:04.767"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.768" endtime="20180505 22:13:04.768"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:04.768" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:04.768" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc3730&gt;</msg>
<status status="PASS" starttime="20180505 22:13:04.768" endtime="20180505 22:13:04.768"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.769" endtime="20180505 22:13:04.769"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:04.770" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:04.769" endtime="20180505 22:13:04.770"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:04.770" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:04.770" endtime="20180505 22:13:04.770"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:04.770" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:13:04.770" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:13:04.770" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:13:04.770" endtime="20180505 22:13:04.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.771" endtime="20180505 22:13:04.771"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.769" endtime="20180505 22:13:04.771"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.768" endtime="20180505 22:13:04.771"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.767" endtime="20180505 22:13:04.771"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.772" endtime="20180505 22:13:04.772"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:04.772" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:04.772" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ecac8fb8&gt;</msg>
<status status="PASS" starttime="20180505 22:13:04.772" endtime="20180505 22:13:04.772"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.772" endtime="20180505 22:13:04.773"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:04.773" level="INFO">${value} = 999.9994</msg>
<status status="PASS" starttime="20180505 22:13:04.773" endtime="20180505 22:13:04.773"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:04.774" level="INFO">${ExpectedValue} = 1000.0</msg>
<status status="PASS" starttime="20180505 22:13:04.774" endtime="20180505 22:13:04.774"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:04.774" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:13:04.774" level="INFO">Value: 999.9994</msg>
<msg timestamp="20180505 22:13:04.775" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:13:04.775" level="INFO">Expected Value: 1000.0</msg>
<status status="PASS" starttime="20180505 22:13:04.774" endtime="20180505 22:13:04.775"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:04.775" level="INFO">${high} = 1001.0</msg>
<status status="PASS" starttime="20180505 22:13:04.775" endtime="20180505 22:13:04.775"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:04.775" level="INFO">${low} = 999.0</msg>
<status status="PASS" starttime="20180505 22:13:04.775" endtime="20180505 22:13:04.775"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.776" endtime="20180505 22:13:04.776"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.776" endtime="20180505 22:13:04.776"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.773" endtime="20180505 22:13:04.776"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.771" endtime="20180505 22:13:04.776"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.771" endtime="20180505 22:13:04.776"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:04.777" level="INFO">${Wavelength} = 1050.0</msg>
<status status="PASS" starttime="20180505 22:13:04.776" endtime="20180505 22:13:04.777"></status>
</kw>
<status status="PASS" starttime="20180505 22:12:53.398" endtime="20180505 22:13:04.777"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.777" endtime="20180505 22:13:04.777"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:13:04.778" level="INFO">Wavelength: 1050.0</msg>
<msg timestamp="20180505 22:13:04.778" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:13:04.778" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:13:04.778" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:13:04.778" endtime="20180505 22:13:04.778"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:04.778" endtime="20180505 22:13:16.102"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.778" endtime="20180505 22:13:16.102"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.104" endtime="20180505 22:13:16.104"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:13:16.104" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:13:16.104" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffad50&gt;</msg>
<status status="PASS" starttime="20180505 22:13:16.104" endtime="20180505 22:13:16.104"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:13:16.105" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:13:16.105" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffa0a0&gt;</msg>
<status status="PASS" starttime="20180505 22:13:16.104" endtime="20180505 22:13:16.105"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.105" endtime="20180505 22:13:16.105"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.105" endtime="20180505 22:13:16.105"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.105" endtime="20180505 22:13:16.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:16.107" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:13:16.107" endtime="20180505 22:13:16.107"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:16.107" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:13:16.107" endtime="20180505 22:13:16.107"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:16.108" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:16.108" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:13:16.108" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:16.108" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:13:16.107" endtime="20180505 22:13:16.108"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:16.108" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:13:16.108" endtime="20180505 22:13:16.108"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:16.109" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:13:16.109" endtime="20180505 22:13:16.109"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.109" endtime="20180505 22:13:16.109"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.109" endtime="20180505 22:13:16.110"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.106" endtime="20180505 22:13:16.110"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.106" endtime="20180505 22:13:16.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:16.111" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:13:16.111" endtime="20180505 22:13:16.111"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:16.112" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:13:16.111" endtime="20180505 22:13:16.112"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:16.112" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:16.112" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:13:16.112" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:16.112" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:13:16.112" endtime="20180505 22:13:16.112"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:16.112" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:13:16.112" endtime="20180505 22:13:16.113"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:16.113" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:13:16.113" endtime="20180505 22:13:16.113"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.113" endtime="20180505 22:13:16.113"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.114" endtime="20180505 22:13:16.114"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.110" endtime="20180505 22:13:16.114"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.110" endtime="20180505 22:13:16.114"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.103" endtime="20180505 22:13:16.114"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.102" endtime="20180505 22:13:16.114"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.115" endtime="20180505 22:13:16.115"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:16.115" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:16.115" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cff6f8&gt;</msg>
<status status="PASS" starttime="20180505 22:13:16.115" endtime="20180505 22:13:16.115"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.115" endtime="20180505 22:13:16.116"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:16.117" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:16.116" endtime="20180505 22:13:16.117"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:16.117" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:16.117" endtime="20180505 22:13:16.117"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:16.117" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:13:16.117" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:13:16.117" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:13:16.117" endtime="20180505 22:13:16.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.118" endtime="20180505 22:13:16.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.116" endtime="20180505 22:13:16.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.114" endtime="20180505 22:13:16.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.114" endtime="20180505 22:13:16.118"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.119" endtime="20180505 22:13:16.119"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:16.119" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:16.119" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ea005ea0&gt;</msg>
<status status="PASS" starttime="20180505 22:13:16.119" endtime="20180505 22:13:16.119"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.119" endtime="20180505 22:13:16.120"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:16.121" level="INFO">${value} = 1050.0</msg>
<status status="PASS" starttime="20180505 22:13:16.120" endtime="20180505 22:13:16.121"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:16.121" level="INFO">${ExpectedValue} = 1050.0</msg>
<status status="PASS" starttime="20180505 22:13:16.121" endtime="20180505 22:13:16.121"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:16.121" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:13:16.121" level="INFO">Value: 1050.0</msg>
<msg timestamp="20180505 22:13:16.121" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:13:16.122" level="INFO">Expected Value: 1050.0</msg>
<status status="PASS" starttime="20180505 22:13:16.121" endtime="20180505 22:13:16.122"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:16.122" level="INFO">${high} = 1051.0</msg>
<status status="PASS" starttime="20180505 22:13:16.122" endtime="20180505 22:13:16.122"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:16.122" level="INFO">${low} = 1049.0</msg>
<status status="PASS" starttime="20180505 22:13:16.122" endtime="20180505 22:13:16.122"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.123" endtime="20180505 22:13:16.123"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.123" endtime="20180505 22:13:16.123"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.120" endtime="20180505 22:13:16.123"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.118" endtime="20180505 22:13:16.124"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.118" endtime="20180505 22:13:16.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:16.124" level="INFO">${Wavelength} = 1100.0</msg>
<status status="PASS" starttime="20180505 22:13:16.124" endtime="20180505 22:13:16.124"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:04.777" endtime="20180505 22:13:16.124"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.124" endtime="20180505 22:13:16.125"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:13:16.125" level="INFO">Wavelength: 1100.0</msg>
<msg timestamp="20180505 22:13:16.125" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:13:16.125" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:13:16.125" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:13:16.125" endtime="20180505 22:13:16.125"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:16.125" endtime="20180505 22:13:27.493"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.125" endtime="20180505 22:13:27.493"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.494" endtime="20180505 22:13:27.495"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:13:27.495" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:13:27.495" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff420&gt;</msg>
<status status="PASS" starttime="20180505 22:13:27.495" endtime="20180505 22:13:27.495"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:13:27.495" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:13:27.495" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff180&gt;</msg>
<status status="PASS" starttime="20180505 22:13:27.495" endtime="20180505 22:13:27.496"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.496" endtime="20180505 22:13:27.496"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.496" endtime="20180505 22:13:27.496"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.496" endtime="20180505 22:13:27.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:27.498" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:13:27.498" endtime="20180505 22:13:27.498"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:27.498" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:13:27.498" endtime="20180505 22:13:27.499"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:27.499" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:27.499" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:13:27.499" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:27.499" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:13:27.499" endtime="20180505 22:13:27.499"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:27.500" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:13:27.499" endtime="20180505 22:13:27.500"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:27.500" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:13:27.500" endtime="20180505 22:13:27.500"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.500" endtime="20180505 22:13:27.501"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.501" endtime="20180505 22:13:27.501"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.497" endtime="20180505 22:13:27.501"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.496" endtime="20180505 22:13:27.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:27.503" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:13:27.503" endtime="20180505 22:13:27.503"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:27.503" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:13:27.503" endtime="20180505 22:13:27.503"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:27.504" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:27.504" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:13:27.504" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:27.504" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:13:27.503" endtime="20180505 22:13:27.504"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:27.505" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:13:27.504" endtime="20180505 22:13:27.505"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:27.505" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:13:27.505" endtime="20180505 22:13:27.505"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.505" endtime="20180505 22:13:27.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.506" endtime="20180505 22:13:27.506"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.502" endtime="20180505 22:13:27.506"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.501" endtime="20180505 22:13:27.506"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.494" endtime="20180505 22:13:27.506"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.494" endtime="20180505 22:13:27.506"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.507" endtime="20180505 22:13:27.507"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:27.508" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:27.508" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ffde68&gt;</msg>
<status status="PASS" starttime="20180505 22:13:27.507" endtime="20180505 22:13:27.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.508" endtime="20180505 22:13:27.508"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:27.509" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:27.508" endtime="20180505 22:13:27.509"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:27.509" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:27.509" endtime="20180505 22:13:27.509"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:27.509" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:13:27.510" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:13:27.510" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:13:27.509" endtime="20180505 22:13:27.510"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.510" endtime="20180505 22:13:27.510"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.508" endtime="20180505 22:13:27.510"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.507" endtime="20180505 22:13:27.510"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.506" endtime="20180505 22:13:27.510"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.511" endtime="20180505 22:13:27.511"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:27.511" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:27.511" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad931f0&gt;</msg>
<status status="PASS" starttime="20180505 22:13:27.511" endtime="20180505 22:13:27.511"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.512" endtime="20180505 22:13:27.512"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:27.513" level="INFO">${value} = 1100.0004000000001</msg>
<status status="PASS" starttime="20180505 22:13:27.513" endtime="20180505 22:13:27.513"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:27.513" level="INFO">${ExpectedValue} = 1100.0</msg>
<status status="PASS" starttime="20180505 22:13:27.513" endtime="20180505 22:13:27.513"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:27.514" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:13:27.514" level="INFO">Value: 1100.0004000000001</msg>
<msg timestamp="20180505 22:13:27.514" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:13:27.514" level="INFO">Expected Value: 1100.0</msg>
<status status="PASS" starttime="20180505 22:13:27.513" endtime="20180505 22:13:27.514"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:27.514" level="INFO">${high} = 1101.0</msg>
<status status="PASS" starttime="20180505 22:13:27.514" endtime="20180505 22:13:27.514"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:27.515" level="INFO">${low} = 1099.0</msg>
<status status="PASS" starttime="20180505 22:13:27.514" endtime="20180505 22:13:27.515"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.515" endtime="20180505 22:13:27.515"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.515" endtime="20180505 22:13:27.515"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.512" endtime="20180505 22:13:27.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.511" endtime="20180505 22:13:27.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.510" endtime="20180505 22:13:27.516"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:27.516" level="INFO">${Wavelength} = 1150.0</msg>
<status status="PASS" starttime="20180505 22:13:27.516" endtime="20180505 22:13:27.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:16.124" endtime="20180505 22:13:27.516"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.516" endtime="20180505 22:13:27.517"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:13:27.517" level="INFO">Wavelength: 1150.0</msg>
<msg timestamp="20180505 22:13:27.517" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:13:27.517" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:13:27.517" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:13:27.517" endtime="20180505 22:13:27.517"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:27.518" endtime="20180505 22:13:38.878"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.517" endtime="20180505 22:13:38.878"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.879" endtime="20180505 22:13:38.879"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:13:38.879" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:13:38.879" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8ae68&gt;</msg>
<status status="PASS" starttime="20180505 22:13:38.879" endtime="20180505 22:13:38.879"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:13:38.880" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:13:38.880" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8a340&gt;</msg>
<status status="PASS" starttime="20180505 22:13:38.880" endtime="20180505 22:13:38.880"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.880" endtime="20180505 22:13:38.880"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.880" endtime="20180505 22:13:38.880"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.880" endtime="20180505 22:13:38.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:38.882" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:13:38.881" endtime="20180505 22:13:38.882"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:38.882" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:13:38.882" endtime="20180505 22:13:38.882"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:38.883" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:38.883" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:13:38.883" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:38.883" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:13:38.882" endtime="20180505 22:13:38.883"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:38.883" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:13:38.883" endtime="20180505 22:13:38.883"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:38.884" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:13:38.884" endtime="20180505 22:13:38.884"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.884" endtime="20180505 22:13:38.884"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.884" endtime="20180505 22:13:38.885"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.881" endtime="20180505 22:13:38.885"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.881" endtime="20180505 22:13:38.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:38.886" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:13:38.886" endtime="20180505 22:13:38.886"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:38.887" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:13:38.887" endtime="20180505 22:13:38.887"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:38.887" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:38.887" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:13:38.887" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:38.887" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:13:38.887" endtime="20180505 22:13:38.887"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:38.888" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:13:38.887" endtime="20180505 22:13:38.888"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:38.888" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:13:38.888" endtime="20180505 22:13:38.888"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.888" endtime="20180505 22:13:38.889"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.889" endtime="20180505 22:13:38.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.886" endtime="20180505 22:13:38.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.885" endtime="20180505 22:13:38.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.878" endtime="20180505 22:13:38.889"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.878" endtime="20180505 22:13:38.889"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.890" endtime="20180505 22:13:38.890"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:38.890" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:38.890" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc8308&gt;</msg>
<status status="PASS" starttime="20180505 22:13:38.890" endtime="20180505 22:13:38.890"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.891" endtime="20180505 22:13:38.891"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:38.891" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:38.891" endtime="20180505 22:13:38.891"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:38.892" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:38.892" endtime="20180505 22:13:38.892"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:38.892" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:13:38.892" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:13:38.892" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:13:38.892" endtime="20180505 22:13:38.892"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.892" endtime="20180505 22:13:38.893"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.891" endtime="20180505 22:13:38.893"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.890" endtime="20180505 22:13:38.893"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.889" endtime="20180505 22:13:38.893"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.894" endtime="20180505 22:13:38.894"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:38.894" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:38.894" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86aad934c8&gt;</msg>
<status status="PASS" starttime="20180505 22:13:38.894" endtime="20180505 22:13:38.894"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.894" endtime="20180505 22:13:38.895"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:38.895" level="INFO">${value} = 1149.9998</msg>
<status status="PASS" starttime="20180505 22:13:38.895" endtime="20180505 22:13:38.895"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:38.896" level="INFO">${ExpectedValue} = 1150.0</msg>
<status status="PASS" starttime="20180505 22:13:38.895" endtime="20180505 22:13:38.896"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:38.896" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:13:38.896" level="INFO">Value: 1149.9998</msg>
<msg timestamp="20180505 22:13:38.896" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:13:38.896" level="INFO">Expected Value: 1150.0</msg>
<status status="PASS" starttime="20180505 22:13:38.896" endtime="20180505 22:13:38.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:38.897" level="INFO">${high} = 1151.0</msg>
<status status="PASS" starttime="20180505 22:13:38.897" endtime="20180505 22:13:38.897"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:38.898" level="INFO">${low} = 1149.0</msg>
<status status="PASS" starttime="20180505 22:13:38.897" endtime="20180505 22:13:38.898"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.898" endtime="20180505 22:13:38.898"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.898" endtime="20180505 22:13:38.898"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.895" endtime="20180505 22:13:38.898"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.893" endtime="20180505 22:13:38.899"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.893" endtime="20180505 22:13:38.899"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:38.899" level="INFO">${Wavelength} = 1200.0</msg>
<status status="PASS" starttime="20180505 22:13:38.899" endtime="20180505 22:13:38.899"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:27.516" endtime="20180505 22:13:38.899"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.899" endtime="20180505 22:13:38.899"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${FrontExitWidth}</arg>
<arg>FrontEntranceWidth:${FrontEntranceWidth}</arg>
</arguments>
<msg timestamp="20180505 22:13:38.900" level="INFO">Wavelength: 1200.0</msg>
<msg timestamp="20180505 22:13:38.900" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:13:38.900" level="INFO">FrontExitWidth:1.3</msg>
<msg timestamp="20180505 22:13:38.900" level="INFO">FrontEntranceWidth:1.1</msg>
<status status="PASS" starttime="20180505 22:13:38.900" endtime="20180505 22:13:38.900"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${FrontExitWidth}</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:38.900" endtime="20180505 22:13:50.371"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.900" endtime="20180505 22:13:50.371"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${FrontEntranceWidth}</arg>
<arg>${FrontExitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.372" endtime="20180505 22:13:50.372"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:13:50.372" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:13:50.372" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc8538&gt;</msg>
<status status="PASS" starttime="20180505 22:13:50.372" endtime="20180505 22:13:50.372"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:13:50.373" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:13:50.373" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86eca74030&gt;</msg>
<status status="PASS" starttime="20180505 22:13:50.373" endtime="20180505 22:13:50.373"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.373" endtime="20180505 22:13:50.373"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.373" endtime="20180505 22:13:50.373"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.373" endtime="20180505 22:13:50.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:50.375" level="INFO">${value} = 1.0997000000000001</msg>
<status status="PASS" starttime="20180505 22:13:50.375" endtime="20180505 22:13:50.375"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:50.375" level="INFO">${ExpectedValue} = 1.1</msg>
<status status="PASS" starttime="20180505 22:13:50.375" endtime="20180505 22:13:50.375"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:50.376" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:50.376" level="INFO">Value: 1.0997000000000001</msg>
<msg timestamp="20180505 22:13:50.376" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:50.376" level="INFO">Expected Value: 1.1</msg>
<status status="PASS" starttime="20180505 22:13:50.375" endtime="20180505 22:13:50.376"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:50.376" level="INFO">${high} = 1.11</msg>
<status status="PASS" starttime="20180505 22:13:50.376" endtime="20180505 22:13:50.376"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:50.377" level="INFO">${low} = 1.09</msg>
<status status="PASS" starttime="20180505 22:13:50.376" endtime="20180505 22:13:50.377"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.377" endtime="20180505 22:13:50.377"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.377" endtime="20180505 22:13:50.378"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.374" endtime="20180505 22:13:50.378"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.374" endtime="20180505 22:13:50.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:50.380" level="INFO">${value} = 1.2988</msg>
<status status="PASS" starttime="20180505 22:13:50.379" endtime="20180505 22:13:50.380"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:50.380" level="INFO">${ExpectedValue} = 1.3</msg>
<status status="PASS" starttime="20180505 22:13:50.380" endtime="20180505 22:13:50.380"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:50.381" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:13:50.381" level="INFO">Value: 1.2988</msg>
<msg timestamp="20180505 22:13:50.381" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:13:50.381" level="INFO">Expected Value: 1.3</msg>
<status status="PASS" starttime="20180505 22:13:50.380" endtime="20180505 22:13:50.381"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:50.382" level="INFO">${high} = 1.31</msg>
<status status="PASS" starttime="20180505 22:13:50.382" endtime="20180505 22:13:50.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:50.382" level="INFO">${low} = 1.29</msg>
<status status="PASS" starttime="20180505 22:13:50.382" endtime="20180505 22:13:50.382"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.382" endtime="20180505 22:13:50.383"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.383" endtime="20180505 22:13:50.383"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.378" endtime="20180505 22:13:50.383"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.378" endtime="20180505 22:13:50.383"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.372" endtime="20180505 22:13:50.383"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.371" endtime="20180505 22:13:50.383"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.384" endtime="20180505 22:13:50.384"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:50.384" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:50.384" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86aad93b20&gt;</msg>
<status status="PASS" starttime="20180505 22:13:50.384" endtime="20180505 22:13:50.384"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.385" endtime="20180505 22:13:50.385"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:50.385" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:50.385" endtime="20180505 22:13:50.385"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:50.386" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:13:50.386" endtime="20180505 22:13:50.386"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:50.386" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:13:50.386" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:13:50.386" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:13:50.386" endtime="20180505 22:13:50.386"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.386" endtime="20180505 22:13:50.387"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.385" endtime="20180505 22:13:50.387"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.384" endtime="20180505 22:13:50.387"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.383" endtime="20180505 22:13:50.387"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.387" endtime="20180505 22:13:50.388"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:13:50.388" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:13:50.388" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cff618&gt;</msg>
<status status="PASS" starttime="20180505 22:13:50.388" endtime="20180505 22:13:50.388"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.388" endtime="20180505 22:13:50.388"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:13:50.389" level="INFO">${value} = 1199.9995000000001</msg>
<status status="PASS" starttime="20180505 22:13:50.389" endtime="20180505 22:13:50.389"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:13:50.390" level="INFO">${ExpectedValue} = 1200.0</msg>
<status status="PASS" starttime="20180505 22:13:50.389" endtime="20180505 22:13:50.390"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:50.390" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:13:50.390" level="INFO">Value: 1199.9995000000001</msg>
<msg timestamp="20180505 22:13:50.390" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:13:50.390" level="INFO">Expected Value: 1200.0</msg>
<status status="PASS" starttime="20180505 22:13:50.390" endtime="20180505 22:13:50.391"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:13:50.391" level="INFO">${high} = 1201.0</msg>
<status status="PASS" starttime="20180505 22:13:50.391" endtime="20180505 22:13:50.391"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:13:50.391" level="INFO">${low} = 1199.0</msg>
<status status="PASS" starttime="20180505 22:13:50.391" endtime="20180505 22:13:50.391"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.391" endtime="20180505 22:13:50.392"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:50.392" endtime="20180505 22:13:50.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.388" endtime="20180505 22:13:50.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.387" endtime="20180505 22:13:50.392"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.387" endtime="20180505 22:13:50.392"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:50.393" level="INFO">${Wavelength} = 1250.0</msg>
<status status="PASS" starttime="20180505 22:13:50.392" endtime="20180505 22:13:50.393"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:38.899" endtime="20180505 22:13:50.393"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Wavelength} &gt; ${MaxValue}</arg>
</arguments>
<msg timestamp="20180505 22:13:50.393" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 22:13:50.393" endtime="20180505 22:13:50.393"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:50.393" endtime="20180505 22:13:50.393"></status>
</kw>
<status status="PASS" starttime="20180505 22:11:08.745" endtime="20180505 22:13:50.403"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:13:54.403" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:13:50.403" endtime="20180505 22:13:54.404"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:11:08.741" endtime="20180505 22:13:54.404" critical="yes"></status>
</test>
<test id="s1-t16" name="From Enable Setup All Parameters in Red Grating and verify value">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Update All parameters and verify all changed to right value.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:54.405" endtime="20180505 22:13:54.405"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${FrontExit}</arg>
</arguments>
<assign>
<var>${slitNumber}</var>
</assign>
<msg timestamp="20180505 22:13:54.405" level="INFO">${slitNumber} = 2</msg>
<status status="PASS" starttime="20180505 22:13:54.405" endtime="20180505 22:13:54.405"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${initSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:13:54.406" level="INFO">${slitWidth} = 0.0</msg>
<status status="PASS" starttime="20180505 22:13:54.405" endtime="20180505 22:13:54.406"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${DeltaSlitWidth}</arg>
</arguments>
<assign>
<var>${DSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:13:54.406" level="INFO">${DSlitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:13:54.406" endtime="20180505 22:13:54.406"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${MaxSlitWidth}</arg>
</arguments>
<assign>
<var>${MaxSlitWidth}</var>
</assign>
<msg timestamp="20180505 22:13:54.407" level="INFO">${MaxSlitWidth} = 5.3</msg>
<status status="PASS" starttime="20180505 22:13:54.407" endtime="20180505 22:13:54.407"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${Red}</arg>
</arguments>
<assign>
<var>${grating}</var>
</assign>
<msg timestamp="20180505 22:13:54.407" level="INFO">${grating} = 2</msg>
<status status="PASS" starttime="20180505 22:13:54.407" endtime="20180505 22:13:54.407"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<assign>
<var>${DW}</var>
</assign>
<msg timestamp="20180505 22:13:54.408" level="INFO">${DW} = 1.0</msg>
<status status="PASS" starttime="20180505 22:13:54.407" endtime="20180505 22:13:54.408"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${400}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:13:54.408" level="INFO">${Wavelength} = 400.0</msg>
<status status="PASS" starttime="20180505 22:13:54.408" endtime="20180505 22:13:54.408"></status>
</kw>
<kw name="${i} IN RANGE [ 999999 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:54.425" endtime="20180505 22:13:54.425"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:13:54.426" level="INFO">Wavelength: 400.0</msg>
<msg timestamp="20180505 22:13:54.426" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:13:54.426" level="INFO">FrontExitWidth:0.0</msg>
<msg timestamp="20180505 22:13:54.426" level="INFO">FrontEntranceWidth:0.0</msg>
<status status="PASS" starttime="20180505 22:13:54.425" endtime="20180505 22:13:54.426"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:13:54.426" endtime="20180505 22:14:05.911"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:54.426" endtime="20180505 22:14:05.911"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.912" endtime="20180505 22:14:05.912"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:14:05.913" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:14:05.913" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff928&gt;</msg>
<status status="PASS" starttime="20180505 22:14:05.913" endtime="20180505 22:14:05.913"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:14:05.913" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:14:05.913" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cfff48&gt;</msg>
<status status="PASS" starttime="20180505 22:14:05.913" endtime="20180505 22:14:05.913"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.913" endtime="20180505 22:14:05.914"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.914" endtime="20180505 22:14:05.914"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.914" endtime="20180505 22:14:05.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:05.915" level="INFO">${value} = 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.915" endtime="20180505 22:14:05.915"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:05.916" level="INFO">${ExpectedValue} = 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.915" endtime="20180505 22:14:05.916"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:05.916" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:05.916" level="INFO">Value: 0.0</msg>
<msg timestamp="20180505 22:14:05.916" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:05.916" level="INFO">Expected Value: 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.916" endtime="20180505 22:14:05.916"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:05.917" level="INFO">${high} = 0.01</msg>
<status status="PASS" starttime="20180505 22:14:05.916" endtime="20180505 22:14:05.917"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:05.917" level="INFO">${low} = -0.01</msg>
<status status="PASS" starttime="20180505 22:14:05.917" endtime="20180505 22:14:05.917"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.917" endtime="20180505 22:14:05.918"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.918" endtime="20180505 22:14:05.918"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.915" endtime="20180505 22:14:05.918"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.914" endtime="20180505 22:14:05.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:05.927" level="INFO">${value} = 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.927" endtime="20180505 22:14:05.928"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:05.928" level="INFO">${ExpectedValue} = 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.928" endtime="20180505 22:14:05.928"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:05.929" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:05.929" level="INFO">Value: 0.0</msg>
<msg timestamp="20180505 22:14:05.929" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:05.929" level="INFO">Expected Value: 0.0</msg>
<status status="PASS" starttime="20180505 22:14:05.928" endtime="20180505 22:14:05.929"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:05.929" level="INFO">${high} = 0.01</msg>
<status status="PASS" starttime="20180505 22:14:05.929" endtime="20180505 22:14:05.929"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:05.930" level="INFO">${low} = -0.01</msg>
<status status="PASS" starttime="20180505 22:14:05.930" endtime="20180505 22:14:05.930"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.930" endtime="20180505 22:14:05.930"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.930" endtime="20180505 22:14:05.931"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.919" endtime="20180505 22:14:05.931"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.918" endtime="20180505 22:14:05.931"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.912" endtime="20180505 22:14:05.931"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.911" endtime="20180505 22:14:05.931"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.932" endtime="20180505 22:14:05.932"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:05.932" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:05.932" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ff1b90&gt;</msg>
<status status="PASS" starttime="20180505 22:14:05.932" endtime="20180505 22:14:05.932"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.932" endtime="20180505 22:14:05.933"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:05.933" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:05.933" endtime="20180505 22:14:05.933"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:05.934" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:05.934" endtime="20180505 22:14:05.934"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:05.934" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:14:05.934" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:14:05.934" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:05.934" endtime="20180505 22:14:05.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.934" endtime="20180505 22:14:05.935"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.933" endtime="20180505 22:14:05.935"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.931" endtime="20180505 22:14:05.935"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.931" endtime="20180505 22:14:05.935"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.936" endtime="20180505 22:14:05.936"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:05.936" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:05.936" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc3848&gt;</msg>
<status status="PASS" starttime="20180505 22:14:05.936" endtime="20180505 22:14:05.936"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.936" endtime="20180505 22:14:05.936"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:05.937" level="INFO">${value} = 400.0006</msg>
<status status="PASS" starttime="20180505 22:14:05.937" endtime="20180505 22:14:05.937"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:05.938" level="INFO">${ExpectedValue} = 400.0</msg>
<status status="PASS" starttime="20180505 22:14:05.937" endtime="20180505 22:14:05.938"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:05.938" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:14:05.938" level="INFO">Value: 400.0006</msg>
<msg timestamp="20180505 22:14:05.938" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:14:05.938" level="INFO">Expected Value: 400.0</msg>
<status status="PASS" starttime="20180505 22:14:05.938" endtime="20180505 22:14:05.938"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:05.939" level="INFO">${high} = 401.0</msg>
<status status="PASS" starttime="20180505 22:14:05.938" endtime="20180505 22:14:05.939"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:05.939" level="INFO">${low} = 399.0</msg>
<status status="PASS" starttime="20180505 22:14:05.939" endtime="20180505 22:14:05.939"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.939" endtime="20180505 22:14:05.940"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.940" endtime="20180505 22:14:05.940"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.936" endtime="20180505 22:14:05.940"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.935" endtime="20180505 22:14:05.940"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.935" endtime="20180505 22:14:05.940"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:14:05.941" level="INFO">${Wavelength} = 401.0</msg>
<status status="PASS" starttime="20180505 22:14:05.940" endtime="20180505 22:14:05.941"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:14:05.941" level="INFO">${slitWidth} = 0.5</msg>
<status status="PASS" starttime="20180505 22:14:05.941" endtime="20180505 22:14:05.941"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:54.425" endtime="20180505 22:14:05.941"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.941" endtime="20180505 22:14:05.942"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:14:05.942" level="INFO">Wavelength: 401.0</msg>
<msg timestamp="20180505 22:14:05.942" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:14:05.943" level="INFO">FrontExitWidth:0.5</msg>
<msg timestamp="20180505 22:14:05.943" level="INFO">FrontEntranceWidth:0.5</msg>
<status status="PASS" starttime="20180505 22:14:05.942" endtime="20180505 22:14:05.943"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:05.943" endtime="20180505 22:14:17.420"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.943" endtime="20180505 22:14:17.420"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.421" endtime="20180505 22:14:17.422"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:14:17.422" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:14:17.422" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3730&gt;</msg>
<status status="PASS" starttime="20180505 22:14:17.422" endtime="20180505 22:14:17.422"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:14:17.422" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:14:17.422" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86eca741f0&gt;</msg>
<status status="PASS" starttime="20180505 22:14:17.422" endtime="20180505 22:14:17.423"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.423" endtime="20180505 22:14:17.423"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.423" endtime="20180505 22:14:17.423"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.423" endtime="20180505 22:14:17.424"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:17.425" level="INFO">${value} = 0.49770000000000003</msg>
<status status="PASS" starttime="20180505 22:14:17.425" endtime="20180505 22:14:17.425"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:17.426" level="INFO">${ExpectedValue} = 0.5</msg>
<status status="PASS" starttime="20180505 22:14:17.425" endtime="20180505 22:14:17.426"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:17.426" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:17.426" level="INFO">Value: 0.49770000000000003</msg>
<msg timestamp="20180505 22:14:17.426" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:17.427" level="INFO">Expected Value: 0.5</msg>
<status status="PASS" starttime="20180505 22:14:17.426" endtime="20180505 22:14:17.427"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:17.427" level="INFO">${high} = 0.51</msg>
<status status="PASS" starttime="20180505 22:14:17.427" endtime="20180505 22:14:17.427"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:17.428" level="INFO">${low} = 0.49</msg>
<status status="PASS" starttime="20180505 22:14:17.427" endtime="20180505 22:14:17.428"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.428" endtime="20180505 22:14:17.428"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.428" endtime="20180505 22:14:17.429"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.424" endtime="20180505 22:14:17.429"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.424" endtime="20180505 22:14:17.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:17.430" level="INFO">${value} = 0.49770000000000003</msg>
<status status="PASS" starttime="20180505 22:14:17.430" endtime="20180505 22:14:17.430"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:17.431" level="INFO">${ExpectedValue} = 0.5</msg>
<status status="PASS" starttime="20180505 22:14:17.430" endtime="20180505 22:14:17.431"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:17.431" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:17.431" level="INFO">Value: 0.49770000000000003</msg>
<msg timestamp="20180505 22:14:17.431" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:17.431" level="INFO">Expected Value: 0.5</msg>
<status status="PASS" starttime="20180505 22:14:17.431" endtime="20180505 22:14:17.431"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:17.432" level="INFO">${high} = 0.51</msg>
<status status="PASS" starttime="20180505 22:14:17.431" endtime="20180505 22:14:17.432"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:17.432" level="INFO">${low} = 0.49</msg>
<status status="PASS" starttime="20180505 22:14:17.432" endtime="20180505 22:14:17.432"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.432" endtime="20180505 22:14:17.433"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.433" endtime="20180505 22:14:17.433"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.429" endtime="20180505 22:14:17.433"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.429" endtime="20180505 22:14:17.433"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.421" endtime="20180505 22:14:17.433"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.420" endtime="20180505 22:14:17.433"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.434" endtime="20180505 22:14:17.434"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:17.434" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:17.434" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e9ff1ae8&gt;</msg>
<status status="PASS" starttime="20180505 22:14:17.434" endtime="20180505 22:14:17.434"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.435" endtime="20180505 22:14:17.435"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:17.435" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:17.435" endtime="20180505 22:14:17.435"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:17.436" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:17.436" endtime="20180505 22:14:17.436"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:17.436" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:14:17.436" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:14:17.436" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:17.436" endtime="20180505 22:14:17.436"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.436" endtime="20180505 22:14:17.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.435" endtime="20180505 22:14:17.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.434" endtime="20180505 22:14:17.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.433" endtime="20180505 22:14:17.437"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.438" endtime="20180505 22:14:17.438"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:17.438" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:17.439" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cff8b8&gt;</msg>
<status status="PASS" starttime="20180505 22:14:17.438" endtime="20180505 22:14:17.439"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.439" endtime="20180505 22:14:17.439"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:17.440" level="INFO">${value} = 400.9999</msg>
<status status="PASS" starttime="20180505 22:14:17.439" endtime="20180505 22:14:17.440"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:17.440" level="INFO">${ExpectedValue} = 401.0</msg>
<status status="PASS" starttime="20180505 22:14:17.440" endtime="20180505 22:14:17.440"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:17.440" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:14:17.440" level="INFO">Value: 400.9999</msg>
<msg timestamp="20180505 22:14:17.440" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:14:17.441" level="INFO">Expected Value: 401.0</msg>
<status status="PASS" starttime="20180505 22:14:17.440" endtime="20180505 22:14:17.441"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:17.441" level="INFO">${high} = 402.0</msg>
<status status="PASS" starttime="20180505 22:14:17.441" endtime="20180505 22:14:17.441"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:17.441" level="INFO">${low} = 400.0</msg>
<status status="PASS" starttime="20180505 22:14:17.441" endtime="20180505 22:14:17.441"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.442" endtime="20180505 22:14:17.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.442" endtime="20180505 22:14:17.442"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.439" endtime="20180505 22:14:17.443"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.438" endtime="20180505 22:14:17.443"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.437" endtime="20180505 22:14:17.443"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:14:17.443" level="INFO">${Wavelength} = 402.0</msg>
<status status="PASS" starttime="20180505 22:14:17.443" endtime="20180505 22:14:17.443"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:14:17.444" level="INFO">${slitWidth} = 1.0</msg>
<status status="PASS" starttime="20180505 22:14:17.443" endtime="20180505 22:14:17.444"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:05.941" endtime="20180505 22:14:17.444"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.444" endtime="20180505 22:14:17.444"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:14:17.444" level="INFO">Wavelength: 402.0</msg>
<msg timestamp="20180505 22:14:17.444" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:14:17.444" level="INFO">FrontExitWidth:1.0</msg>
<msg timestamp="20180505 22:14:17.444" level="INFO">FrontEntranceWidth:1.0</msg>
<status status="PASS" starttime="20180505 22:14:17.444" endtime="20180505 22:14:17.445"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:17.445" endtime="20180505 22:14:28.977"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.445" endtime="20180505 22:14:28.977"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.979" endtime="20180505 22:14:28.979"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:14:28.979" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:14:28.979" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cc3928&gt;</msg>
<status status="PASS" starttime="20180505 22:14:28.979" endtime="20180505 22:14:28.979"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:14:28.979" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:14:28.980" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffdd50&gt;</msg>
<status status="PASS" starttime="20180505 22:14:28.979" endtime="20180505 22:14:28.980"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.980" endtime="20180505 22:14:28.980"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.980" endtime="20180505 22:14:28.980"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.980" endtime="20180505 22:14:28.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:28.982" level="INFO">${value} = 0.9954000000000001</msg>
<status status="PASS" starttime="20180505 22:14:28.981" endtime="20180505 22:14:28.982"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:28.982" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:14:28.982" endtime="20180505 22:14:28.982"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:28.982" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:28.982" level="INFO">Value: 0.9954000000000001</msg>
<msg timestamp="20180505 22:14:28.983" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:28.983" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:14:28.982" endtime="20180505 22:14:28.983"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:28.983" level="INFO">${high} = 1.01</msg>
<status status="PASS" starttime="20180505 22:14:28.983" endtime="20180505 22:14:28.983"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:28.983" level="INFO">${low} = 0.99</msg>
<status status="PASS" starttime="20180505 22:14:28.983" endtime="20180505 22:14:28.984"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.984" endtime="20180505 22:14:28.984"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.984" endtime="20180505 22:14:28.984"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.981" endtime="20180505 22:14:28.984"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.980" endtime="20180505 22:14:28.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:28.986" level="INFO">${value} = 0.9954000000000001</msg>
<status status="PASS" starttime="20180505 22:14:28.986" endtime="20180505 22:14:28.986"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:28.986" level="INFO">${ExpectedValue} = 1.0</msg>
<status status="PASS" starttime="20180505 22:14:28.986" endtime="20180505 22:14:28.986"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:28.987" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:28.987" level="INFO">Value: 0.9954000000000001</msg>
<msg timestamp="20180505 22:14:28.987" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:28.987" level="INFO">Expected Value: 1.0</msg>
<status status="PASS" starttime="20180505 22:14:28.987" endtime="20180505 22:14:28.987"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:28.987" level="INFO">${high} = 1.01</msg>
<status status="PASS" starttime="20180505 22:14:28.987" endtime="20180505 22:14:28.988"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:28.988" level="INFO">${low} = 0.99</msg>
<status status="PASS" starttime="20180505 22:14:28.988" endtime="20180505 22:14:28.988"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.988" endtime="20180505 22:14:28.988"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.989" endtime="20180505 22:14:28.989"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.985" endtime="20180505 22:14:28.989"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.985" endtime="20180505 22:14:28.989"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.978" endtime="20180505 22:14:28.989"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.978" endtime="20180505 22:14:28.989"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.990" endtime="20180505 22:14:28.990"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:28.990" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:28.990" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ea005848&gt;</msg>
<status status="PASS" starttime="20180505 22:14:28.990" endtime="20180505 22:14:28.990"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.990" endtime="20180505 22:14:28.991"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:28.992" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:28.991" endtime="20180505 22:14:28.992"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:28.992" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:28.992" endtime="20180505 22:14:28.992"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:28.992" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:14:28.993" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:14:28.993" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:28.992" endtime="20180505 22:14:28.993"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.993" endtime="20180505 22:14:28.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.991" endtime="20180505 22:14:28.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.989" endtime="20180505 22:14:28.993"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.989" endtime="20180505 22:14:28.993"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.994" endtime="20180505 22:14:28.994"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:28.994" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:28.994" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ecbb3618&gt;</msg>
<status status="PASS" starttime="20180505 22:14:28.994" endtime="20180505 22:14:28.995"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.995" endtime="20180505 22:14:28.995"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:28.996" level="INFO">${value} = 401.999</msg>
<status status="PASS" starttime="20180505 22:14:28.995" endtime="20180505 22:14:28.996"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:28.996" level="INFO">${ExpectedValue} = 402.0</msg>
<status status="PASS" starttime="20180505 22:14:28.996" endtime="20180505 22:14:28.996"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:28.996" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:14:28.997" level="INFO">Value: 401.999</msg>
<msg timestamp="20180505 22:14:28.997" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:14:28.997" level="INFO">Expected Value: 402.0</msg>
<status status="PASS" starttime="20180505 22:14:28.996" endtime="20180505 22:14:28.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:28.997" level="INFO">${high} = 403.0</msg>
<status status="PASS" starttime="20180505 22:14:28.997" endtime="20180505 22:14:28.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:28.998" level="INFO">${low} = 401.0</msg>
<status status="PASS" starttime="20180505 22:14:28.997" endtime="20180505 22:14:28.998"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.998" endtime="20180505 22:14:28.998"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:28.998" endtime="20180505 22:14:28.999"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.995" endtime="20180505 22:14:28.999"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.994" endtime="20180505 22:14:28.999"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:28.993" endtime="20180505 22:14:28.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:14:28.999" level="INFO">${Wavelength} = 403.0</msg>
<status status="PASS" starttime="20180505 22:14:28.999" endtime="20180505 22:14:28.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:14:29.000" level="INFO">${slitWidth} = 1.5</msg>
<status status="PASS" starttime="20180505 22:14:29.000" endtime="20180505 22:14:29.000"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:17.444" endtime="20180505 22:14:29.000"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:29.000" endtime="20180505 22:14:29.000"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:14:29.001" level="INFO">Wavelength: 403.0</msg>
<msg timestamp="20180505 22:14:29.001" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:14:29.001" level="INFO">FrontExitWidth:1.5</msg>
<msg timestamp="20180505 22:14:29.001" level="INFO">FrontEntranceWidth:1.5</msg>
<status status="PASS" starttime="20180505 22:14:29.001" endtime="20180505 22:14:29.001"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:29.001" endtime="20180505 22:14:40.495"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:29.001" endtime="20180505 22:14:40.495"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.496" endtime="20180505 22:14:40.497"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:14:40.497" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:14:40.497" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbcba40&gt;</msg>
<status status="PASS" starttime="20180505 22:14:40.497" endtime="20180505 22:14:40.497"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:14:40.497" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:14:40.497" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e9ffa8b8&gt;</msg>
<status status="PASS" starttime="20180505 22:14:40.497" endtime="20180505 22:14:40.498"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.498" endtime="20180505 22:14:40.498"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.498" endtime="20180505 22:14:40.498"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.498" endtime="20180505 22:14:40.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:40.500" level="INFO">${value} = 1.4978</msg>
<status status="PASS" starttime="20180505 22:14:40.500" endtime="20180505 22:14:40.500"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:40.500" level="INFO">${ExpectedValue} = 1.5</msg>
<status status="PASS" starttime="20180505 22:14:40.500" endtime="20180505 22:14:40.500"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:40.501" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:40.501" level="INFO">Value: 1.4978</msg>
<msg timestamp="20180505 22:14:40.501" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:40.501" level="INFO">Expected Value: 1.5</msg>
<status status="PASS" starttime="20180505 22:14:40.500" endtime="20180505 22:14:40.501"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:40.501" level="INFO">${high} = 1.51</msg>
<status status="PASS" starttime="20180505 22:14:40.501" endtime="20180505 22:14:40.501"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:40.502" level="INFO">${low} = 1.49</msg>
<status status="PASS" starttime="20180505 22:14:40.501" endtime="20180505 22:14:40.502"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.502" endtime="20180505 22:14:40.502"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.502" endtime="20180505 22:14:40.502"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.499" endtime="20180505 22:14:40.503"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.498" endtime="20180505 22:14:40.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:40.504" level="INFO">${value} = 1.4978</msg>
<status status="PASS" starttime="20180505 22:14:40.504" endtime="20180505 22:14:40.504"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:40.504" level="INFO">${ExpectedValue} = 1.5</msg>
<status status="PASS" starttime="20180505 22:14:40.504" endtime="20180505 22:14:40.504"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:40.505" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:40.505" level="INFO">Value: 1.4978</msg>
<msg timestamp="20180505 22:14:40.505" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:40.505" level="INFO">Expected Value: 1.5</msg>
<status status="PASS" starttime="20180505 22:14:40.504" endtime="20180505 22:14:40.505"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:40.505" level="INFO">${high} = 1.51</msg>
<status status="PASS" starttime="20180505 22:14:40.505" endtime="20180505 22:14:40.505"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:40.506" level="INFO">${low} = 1.49</msg>
<status status="PASS" starttime="20180505 22:14:40.506" endtime="20180505 22:14:40.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.506" endtime="20180505 22:14:40.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.506" endtime="20180505 22:14:40.507"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.503" endtime="20180505 22:14:40.507"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.503" endtime="20180505 22:14:40.507"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.496" endtime="20180505 22:14:40.507"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.496" endtime="20180505 22:14:40.507"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.508" endtime="20180505 22:14:40.508"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:40.508" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:40.508" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ea005570&gt;</msg>
<status status="PASS" starttime="20180505 22:14:40.508" endtime="20180505 22:14:40.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.508" endtime="20180505 22:14:40.509"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:40.509" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:40.509" endtime="20180505 22:14:40.509"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:40.510" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:40.510" endtime="20180505 22:14:40.510"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:40.510" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:14:40.510" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:14:40.510" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:40.510" endtime="20180505 22:14:40.510"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.510" endtime="20180505 22:14:40.511"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.509" endtime="20180505 22:14:40.511"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.507" endtime="20180505 22:14:40.511"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.507" endtime="20180505 22:14:40.511"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.511" endtime="20180505 22:14:40.512"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:40.512" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:40.512" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cc8768&gt;</msg>
<status status="PASS" starttime="20180505 22:14:40.512" endtime="20180505 22:14:40.512"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.512" endtime="20180505 22:14:40.513"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:40.513" level="INFO">${value} = 403.00010000000003</msg>
<status status="PASS" starttime="20180505 22:14:40.513" endtime="20180505 22:14:40.513"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:40.514" level="INFO">${ExpectedValue} = 403.0</msg>
<status status="PASS" starttime="20180505 22:14:40.514" endtime="20180505 22:14:40.514"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:40.514" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:14:40.514" level="INFO">Value: 403.00010000000003</msg>
<msg timestamp="20180505 22:14:40.514" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:14:40.514" level="INFO">Expected Value: 403.0</msg>
<status status="PASS" starttime="20180505 22:14:40.514" endtime="20180505 22:14:40.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:40.515" level="INFO">${high} = 404.0</msg>
<status status="PASS" starttime="20180505 22:14:40.515" endtime="20180505 22:14:40.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:40.515" level="INFO">${low} = 402.0</msg>
<status status="PASS" starttime="20180505 22:14:40.515" endtime="20180505 22:14:40.515"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.516" endtime="20180505 22:14:40.516"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.516" endtime="20180505 22:14:40.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.513" endtime="20180505 22:14:40.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.511" endtime="20180505 22:14:40.516"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.511" endtime="20180505 22:14:40.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:14:40.517" level="INFO">${Wavelength} = 404.0</msg>
<status status="PASS" starttime="20180505 22:14:40.517" endtime="20180505 22:14:40.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:14:40.517" level="INFO">${slitWidth} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:40.517" endtime="20180505 22:14:40.517"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:29.000" endtime="20180505 22:14:40.517"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.518" endtime="20180505 22:14:40.518"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:14:40.518" level="INFO">Wavelength: 404.0</msg>
<msg timestamp="20180505 22:14:40.518" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:14:40.518" level="INFO">FrontExitWidth:2.0</msg>
<msg timestamp="20180505 22:14:40.518" level="INFO">FrontEntranceWidth:2.0</msg>
<status status="PASS" starttime="20180505 22:14:40.518" endtime="20180505 22:14:40.519"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:40.519" endtime="20180505 22:14:52.026"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.519" endtime="20180505 22:14:52.027"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.027" endtime="20180505 22:14:52.027"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:14:52.028" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:14:52.028" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cff650&gt;</msg>
<status status="PASS" starttime="20180505 22:14:52.028" endtime="20180505 22:14:52.028"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:14:52.028" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:14:52.028" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cffbc8&gt;</msg>
<status status="PASS" starttime="20180505 22:14:52.028" endtime="20180505 22:14:52.028"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.028" endtime="20180505 22:14:52.029"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.029" endtime="20180505 22:14:52.029"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.029" endtime="20180505 22:14:52.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:52.030" level="INFO">${value} = 1.9955</msg>
<status status="PASS" starttime="20180505 22:14:52.030" endtime="20180505 22:14:52.030"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:52.031" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.030" endtime="20180505 22:14:52.031"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:52.031" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:52.031" level="INFO">Value: 1.9955</msg>
<msg timestamp="20180505 22:14:52.031" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:52.031" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.031" endtime="20180505 22:14:52.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:52.032" level="INFO">${high} = 2.01</msg>
<status status="PASS" starttime="20180505 22:14:52.031" endtime="20180505 22:14:52.032"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:52.032" level="INFO">${low} = 1.99</msg>
<status status="PASS" starttime="20180505 22:14:52.032" endtime="20180505 22:14:52.032"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.033" endtime="20180505 22:14:52.033"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.033" endtime="20180505 22:14:52.034"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.030" endtime="20180505 22:14:52.034"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.029" endtime="20180505 22:14:52.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:52.035" level="INFO">${value} = 1.9955</msg>
<status status="PASS" starttime="20180505 22:14:52.035" endtime="20180505 22:14:52.035"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:52.035" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.035" endtime="20180505 22:14:52.035"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:52.036" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:14:52.036" level="INFO">Value: 1.9955</msg>
<msg timestamp="20180505 22:14:52.036" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:14:52.036" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.035" endtime="20180505 22:14:52.036"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:52.036" level="INFO">${high} = 2.01</msg>
<status status="PASS" starttime="20180505 22:14:52.036" endtime="20180505 22:14:52.036"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:52.037" level="INFO">${low} = 1.99</msg>
<status status="PASS" starttime="20180505 22:14:52.037" endtime="20180505 22:14:52.037"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.037" endtime="20180505 22:14:52.037"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.037" endtime="20180505 22:14:52.038"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.034" endtime="20180505 22:14:52.038"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.034" endtime="20180505 22:14:52.038"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.027" endtime="20180505 22:14:52.038"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.027" endtime="20180505 22:14:52.038"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.039" endtime="20180505 22:14:52.039"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:52.039" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:52.039" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ecac8c38&gt;</msg>
<status status="PASS" starttime="20180505 22:14:52.039" endtime="20180505 22:14:52.039"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.039" endtime="20180505 22:14:52.039"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:52.040" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.040" endtime="20180505 22:14:52.040"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:52.041" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.040" endtime="20180505 22:14:52.041"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:52.041" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:14:52.041" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:14:52.041" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:14:52.041" endtime="20180505 22:14:52.041"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.041" endtime="20180505 22:14:52.042"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.039" endtime="20180505 22:14:52.042"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.038" endtime="20180505 22:14:52.042"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.038" endtime="20180505 22:14:52.042"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.042" endtime="20180505 22:14:52.043"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:14:52.043" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:14:52.043" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ea001148&gt;</msg>
<status status="PASS" starttime="20180505 22:14:52.043" endtime="20180505 22:14:52.043"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.043" endtime="20180505 22:14:52.044"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:14:52.045" level="INFO">${value} = 404.0011</msg>
<status status="PASS" starttime="20180505 22:14:52.044" endtime="20180505 22:14:52.045"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:14:52.045" level="INFO">${ExpectedValue} = 404.0</msg>
<status status="PASS" starttime="20180505 22:14:52.045" endtime="20180505 22:14:52.045"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:14:52.045" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:14:52.045" level="INFO">Value: 404.0011</msg>
<msg timestamp="20180505 22:14:52.046" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:14:52.046" level="INFO">Expected Value: 404.0</msg>
<status status="PASS" starttime="20180505 22:14:52.045" endtime="20180505 22:14:52.046"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:14:52.046" level="INFO">${high} = 405.0</msg>
<status status="PASS" starttime="20180505 22:14:52.046" endtime="20180505 22:14:52.046"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:14:52.047" level="INFO">${low} = 403.0</msg>
<status status="PASS" starttime="20180505 22:14:52.047" endtime="20180505 22:14:52.047"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.047" endtime="20180505 22:14:52.047"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.047" endtime="20180505 22:14:52.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.044" endtime="20180505 22:14:52.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.042" endtime="20180505 22:14:52.048"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.042" endtime="20180505 22:14:52.048"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:14:52.048" level="INFO">${Wavelength} = 405.0</msg>
<status status="PASS" starttime="20180505 22:14:52.048" endtime="20180505 22:14:52.048"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:14:52.049" level="INFO">${slitWidth} = 2.5</msg>
<status status="PASS" starttime="20180505 22:14:52.049" endtime="20180505 22:14:52.049"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:40.517" endtime="20180505 22:14:52.049"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.049" endtime="20180505 22:14:52.049"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:14:52.050" level="INFO">Wavelength: 405.0</msg>
<msg timestamp="20180505 22:14:52.050" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:14:52.050" level="INFO">FrontExitWidth:2.5</msg>
<msg timestamp="20180505 22:14:52.050" level="INFO">FrontEntranceWidth:2.5</msg>
<status status="PASS" starttime="20180505 22:14:52.049" endtime="20180505 22:14:52.050"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:14:52.050" endtime="20180505 22:15:03.605"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.050" endtime="20180505 22:15:03.606"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.606" endtime="20180505 22:15:03.607"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:15:03.607" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:15:03.607" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecba3ea0&gt;</msg>
<status status="PASS" starttime="20180505 22:15:03.607" endtime="20180505 22:15:03.607"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:15:03.607" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:15:03.607" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbcb490&gt;</msg>
<status status="PASS" starttime="20180505 22:15:03.607" endtime="20180505 22:15:03.607"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.608" endtime="20180505 22:15:03.608"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.608" endtime="20180505 22:15:03.608"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.608" endtime="20180505 22:15:03.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:03.609" level="INFO">${value} = 2.498</msg>
<status status="PASS" starttime="20180505 22:15:03.609" endtime="20180505 22:15:03.609"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:03.610" level="INFO">${ExpectedValue} = 2.5</msg>
<status status="PASS" starttime="20180505 22:15:03.610" endtime="20180505 22:15:03.610"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:03.610" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:03.610" level="INFO">Value: 2.498</msg>
<msg timestamp="20180505 22:15:03.610" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:03.610" level="INFO">Expected Value: 2.5</msg>
<status status="PASS" starttime="20180505 22:15:03.610" endtime="20180505 22:15:03.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:03.611" level="INFO">${high} = 2.51</msg>
<status status="PASS" starttime="20180505 22:15:03.610" endtime="20180505 22:15:03.611"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:03.611" level="INFO">${low} = 2.49</msg>
<status status="PASS" starttime="20180505 22:15:03.611" endtime="20180505 22:15:03.611"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.611" endtime="20180505 22:15:03.612"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.612" endtime="20180505 22:15:03.612"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.609" endtime="20180505 22:15:03.612"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.608" endtime="20180505 22:15:03.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:03.614" level="INFO">${value} = 2.498</msg>
<status status="PASS" starttime="20180505 22:15:03.613" endtime="20180505 22:15:03.614"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:03.614" level="INFO">${ExpectedValue} = 2.5</msg>
<status status="PASS" starttime="20180505 22:15:03.614" endtime="20180505 22:15:03.614"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:03.614" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:03.615" level="INFO">Value: 2.498</msg>
<msg timestamp="20180505 22:15:03.615" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:03.615" level="INFO">Expected Value: 2.5</msg>
<status status="PASS" starttime="20180505 22:15:03.614" endtime="20180505 22:15:03.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:03.615" level="INFO">${high} = 2.51</msg>
<status status="PASS" starttime="20180505 22:15:03.615" endtime="20180505 22:15:03.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:03.615" level="INFO">${low} = 2.49</msg>
<status status="PASS" starttime="20180505 22:15:03.615" endtime="20180505 22:15:03.616"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.616" endtime="20180505 22:15:03.616"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.616" endtime="20180505 22:15:03.616"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.613" endtime="20180505 22:15:03.617"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.612" endtime="20180505 22:15:03.617"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.606" endtime="20180505 22:15:03.617"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.606" endtime="20180505 22:15:03.617"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.617" endtime="20180505 22:15:03.617"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:03.618" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:03.618" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ecbcbc00&gt;</msg>
<status status="PASS" starttime="20180505 22:15:03.618" endtime="20180505 22:15:03.618"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.618" endtime="20180505 22:15:03.618"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:03.619" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:03.619" endtime="20180505 22:15:03.619"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:03.619" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:03.619" endtime="20180505 22:15:03.619"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:03.620" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:15:03.620" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:15:03.620" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:15:03.619" endtime="20180505 22:15:03.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.620" endtime="20180505 22:15:03.620"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.618" endtime="20180505 22:15:03.620"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.617" endtime="20180505 22:15:03.620"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.617" endtime="20180505 22:15:03.621"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.621" endtime="20180505 22:15:03.621"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:03.622" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:03.622" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8cce9d0&gt;</msg>
<status status="PASS" starttime="20180505 22:15:03.621" endtime="20180505 22:15:03.622"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.622" endtime="20180505 22:15:03.622"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:03.623" level="INFO">${value} = 404.9997</msg>
<status status="PASS" starttime="20180505 22:15:03.623" endtime="20180505 22:15:03.623"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:03.624" level="INFO">${ExpectedValue} = 405.0</msg>
<status status="PASS" starttime="20180505 22:15:03.623" endtime="20180505 22:15:03.624"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:03.624" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:15:03.624" level="INFO">Value: 404.9997</msg>
<msg timestamp="20180505 22:15:03.624" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:15:03.624" level="INFO">Expected Value: 405.0</msg>
<status status="PASS" starttime="20180505 22:15:03.624" endtime="20180505 22:15:03.624"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:03.625" level="INFO">${high} = 406.0</msg>
<status status="PASS" starttime="20180505 22:15:03.624" endtime="20180505 22:15:03.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:03.625" level="INFO">${low} = 404.0</msg>
<status status="PASS" starttime="20180505 22:15:03.625" endtime="20180505 22:15:03.625"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.625" endtime="20180505 22:15:03.625"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.626" endtime="20180505 22:15:03.626"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.622" endtime="20180505 22:15:03.626"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.621" endtime="20180505 22:15:03.626"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.621" endtime="20180505 22:15:03.626"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:15:03.626" level="INFO">${Wavelength} = 406.0</msg>
<status status="PASS" starttime="20180505 22:15:03.626" endtime="20180505 22:15:03.626"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:15:03.627" level="INFO">${slitWidth} = 3.0</msg>
<status status="PASS" starttime="20180505 22:15:03.626" endtime="20180505 22:15:03.627"></status>
</kw>
<status status="PASS" starttime="20180505 22:14:52.049" endtime="20180505 22:15:03.627"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.627" endtime="20180505 22:15:03.627"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:15:03.628" level="INFO">Wavelength: 406.0</msg>
<msg timestamp="20180505 22:15:03.628" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:15:03.628" level="INFO">FrontExitWidth:3.0</msg>
<msg timestamp="20180505 22:15:03.628" level="INFO">FrontEntranceWidth:3.0</msg>
<status status="PASS" starttime="20180505 22:15:03.627" endtime="20180505 22:15:03.628"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:03.628" endtime="20180505 22:15:15.095"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.628" endtime="20180505 22:15:15.095"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.096" endtime="20180505 22:15:15.096"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:15:15.097" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:15:15.097" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce810&gt;</msg>
<status status="PASS" starttime="20180505 22:15:15.097" endtime="20180505 22:15:15.097"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:15:15.097" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:15:15.097" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8cce6f8&gt;</msg>
<status status="PASS" starttime="20180505 22:15:15.097" endtime="20180505 22:15:15.097"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.097" endtime="20180505 22:15:15.098"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.098" endtime="20180505 22:15:15.098"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.098" endtime="20180505 22:15:15.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:15.100" level="INFO">${value} = 2.9957000000000003</msg>
<status status="PASS" starttime="20180505 22:15:15.100" endtime="20180505 22:15:15.100"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:15.100" level="INFO">${ExpectedValue} = 3.0</msg>
<status status="PASS" starttime="20180505 22:15:15.100" endtime="20180505 22:15:15.100"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:15.101" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:15.101" level="INFO">Value: 2.9957000000000003</msg>
<msg timestamp="20180505 22:15:15.101" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:15.101" level="INFO">Expected Value: 3.0</msg>
<status status="PASS" starttime="20180505 22:15:15.101" endtime="20180505 22:15:15.101"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:15.102" level="INFO">${high} = 3.01</msg>
<status status="PASS" starttime="20180505 22:15:15.101" endtime="20180505 22:15:15.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:15.102" level="INFO">${low} = 2.99</msg>
<status status="PASS" starttime="20180505 22:15:15.102" endtime="20180505 22:15:15.102"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.102" endtime="20180505 22:15:15.103"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.103" endtime="20180505 22:15:15.103"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.099" endtime="20180505 22:15:15.103"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.099" endtime="20180505 22:15:15.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:15.105" level="INFO">${value} = 2.9957000000000003</msg>
<status status="PASS" starttime="20180505 22:15:15.104" endtime="20180505 22:15:15.105"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:15.105" level="INFO">${ExpectedValue} = 3.0</msg>
<status status="PASS" starttime="20180505 22:15:15.105" endtime="20180505 22:15:15.105"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:15.106" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:15.106" level="INFO">Value: 2.9957000000000003</msg>
<msg timestamp="20180505 22:15:15.106" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:15.106" level="INFO">Expected Value: 3.0</msg>
<status status="PASS" starttime="20180505 22:15:15.105" endtime="20180505 22:15:15.106"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:15.106" level="INFO">${high} = 3.01</msg>
<status status="PASS" starttime="20180505 22:15:15.106" endtime="20180505 22:15:15.106"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:15.107" level="INFO">${low} = 2.99</msg>
<status status="PASS" starttime="20180505 22:15:15.107" endtime="20180505 22:15:15.107"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.107" endtime="20180505 22:15:15.107"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.107" endtime="20180505 22:15:15.108"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.104" endtime="20180505 22:15:15.108"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.104" endtime="20180505 22:15:15.108"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.096" endtime="20180505 22:15:15.108"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.095" endtime="20180505 22:15:15.108"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.109" endtime="20180505 22:15:15.109"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:15.110" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:15.110" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc8768&gt;</msg>
<status status="PASS" starttime="20180505 22:15:15.109" endtime="20180505 22:15:15.110"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.110" endtime="20180505 22:15:15.110"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:15.111" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:15.111" endtime="20180505 22:15:15.111"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:15.111" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:15.111" endtime="20180505 22:15:15.111"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:15.112" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:15:15.112" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:15:15.112" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:15:15.111" endtime="20180505 22:15:15.112"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.112" endtime="20180505 22:15:15.112"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.110" endtime="20180505 22:15:15.113"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.108" endtime="20180505 22:15:15.113"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.108" endtime="20180505 22:15:15.113"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.113" endtime="20180505 22:15:15.113"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:15.114" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:15.114" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8c8a490&gt;</msg>
<status status="PASS" starttime="20180505 22:15:15.114" endtime="20180505 22:15:15.114"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.114" endtime="20180505 22:15:15.114"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:15.115" level="INFO">${value} = 406.00030000000004</msg>
<status status="PASS" starttime="20180505 22:15:15.115" endtime="20180505 22:15:15.115"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:15.115" level="INFO">${ExpectedValue} = 406.0</msg>
<status status="PASS" starttime="20180505 22:15:15.115" endtime="20180505 22:15:15.115"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:15.116" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:15:15.116" level="INFO">Value: 406.00030000000004</msg>
<msg timestamp="20180505 22:15:15.116" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:15:15.116" level="INFO">Expected Value: 406.0</msg>
<status status="PASS" starttime="20180505 22:15:15.115" endtime="20180505 22:15:15.116"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:15.116" level="INFO">${high} = 407.0</msg>
<status status="PASS" starttime="20180505 22:15:15.116" endtime="20180505 22:15:15.116"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:15.117" level="INFO">${low} = 405.0</msg>
<status status="PASS" starttime="20180505 22:15:15.116" endtime="20180505 22:15:15.117"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.117" endtime="20180505 22:15:15.117"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.117" endtime="20180505 22:15:15.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.114" endtime="20180505 22:15:15.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.113" endtime="20180505 22:15:15.118"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.113" endtime="20180505 22:15:15.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:15:15.118" level="INFO">${Wavelength} = 407.0</msg>
<status status="PASS" starttime="20180505 22:15:15.118" endtime="20180505 22:15:15.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:15:15.119" level="INFO">${slitWidth} = 3.5</msg>
<status status="PASS" starttime="20180505 22:15:15.118" endtime="20180505 22:15:15.119"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:03.627" endtime="20180505 22:15:15.119"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.119" endtime="20180505 22:15:15.119"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:15:15.120" level="INFO">Wavelength: 407.0</msg>
<msg timestamp="20180505 22:15:15.120" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:15:15.120" level="INFO">FrontExitWidth:3.5</msg>
<msg timestamp="20180505 22:15:15.120" level="INFO">FrontEntranceWidth:3.5</msg>
<status status="PASS" starttime="20180505 22:15:15.119" endtime="20180505 22:15:15.120"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:15.120" endtime="20180505 22:15:26.602"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.120" endtime="20180505 22:15:26.602"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.603" endtime="20180505 22:15:26.603"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:15:26.603" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:15:26.603" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbb3618&gt;</msg>
<status status="PASS" starttime="20180505 22:15:26.603" endtime="20180505 22:15:26.603"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:15:26.604" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:15:26.604" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbb3e68&gt;</msg>
<status status="PASS" starttime="20180505 22:15:26.603" endtime="20180505 22:15:26.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.604" endtime="20180505 22:15:26.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.604" endtime="20180505 22:15:26.604"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.605" endtime="20180505 22:15:26.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:26.606" level="INFO">${value} = 3.4981</msg>
<status status="PASS" starttime="20180505 22:15:26.606" endtime="20180505 22:15:26.606"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:26.606" level="INFO">${ExpectedValue} = 3.5</msg>
<status status="PASS" starttime="20180505 22:15:26.606" endtime="20180505 22:15:26.606"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:26.607" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:26.607" level="INFO">Value: 3.4981</msg>
<msg timestamp="20180505 22:15:26.607" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:26.607" level="INFO">Expected Value: 3.5</msg>
<status status="PASS" starttime="20180505 22:15:26.607" endtime="20180505 22:15:26.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:26.608" level="INFO">${high} = 3.51</msg>
<status status="PASS" starttime="20180505 22:15:26.607" endtime="20180505 22:15:26.608"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:26.608" level="INFO">${low} = 3.49</msg>
<status status="PASS" starttime="20180505 22:15:26.608" endtime="20180505 22:15:26.608"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.608" endtime="20180505 22:15:26.608"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.608" endtime="20180505 22:15:26.609"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.605" endtime="20180505 22:15:26.609"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.605" endtime="20180505 22:15:26.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:26.610" level="INFO">${value} = 3.4981</msg>
<status status="PASS" starttime="20180505 22:15:26.610" endtime="20180505 22:15:26.610"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:26.611" level="INFO">${ExpectedValue} = 3.5</msg>
<status status="PASS" starttime="20180505 22:15:26.610" endtime="20180505 22:15:26.611"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:26.611" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:26.611" level="INFO">Value: 3.4981</msg>
<msg timestamp="20180505 22:15:26.611" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:26.611" level="INFO">Expected Value: 3.5</msg>
<status status="PASS" starttime="20180505 22:15:26.611" endtime="20180505 22:15:26.611"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:26.612" level="INFO">${high} = 3.51</msg>
<status status="PASS" starttime="20180505 22:15:26.611" endtime="20180505 22:15:26.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:26.613" level="INFO">${low} = 3.49</msg>
<status status="PASS" starttime="20180505 22:15:26.612" endtime="20180505 22:15:26.613"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.613" endtime="20180505 22:15:26.613"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.613" endtime="20180505 22:15:26.614"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.609" endtime="20180505 22:15:26.614"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.609" endtime="20180505 22:15:26.614"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.602" endtime="20180505 22:15:26.614"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.602" endtime="20180505 22:15:26.614"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.614" endtime="20180505 22:15:26.615"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:26.615" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:26.615" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86ecbb3688&gt;</msg>
<status status="PASS" starttime="20180505 22:15:26.615" endtime="20180505 22:15:26.615"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.615" endtime="20180505 22:15:26.615"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:26.616" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:26.616" endtime="20180505 22:15:26.616"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:26.616" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:26.616" endtime="20180505 22:15:26.616"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:26.617" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:15:26.617" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:15:26.617" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:15:26.616" endtime="20180505 22:15:26.617"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.617" endtime="20180505 22:15:26.617"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.615" endtime="20180505 22:15:26.618"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.614" endtime="20180505 22:15:26.618"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.614" endtime="20180505 22:15:26.618"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.618" endtime="20180505 22:15:26.618"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:26.619" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:26.619" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e8ccee68&gt;</msg>
<status status="PASS" starttime="20180505 22:15:26.619" endtime="20180505 22:15:26.619"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.619" endtime="20180505 22:15:26.619"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:26.620" level="INFO">${value} = 407.0007</msg>
<status status="PASS" starttime="20180505 22:15:26.620" endtime="20180505 22:15:26.620"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:26.620" level="INFO">${ExpectedValue} = 407.0</msg>
<status status="PASS" starttime="20180505 22:15:26.620" endtime="20180505 22:15:26.620"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:26.621" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:15:26.621" level="INFO">Value: 407.0007</msg>
<msg timestamp="20180505 22:15:26.621" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:15:26.621" level="INFO">Expected Value: 407.0</msg>
<status status="PASS" starttime="20180505 22:15:26.621" endtime="20180505 22:15:26.621"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:26.621" level="INFO">${high} = 408.0</msg>
<status status="PASS" starttime="20180505 22:15:26.621" endtime="20180505 22:15:26.621"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:26.622" level="INFO">${low} = 406.0</msg>
<status status="PASS" starttime="20180505 22:15:26.622" endtime="20180505 22:15:26.622"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.622" endtime="20180505 22:15:26.622"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.622" endtime="20180505 22:15:26.623"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.619" endtime="20180505 22:15:26.623"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.618" endtime="20180505 22:15:26.623"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.618" endtime="20180505 22:15:26.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:15:26.624" level="INFO">${Wavelength} = 408.0</msg>
<status status="PASS" starttime="20180505 22:15:26.623" endtime="20180505 22:15:26.624"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:15:26.624" level="INFO">${slitWidth} = 4.0</msg>
<status status="PASS" starttime="20180505 22:15:26.624" endtime="20180505 22:15:26.624"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:15.119" endtime="20180505 22:15:26.624"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.624" endtime="20180505 22:15:26.624"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:15:26.625" level="INFO">Wavelength: 408.0</msg>
<msg timestamp="20180505 22:15:26.625" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:15:26.625" level="INFO">FrontExitWidth:4.0</msg>
<msg timestamp="20180505 22:15:26.625" level="INFO">FrontEntranceWidth:4.0</msg>
<status status="PASS" starttime="20180505 22:15:26.624" endtime="20180505 22:15:26.625"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:26.625" endtime="20180505 22:15:38.010"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.625" endtime="20180505 22:15:38.010"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.011" endtime="20180505 22:15:38.011"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:15:38.012" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:15:38.012" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecba3ed8&gt;</msg>
<status status="PASS" starttime="20180505 22:15:38.011" endtime="20180505 22:15:38.012"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:15:38.012" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:15:38.012" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ea005b58&gt;</msg>
<status status="PASS" starttime="20180505 22:15:38.012" endtime="20180505 22:15:38.012"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.012" endtime="20180505 22:15:38.012"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.013" endtime="20180505 22:15:38.013"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.013" endtime="20180505 22:15:38.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:38.014" level="INFO">${value} = 3.9958</msg>
<status status="PASS" starttime="20180505 22:15:38.014" endtime="20180505 22:15:38.014"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:38.015" level="INFO">${ExpectedValue} = 4.0</msg>
<status status="PASS" starttime="20180505 22:15:38.015" endtime="20180505 22:15:38.015"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:38.015" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:38.015" level="INFO">Value: 3.9958</msg>
<msg timestamp="20180505 22:15:38.015" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:38.015" level="INFO">Expected Value: 4.0</msg>
<status status="PASS" starttime="20180505 22:15:38.015" endtime="20180505 22:15:38.015"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:38.016" level="INFO">${high} = 4.01</msg>
<status status="PASS" starttime="20180505 22:15:38.016" endtime="20180505 22:15:38.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:38.016" level="INFO">${low} = 3.99</msg>
<status status="PASS" starttime="20180505 22:15:38.016" endtime="20180505 22:15:38.016"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.016" endtime="20180505 22:15:38.017"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.017" endtime="20180505 22:15:38.017"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.014" endtime="20180505 22:15:38.017"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.013" endtime="20180505 22:15:38.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:38.018" level="INFO">${value} = 3.9958</msg>
<status status="PASS" starttime="20180505 22:15:38.018" endtime="20180505 22:15:38.018"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:38.019" level="INFO">${ExpectedValue} = 4.0</msg>
<status status="PASS" starttime="20180505 22:15:38.019" endtime="20180505 22:15:38.019"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:38.019" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:38.019" level="INFO">Value: 3.9958</msg>
<msg timestamp="20180505 22:15:38.020" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:38.020" level="INFO">Expected Value: 4.0</msg>
<status status="PASS" starttime="20180505 22:15:38.019" endtime="20180505 22:15:38.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:38.020" level="INFO">${high} = 4.01</msg>
<status status="PASS" starttime="20180505 22:15:38.020" endtime="20180505 22:15:38.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:38.020" level="INFO">${low} = 3.99</msg>
<status status="PASS" starttime="20180505 22:15:38.020" endtime="20180505 22:15:38.020"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.021" endtime="20180505 22:15:38.021"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.021" endtime="20180505 22:15:38.021"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.018" endtime="20180505 22:15:38.021"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.017" endtime="20180505 22:15:38.021"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.011" endtime="20180505 22:15:38.021"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.010" endtime="20180505 22:15:38.021"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.022" endtime="20180505 22:15:38.022"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:38.023" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:38.023" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8cc81f0&gt;</msg>
<status status="PASS" starttime="20180505 22:15:38.022" endtime="20180505 22:15:38.023"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.023" endtime="20180505 22:15:38.023"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:38.024" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:38.024" endtime="20180505 22:15:38.024"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:38.024" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:38.024" endtime="20180505 22:15:38.024"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:38.025" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:15:38.025" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:15:38.025" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:15:38.024" endtime="20180505 22:15:38.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.025" endtime="20180505 22:15:38.025"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.023" endtime="20180505 22:15:38.025"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.022" endtime="20180505 22:15:38.025"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.022" endtime="20180505 22:15:38.025"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.026" endtime="20180505 22:15:38.026"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:38.026" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:38.026" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ecbcb260&gt;</msg>
<status status="PASS" starttime="20180505 22:15:38.026" endtime="20180505 22:15:38.026"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.027" endtime="20180505 22:15:38.027"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:38.028" level="INFO">${value} = 408.0011</msg>
<status status="PASS" starttime="20180505 22:15:38.028" endtime="20180505 22:15:38.028"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:38.028" level="INFO">${ExpectedValue} = 408.0</msg>
<status status="PASS" starttime="20180505 22:15:38.028" endtime="20180505 22:15:38.029"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:38.029" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:15:38.029" level="INFO">Value: 408.0011</msg>
<msg timestamp="20180505 22:15:38.029" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:15:38.029" level="INFO">Expected Value: 408.0</msg>
<status status="PASS" starttime="20180505 22:15:38.029" endtime="20180505 22:15:38.029"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:38.030" level="INFO">${high} = 409.0</msg>
<status status="PASS" starttime="20180505 22:15:38.029" endtime="20180505 22:15:38.030"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:38.030" level="INFO">${low} = 407.0</msg>
<status status="PASS" starttime="20180505 22:15:38.030" endtime="20180505 22:15:38.030"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.030" endtime="20180505 22:15:38.030"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.031" endtime="20180505 22:15:38.031"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.027" endtime="20180505 22:15:38.031"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.026" endtime="20180505 22:15:38.031"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.026" endtime="20180505 22:15:38.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:15:38.031" level="INFO">${Wavelength} = 409.0</msg>
<status status="PASS" starttime="20180505 22:15:38.031" endtime="20180505 22:15:38.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:15:38.032" level="INFO">${slitWidth} = 4.5</msg>
<status status="PASS" starttime="20180505 22:15:38.032" endtime="20180505 22:15:38.032"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:26.624" endtime="20180505 22:15:38.032"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.032" endtime="20180505 22:15:38.032"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:15:38.033" level="INFO">Wavelength: 409.0</msg>
<msg timestamp="20180505 22:15:38.033" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:15:38.033" level="INFO">FrontExitWidth:4.5</msg>
<msg timestamp="20180505 22:15:38.033" level="INFO">FrontEntranceWidth:4.5</msg>
<status status="PASS" starttime="20180505 22:15:38.033" endtime="20180505 22:15:38.033"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:38.033" endtime="20180505 22:15:49.415"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.033" endtime="20180505 22:15:49.416"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.416" endtime="20180505 22:15:49.417"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:15:49.417" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:15:49.417" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86e8c8ae30&gt;</msg>
<status status="PASS" starttime="20180505 22:15:49.417" endtime="20180505 22:15:49.417"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:15:49.417" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:15:49.417" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecbb3fb8&gt;</msg>
<status status="PASS" starttime="20180505 22:15:49.417" endtime="20180505 22:15:49.417"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.417" endtime="20180505 22:15:49.418"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.418" endtime="20180505 22:15:49.418"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.418" endtime="20180505 22:15:49.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:49.420" level="INFO">${value} = 4.4983</msg>
<status status="PASS" starttime="20180505 22:15:49.419" endtime="20180505 22:15:49.420"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:49.420" level="INFO">${ExpectedValue} = 4.5</msg>
<status status="PASS" starttime="20180505 22:15:49.420" endtime="20180505 22:15:49.420"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:49.420" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:49.420" level="INFO">Value: 4.4983</msg>
<msg timestamp="20180505 22:15:49.421" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:49.421" level="INFO">Expected Value: 4.5</msg>
<status status="PASS" starttime="20180505 22:15:49.420" endtime="20180505 22:15:49.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:49.421" level="INFO">${high} = 4.51</msg>
<status status="PASS" starttime="20180505 22:15:49.421" endtime="20180505 22:15:49.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:49.421" level="INFO">${low} = 4.49</msg>
<status status="PASS" starttime="20180505 22:15:49.421" endtime="20180505 22:15:49.421"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.422" endtime="20180505 22:15:49.422"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.422" endtime="20180505 22:15:49.422"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.419" endtime="20180505 22:15:49.423"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.418" endtime="20180505 22:15:49.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:49.424" level="INFO">${value} = 4.4983</msg>
<status status="PASS" starttime="20180505 22:15:49.424" endtime="20180505 22:15:49.424"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:49.424" level="INFO">${ExpectedValue} = 4.5</msg>
<status status="PASS" starttime="20180505 22:15:49.424" endtime="20180505 22:15:49.424"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:49.425" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:15:49.425" level="INFO">Value: 4.4983</msg>
<msg timestamp="20180505 22:15:49.425" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:15:49.425" level="INFO">Expected Value: 4.5</msg>
<status status="PASS" starttime="20180505 22:15:49.424" endtime="20180505 22:15:49.425"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:49.425" level="INFO">${high} = 4.51</msg>
<status status="PASS" starttime="20180505 22:15:49.425" endtime="20180505 22:15:49.425"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:49.426" level="INFO">${low} = 4.49</msg>
<status status="PASS" starttime="20180505 22:15:49.425" endtime="20180505 22:15:49.426"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.426" endtime="20180505 22:15:49.426"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.427" endtime="20180505 22:15:49.427"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.423" endtime="20180505 22:15:49.427"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.423" endtime="20180505 22:15:49.427"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.416" endtime="20180505 22:15:49.427"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.416" endtime="20180505 22:15:49.427"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.428" endtime="20180505 22:15:49.428"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:49.428" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:49.428" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86aad93570&gt;</msg>
<status status="PASS" starttime="20180505 22:15:49.428" endtime="20180505 22:15:49.429"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.429" endtime="20180505 22:15:49.429"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:49.430" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:49.429" endtime="20180505 22:15:49.430"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:49.430" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:15:49.430" endtime="20180505 22:15:49.430"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:49.430" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:15:49.431" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:15:49.431" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:15:49.430" endtime="20180505 22:15:49.431"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.431" endtime="20180505 22:15:49.431"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.429" endtime="20180505 22:15:49.431"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.428" endtime="20180505 22:15:49.431"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.427" endtime="20180505 22:15:49.431"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.432" endtime="20180505 22:15:49.432"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:15:49.432" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:15:49.432" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86e9ff1a08&gt;</msg>
<status status="PASS" starttime="20180505 22:15:49.432" endtime="20180505 22:15:49.432"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.432" endtime="20180505 22:15:49.433"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:15:49.434" level="INFO">${value} = 408.9991</msg>
<status status="PASS" starttime="20180505 22:15:49.433" endtime="20180505 22:15:49.434"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:15:49.434" level="INFO">${ExpectedValue} = 409.0</msg>
<status status="PASS" starttime="20180505 22:15:49.434" endtime="20180505 22:15:49.434"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:15:49.434" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:15:49.434" level="INFO">Value: 408.9991</msg>
<msg timestamp="20180505 22:15:49.434" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:15:49.435" level="INFO">Expected Value: 409.0</msg>
<status status="PASS" starttime="20180505 22:15:49.434" endtime="20180505 22:15:49.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:15:49.435" level="INFO">${high} = 410.0</msg>
<status status="PASS" starttime="20180505 22:15:49.435" endtime="20180505 22:15:49.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:15:49.436" level="INFO">${low} = 408.0</msg>
<status status="PASS" starttime="20180505 22:15:49.435" endtime="20180505 22:15:49.436"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.436" endtime="20180505 22:15:49.436"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.436" endtime="20180505 22:15:49.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.433" endtime="20180505 22:15:49.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.432" endtime="20180505 22:15:49.437"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.431" endtime="20180505 22:15:49.437"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:15:49.437" level="INFO">${Wavelength} = 410.0</msg>
<status status="PASS" starttime="20180505 22:15:49.437" endtime="20180505 22:15:49.437"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:15:49.437" level="INFO">${slitWidth} = 5.0</msg>
<status status="PASS" starttime="20180505 22:15:49.437" endtime="20180505 22:15:49.438"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:38.032" endtime="20180505 22:15:49.438"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.438" endtime="20180505 22:15:49.438"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Wavelength: ${Wavelength}</arg>
<arg>grating:${grating}</arg>
<arg>FrontExitWidth:${slitWidth}</arg>
<arg>FrontEntranceWidth:${slitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:15:49.438" level="INFO">Wavelength: 410.0</msg>
<msg timestamp="20180505 22:15:49.438" level="INFO">grating:2</msg>
<msg timestamp="20180505 22:15:49.438" level="INFO">FrontExitWidth:5.0</msg>
<msg timestamp="20180505 22:15:49.439" level="INFO">FrontEntranceWidth:5.0</msg>
<status status="PASS" starttime="20180505 22:15:49.438" endtime="20180505 22:15:49.439"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Issue Update Monochromator Setup Command</arg>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Issue Update Monochromator Setup Command" library="atMonochromator_SAL">
<arguments>
<arg>${grating}</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
<arg>${Wavelength}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:15:49.439" endtime="20180505 22:16:00.807"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.439" endtime="20180505 22:16:00.807"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Two Slit Widths Value</arg>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Verify Two Slit Widths Value" library="monochromator_helpers">
<arguments>
<arg>${slitWidth}</arg>
<arg>${slitWidth}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every Slit width command triggers a Slit width</arg>
<arg>Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.808" endtime="20180505 22:16:00.808"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid1}</var>
<var>${data1}</var>
</assign>
<msg timestamp="20180505 22:16:00.808" level="INFO">${valid1} = True</msg>
<msg timestamp="20180505 22:16:00.808" level="INFO">${data1} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86aad93b90&gt;</msg>
<status status="PASS" starttime="20180505 22:16:00.808" endtime="20180505 22:16:00.808"></status>
</kw>
<kw name="Wait For Next Slit Width" library="atMonochromator_SAL">
<assign>
<var>${valid2}</var>
<var>${data2}</var>
</assign>
<msg timestamp="20180505 22:16:00.809" level="INFO">${valid2} = True</msg>
<msg timestamp="20180505 22:16:00.809" level="INFO">${data2} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SlitWidthC object at 0x7f86ecae0650&gt;</msg>
<status status="PASS" starttime="20180505 22:16:00.808" endtime="20180505 22:16:00.809"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid1}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.809" endtime="20180505 22:16:00.809"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid2}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.809" endtime="20180505 22:16:00.809"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify if slit is the same as the Slit received, if not, get event again</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.809" endtime="20180505 22:16:00.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data1.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data1.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:16:00.811" level="INFO">${value} = 4.996</msg>
<status status="PASS" starttime="20180505 22:16:00.811" endtime="20180505 22:16:00.811"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:16:00.811" level="INFO">${ExpectedValue} = 5.0</msg>
<status status="PASS" starttime="20180505 22:16:00.811" endtime="20180505 22:16:00.811"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:16:00.812" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:16:00.812" level="INFO">Value: 4.996</msg>
<msg timestamp="20180505 22:16:00.812" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:16:00.812" level="INFO">Expected Value: 5.0</msg>
<status status="PASS" starttime="20180505 22:16:00.811" endtime="20180505 22:16:00.812"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:16:00.812" level="INFO">${high} = 5.01</msg>
<status status="PASS" starttime="20180505 22:16:00.812" endtime="20180505 22:16:00.812"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:16:00.813" level="INFO">${low} = 4.99</msg>
<status status="PASS" starttime="20180505 22:16:00.813" endtime="20180505 22:16:00.813"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.813" endtime="20180505 22:16:00.813"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.813" endtime="20180505 22:16:00.814"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.810" endtime="20180505 22:16:00.814"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.810" endtime="20180505 22:16:00.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FrontExit} == ${data2.slit}</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
<arg>ELSE</arg>
<arg>Verify Irrational Value</arg>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedEntranceSlitWidth}</arg>
</arguments>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>SlitWidth</arg>
<arg>${data2.slitPosition}</arg>
<arg>${slitWidthTol}</arg>
<arg>${expectedExitSlitWidth}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:16:00.815" level="INFO">${value} = 4.996</msg>
<status status="PASS" starttime="20180505 22:16:00.815" endtime="20180505 22:16:00.815"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:16:00.816" level="INFO">${ExpectedValue} = 5.0</msg>
<status status="PASS" starttime="20180505 22:16:00.815" endtime="20180505 22:16:00.816"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:16:00.816" level="INFO">Attribute: SlitWidth</msg>
<msg timestamp="20180505 22:16:00.816" level="INFO">Value: 4.996</msg>
<msg timestamp="20180505 22:16:00.816" level="INFO">Tolerance: 0.01</msg>
<msg timestamp="20180505 22:16:00.816" level="INFO">Expected Value: 5.0</msg>
<status status="PASS" starttime="20180505 22:16:00.816" endtime="20180505 22:16:00.816"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:16:00.818" level="INFO">${high} = 5.01</msg>
<status status="PASS" starttime="20180505 22:16:00.817" endtime="20180505 22:16:00.818"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:16:00.818" level="INFO">${low} = 4.99</msg>
<status status="PASS" starttime="20180505 22:16:00.818" endtime="20180505 22:16:00.818"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.818" endtime="20180505 22:16:00.818"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.819" endtime="20180505 22:16:00.819"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.814" endtime="20180505 22:16:00.819"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.814" endtime="20180505 22:16:00.819"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.807" endtime="20180505 22:16:00.819"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.807" endtime="20180505 22:16:00.819"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Grating Value</arg>
<arg>${grating}</arg>
</arguments>
<kw name="Verify Grating Value" library="monochromator_helpers">
<arguments>
<arg>${grating}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change in grating command triggers a grating Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.820" endtime="20180505 22:16:00.820"></status>
</kw>
<kw name="Wait For Next Selected Grating" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:16:00.820" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:16:00.820" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SelectedGratingC object at 0x7f86e8c8a688&gt;</msg>
<status status="PASS" starttime="20180505 22:16:00.820" endtime="20180505 22:16:00.820"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.821" endtime="20180505 22:16:00.821"></status>
</kw>
<kw name="Verify Rational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, and then the expected value, in that order.</doc>
<arguments>
<arg>Grating</arg>
<arg>${data.gratingType}</arg>
<arg>${expectedGrating}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:16:00.821" level="INFO">${value} = 2.0</msg>
<status status="PASS" starttime="20180505 22:16:00.821" endtime="20180505 22:16:00.821"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:16:00.822" level="INFO">${ExpectedValue} = 2.0</msg>
<status status="PASS" starttime="20180505 22:16:00.822" endtime="20180505 22:16:00.822"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:16:00.822" level="INFO">Attribute: Grating</msg>
<msg timestamp="20180505 22:16:00.822" level="INFO">Value: 2.0</msg>
<msg timestamp="20180505 22:16:00.823" level="INFO">Expected Value: 2.0</msg>
<status status="PASS" starttime="20180505 22:16:00.822" endtime="20180505 22:16:00.823"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${value}</arg>
<arg>${ExpectedValue}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.823" endtime="20180505 22:16:00.823"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.821" endtime="20180505 22:16:00.823"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.820" endtime="20180505 22:16:00.823"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.819" endtime="20180505 22:16:00.823"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Wavelength Value</arg>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Verify Wavelength Value" library="monochromator_helpers">
<arguments>
<arg>${Wavelength}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every change wavelength command triggers a wavelength Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.824" endtime="20180505 22:16:00.824"></status>
</kw>
<kw name="Wait For Next Wavelength" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:16:00.824" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:16:00.824" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_WavelengthC object at 0x7f86ecba3dc0&gt;</msg>
<status status="PASS" starttime="20180505 22:16:00.824" endtime="20180505 22:16:00.824"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.825" endtime="20180505 22:16:00.825"></status>
</kw>
<kw name="Verify Irrational Value" library="common">
<doc>This keyword requires the name of the attribute, its value, the tolerance and then the expected value, in that order.</doc>
<arguments>
<arg>Wavelength</arg>
<arg>${data.wavelength}</arg>
<arg>${wavelengthTol}</arg>
<arg>${expectedWavelgength}</arg>
</arguments>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${value}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20180505 22:16:00.826" level="INFO">${value} = 409.999</msg>
<status status="PASS" starttime="20180505 22:16:00.825" endtime="20180505 22:16:00.826"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ExpectedValue}</arg>
<arg>${4}</arg>
</arguments>
<assign>
<var>${ExpectedValue}</var>
</assign>
<msg timestamp="20180505 22:16:00.826" level="INFO">${ExpectedValue} = 410.0</msg>
<status status="PASS" starttime="20180505 22:16:00.826" endtime="20180505 22:16:00.826"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>Attribute: ${attribute}</arg>
<arg>Value: ${value}</arg>
<arg>Tolerance: ${tolerance}</arg>
<arg>Expected Value: ${ExpectedValue}</arg>
</arguments>
<msg timestamp="20180505 22:16:00.826" level="INFO">Attribute: Wavelength</msg>
<msg timestamp="20180505 22:16:00.826" level="INFO">Value: 409.999</msg>
<msg timestamp="20180505 22:16:00.826" level="INFO">Tolerance: 1</msg>
<msg timestamp="20180505 22:16:00.826" level="INFO">Expected Value: 410.0</msg>
<status status="PASS" starttime="20180505 22:16:00.826" endtime="20180505 22:16:00.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} + ${tolerance}</arg>
</arguments>
<assign>
<var>${high}</var>
</assign>
<msg timestamp="20180505 22:16:00.827" level="INFO">${high} = 411.0</msg>
<status status="PASS" starttime="20180505 22:16:00.827" endtime="20180505 22:16:00.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ExpectedValue} - ${tolerance}</arg>
</arguments>
<assign>
<var>${low}</var>
</assign>
<msg timestamp="20180505 22:16:00.829" level="INFO">${low} = 409.0</msg>
<status status="PASS" starttime="20180505 22:16:00.828" endtime="20180505 22:16:00.829"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &lt;= ${high}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.829" endtime="20180505 22:16:00.829"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:00.829" endtime="20180505 22:16:00.830"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.825" endtime="20180505 22:16:00.830"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.823" endtime="20180505 22:16:00.830"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.823" endtime="20180505 22:16:00.830"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Wavelength} + ${DW}</arg>
</arguments>
<assign>
<var>${Wavelength}</var>
</assign>
<msg timestamp="20180505 22:16:00.830" level="INFO">${Wavelength} = 411.0</msg>
<status status="PASS" starttime="20180505 22:16:00.830" endtime="20180505 22:16:00.830"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${slitWidth} + ${DSlitWidth}</arg>
</arguments>
<assign>
<var>${slitWidth}</var>
</assign>
<msg timestamp="20180505 22:16:00.831" level="INFO">${slitWidth} = 5.5</msg>
<status status="PASS" starttime="20180505 22:16:00.830" endtime="20180505 22:16:00.831"></status>
</kw>
<status status="PASS" starttime="20180505 22:15:49.438" endtime="20180505 22:16:00.831"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${slitWidth} &gt; ${MaxSlitWidth}</arg>
</arguments>
<msg timestamp="20180505 22:16:00.831" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20180505 22:16:00.831" endtime="20180505 22:16:00.831"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:00.831" endtime="20180505 22:16:00.831"></status>
</kw>
<status status="PASS" starttime="20180505 22:13:54.408" endtime="20180505 22:16:00.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${delay}</arg>
</arguments>
<msg timestamp="20180505 22:16:04.843" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20180505 22:16:00.842" endtime="20180505 22:16:04.843"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:13:54.404" endtime="20180505 22:16:04.843" critical="yes"></status>
</test>
<test id="s1-t17" name="Disable Command - Cleanup">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Issue Disable Command.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:04.844" endtime="20180505 22:16:04.844"></status>
</kw>
<kw name="Issue Disable Command" library="atMonochromator_SAL">
<status status="PASS" starttime="20180505 22:16:04.844" endtime="20180505 22:16:16.237"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify system enters Disabled State.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:16.237" endtime="20180505 22:16:16.238"></status>
</kw>
<kw name="Verify Summary State Event" library="common">
<arguments>
<arg>${SummaryDisabled}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every sub-State transition triggers a Summary State Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:16.238" endtime="20180505 22:16:16.238"></status>
</kw>
<kw name="Get Event Summary State" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:16:16.239" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:16:16.239" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SummaryStateC object at 0x7f86e9ffde30&gt;</msg>
<status status="PASS" starttime="20180505 22:16:16.238" endtime="20180505 22:16:16.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.summaryState}</arg>
</arguments>
<msg timestamp="20180505 22:16:16.239" level="INFO">1</msg>
<status status="PASS" starttime="20180505 22:16:16.239" endtime="20180505 22:16:16.239"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:16.239" endtime="20180505 22:16:16.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${data.summaryState}</arg>
<arg>${expectedState}</arg>
</arguments>
<msg timestamp="20180505 22:16:16.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180505 22:16:16.240" endtime="20180505 22:16:16.240"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:16.238" endtime="20180505 22:16:16.240"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:16:04.843" endtime="20180505 22:16:16.240" critical="yes"></status>
</test>
<test id="s1-t18" name="Standby Command - Cleanup">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Issue Standby Command.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:16.241" endtime="20180505 22:16:16.241"></status>
</kw>
<kw name="Issue Standby Command" library="atMonochromator_SAL">
<status status="PASS" starttime="20180505 22:16:16.241" endtime="20180505 22:16:27.618"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify system enters Standby State.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:27.618" endtime="20180505 22:16:27.618"></status>
</kw>
<kw name="Verify Summary State Event" library="common">
<arguments>
<arg>${SummaryStandby}</arg>
</arguments>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Every sub-State transition triggers a Summary State Event.</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:27.619" endtime="20180505 22:16:27.619"></status>
</kw>
<kw name="Get Event Summary State" library="atMonochromator_SAL">
<assign>
<var>${valid}</var>
<var>${data}</var>
</assign>
<msg timestamp="20180505 22:16:27.619" level="INFO">${valid} = True</msg>
<msg timestamp="20180505 22:16:27.619" level="INFO">${data} = &lt;SALPY_atMonochromator.atMonochromator_logevent_SummaryStateC object at 0x7f86ecbcb2d0&gt;</msg>
<status status="PASS" starttime="20180505 22:16:27.619" endtime="20180505 22:16:27.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.summaryState}</arg>
</arguments>
<msg timestamp="20180505 22:16:27.619" level="INFO">5</msg>
<status status="PASS" starttime="20180505 22:16:27.619" endtime="20180505 22:16:27.619"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${valid}</arg>
</arguments>
<status status="PASS" starttime="20180505 22:16:27.620" endtime="20180505 22:16:27.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${data.summaryState}</arg>
<arg>${expectedState}</arg>
</arguments>
<msg timestamp="20180505 22:16:27.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180505 22:16:27.620" endtime="20180505 22:16:27.620"></status>
</kw>
<status status="PASS" starttime="20180505 22:16:27.618" endtime="20180505 22:16:27.620"></status>
</kw>
<tags>
<tag>functional</tag>
</tags>
<status status="PASS" starttime="20180505 22:16:16.240" endtime="20180505 22:16:27.620" critical="yes"></status>
</test>
<doc>Test Monochromator Parameters update.</doc>
<status status="PASS" starttime="20180505 21:49:28.662" endtime="20180505 22:16:27.622"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="18" fail="0">functional</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="UpdateMonochromatorParemeters">UpdateMonochromatorParemeters</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20180505 22:13:54.404" level="WARN">Multiple test cases with name 'From Enable Setup All Parameters in Red Grating and verify value' executed in test suite 'UpdateMonochromatorParemeters'.</msg>
</errors>
</robot>
